{"version":3,"sources":["country_guesser/countries lazy /^/.*/vector/.svg$/ groupOptions: {} namespace object","functions/useRoutePrefix.js","components/Header.js","components/doomsday/ExplanationModal.js","components/doomsday/FooterBar.js","functions/useDidUpdate.js","components/doomsday/DayButton.js","components/doomsday/DayButtonGrid.js","functions/formatScoreTime.js","components/score/Stopwatch.js","components/score/ScoreRow.js","services/storage.js","functions/useHighScoreState.js","components/score/AverageScore.js","components/score/ScoreBoard.js","components/doomsday/DoomdsdayGame.js","components/mindPalace/MindPalaceGame.js","views/MindGames.js","components/spyfall/AddSpyfallPlayer.js","components/spyfall/SpyfallPlayerView.js","components/spyfall/spyfallData.js","views/Spyfall.js","country_guesser/country_utils.js","country_guesser/modules/CountryGuessRow.js","country_guesser/countries/loading.svg","country_guesser/modules/DynamicSvg.js","country_guesser/modules/GuessTable.js","country_guesser/modules/TextHighlight.js","country_guesser/modules/InputSelect.js","country_guesser/countryGuesser.js","country_guesser/useCountries.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","routePrefixes","useRoutePrefix","delimiter","_useState","useState","_useState2","_slicedToArray","prefix","setPrefix","useEffect","pathname","window","location","i","length","current","startsWith","delimited","endsWith","slice","Header","props","open","setOpen","chooseGame","games","React","createElement","Box","height","align","as","direction","flex","justify","style","position","zIndex","Button","width","padding","margin","onClick","List","borderRadius","border","Heading","level","display","background","round","pad","gap","marginTop","entries","_ref","_ref2","name","value","Menu","key","label","items","v","hoverIndicator","centuryIndexMap","18","19","20","21","doomsdaysForMonth","1","2","3","4","5","6","7","8","9","10","11","12","doomsdaysForMonthInLeapYear","_objectSpread","ExplanationModal","day","moment","currentDay","centuryIndex","format","substring","year","Number","yearAfter1Step","yearAfter2Step","yearAfter3Step","nearestMultiple","weekDay","doomsday","isLeapYear","concat","dayNumber","doomsdayNumber","doomsdayToDayChain","Math","abs","push","alignSelf","className","Text","bottom","horizontal","vertical","Fragment","date","index","FooterBar","fullyHidden","setFullyHidden","_React$useState","_React$useState2","showExplanation","setShowExplanation","callback","deps","hasMount","useRef","useDidUpdate","isVisible","right","left","animation","visibility","Layer","onEsc","onClickOutside","responsive","onContinueClick","DayButton","anySelected","undefined","selectedDayOfWeek","isSelectedButFalse","expectedDayOfWeek","number","isCorrect","basis","boxShadow","setSelectedDayOfWeek","size","weekdays","DayButtonGrid","selected","setSelected","expected","grow","wrap","formatScoreTime","time","floor","Stopwatch","running","setTime","interval","setInterval","prevTime","clearInterval","ScoreRow","score","success","color","marginRight","storage","type","parseInt","localStorage","getItem","setItem","useHighScoreState","highScore","setHighScore","formatAverageTime","averageTime","AverageScore","_props$isTrimmed","scores","averageSize","isTrimmed","average","setAverage","_useHighScoreState","toString","_useHighScoreState2","bestAverage","setBestAverage","_useState3","_useState4","newHighScore","setNewHighScore","currentAverage","lastAmount","trimAvrage","relevantScores","reverse","successSorted","sort","a","b","slicedWorst","sortedScores","trimScores","console","info","sum","calulateAverageOfLastScores","max","ScoreBoard","_props$averagesToShow","_props$trimmedAverage","averagesToShow","trimmedAveragesToShow","streak","setStreak","bestStreak","setBestStreak","currentStreak","overflowY","require","momentRandom","DoomdsdayGame","generateRandomDay","endDate","startDate","parseDateToWeekDayNumber","initialDay","setCurrentDay","setScores","_useState5","_useState6","_useState7","_useState8","setRunning","_useState9","_useState10","_useState11","_useState12","setExpectedDayOfWeek","nextDay","MindPalaceGame","numberLength","choices","generateTextWithLength","setNumber","answer","setAnswer","_React$useState3","_React$useState4","hidden","setHidden","insertIntervaledDash","str","result","replace","toUpperCase","randomText","random","userSelect","textAlign","repeat","TextInput","placeholder","onChange","event","input","target","SubmitAnswer","MindGames","currentGame","setCurrentGame","currentOption","setCurrentOption","game","options","AddSpyfallPlayer","addNewPlayer","finishStage","playerName","setplayerName","setlocation","finishing","setfinishing","SpyfallPlayerView","currentPlayer","chosenLocation","isSpy","nextPlayer","sethidden","btnRef","ref","SpyfallPlayer","_createClass","_classCallCheck","this","GameStages","InitializeSpyFall","players","addPlayer","setgameStage","SpyfallAdminStart","_length","spyAmount","setspyAmount","startPassing","SpyfallPlaying","chosenSpiesIds","finishingRound","finishRound","Spyfall","exit","gameStage","setplayers","setchosenLocation","setchosenSpiesIds","_useState13","_useState14","currentPlayerIndex","setcurrentPlayerIndex","_useState15","_useState16","setfinishingRound","getValidLocations","filter","player","newPlayer","_toConsumableArray","playersWithLocations","alert","chosenPlayer","invalidSpyIds","spies","_loop","spyId","forEach","invalidId","initializeSpyfallGame","includes","Country","code_2","code_3","latitude","longitude","flag","load_countries","countries_object","values","country","country_object","toLowerCase","calculateDirection","sourceLat","sourceLng","targetLat","targetLng","dLat","toRad","dLng","sin","cos","bearing","atan2","sqrt","PI","Value","CountryGuessRow","distance","fontFamily","toFixed","translateX","translateY","rotate","fontSize","_circle","_circle2","_circle3","_excluded","_extends","assign","bind","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","svgRef","title","viewBox","fill","stroke","strokeWidth","r","cx","cy","attributeName","calcMode","dur","keySplines","repeatCount","begin","ForwardRef","forwardRef","_regeneratorRuntime","Op","hasOwn","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","reject","invoke","record","__await","unwrapped","error","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","val","object","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","DynamicSvg","svgName","failed","dynamicSvg","setDynamicSvg","_asyncToGenerator","_callee","dynamicSvgModule","_context","default","t0","DefaultSvg","loadSvg","Image","src","GuessTable","children","_ref$max","generateChild","child","minHeight","alignItems","min","Array","from","TextHighlight","text","highlight","parts","setparts","newParts","split","RegExp","part","InputSelect","_ref$value","_ref$optionNameOperan","optionNameOperand","_ref$maxDisplayValues","maxDisplayValues","searchValue","setsearchValue","shownOptions","setshownOptions","Select","onSearch","search","newOptions","splice","option","active","disabled","Guess","guessedCountry","actualCountry","country1","country2","distanceKm","lat1","lon1","lat2","lon2","dLon","calcCrow","CountryGuesser","countries","setcountries","countriesDict","setcountriesDict","setRound","roundOver","setRoundOver","chosenCountry","setChosenCountry","setguessedCountry","currentGuesses","setCurrentGuesses","nextRound","_getCountries","allCountries","countries_json","countriesDIct","fromEntries","getCountries","_getCountries2","newCountries","newCountriesDict","newChosenCountry","marginBottom","marginLeft","chosen","guess","theme","global","font","family","anchor","button","radius","View","url","componment","App","_useRoutePrefix","routePrefix","views","Grommet","full","BrowserRouter","Routes","view","Route","path","element","MainMenu","_useRoutePrefix3","Anchor","href","GitHubButton","data-icon","data-show-count","aria-label","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"+IAAA,IAAIA,EAAM,CACT,kBAAmB,CAClB,IACA,GAED,kBAAmB,CAClB,IACA,GAED,kBAAmB,CAClB,IACA,GAED,kBAAmB,CAClB,IACA,GAED,kBAAmB,CAClB,IACA,GAED,kBAAmB,CAClB,IACA,GAED,kBAAmB,CAClB,IACA,GAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CA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","file":"static/js/main.7fd1bab5.chunk.js","sourcesContent":["var map = {\n\t\"./ad/vector.svg\": [\n\t\t115,\n\t\t3\n\t],\n\t\"./ae/vector.svg\": [\n\t\t116,\n\t\t4\n\t],\n\t\"./af/vector.svg\": [\n\t\t117,\n\t\t5\n\t],\n\t\"./ag/vector.svg\": [\n\t\t118,\n\t\t6\n\t],\n\t\"./ai/vector.svg\": [\n\t\t119,\n\t\t7\n\t],\n\t\"./al/vector.svg\": [\n\t\t120,\n\t\t8\n\t],\n\t\"./am/vector.svg\": [\n\t\t121,\n\t\t9\n\t],\n\t\"./ao/vector.svg\": [\n\t\t122,\n\t\t10\n\t],\n\t\"./aq/vector.svg\": [\n\t\t123,\n\t\t11\n\t],\n\t\"./ar/vector.svg\": [\n\t\t124,\n\t\t12\n\t],\n\t\"./as/vector.svg\": [\n\t\t125,\n\t\t13\n\t],\n\t\"./at/vector.svg\": [\n\t\t126,\n\t\t14\n\t],\n\t\"./au/vector.svg\": [\n\t\t127,\n\t\t15\n\t],\n\t\"./aw/vector.svg\": [\n\t\t128,\n\t\t16\n\t],\n\t\"./ax/vector.svg\": [\n\t\t129,\n\t\t17\n\t],\n\t\"./az/vector.svg\": [\n\t\t130,\n\t\t18\n\t],\n\t\"./ba/vector.svg\": [\n\t\t131,\n\t\t19\n\t],\n\t\"./bb/vector.svg\": [\n\t\t132,\n\t\t20\n\t],\n\t\"./bd/vector.svg\": [\n\t\t133,\n\t\t21\n\t],\n\t\"./be/vector.svg\": [\n\t\t134,\n\t\t22\n\t],\n\t\"./bf/vector.svg\": [\n\t\t135,\n\t\t23\n\t],\n\t\"./bg/vector.svg\": [\n\t\t136,\n\t\t24\n\t],\n\t\"./bh/vector.svg\": [\n\t\t137,\n\t\t25\n\t],\n\t\"./bi/vector.svg\": [\n\t\t138,\n\t\t26\n\t],\n\t\"./bj/vector.svg\": [\n\t\t139,\n\t\t27\n\t],\n\t\"./bl/vector.svg\": [\n\t\t140,\n\t\t28\n\t],\n\t\"./bm/vector.svg\": [\n\t\t141,\n\t\t29\n\t],\n\t\"./bn/vector.svg\": [\n\t\t142,\n\t\t30\n\t],\n\t\"./bo/vector.svg\": [\n\t\t143,\n\t\t31\n\t],\n\t\"./bq/vector.svg\": [\n\t\t144,\n\t\t32\n\t],\n\t\"./br/vector.svg\": [\n\t\t145,\n\t\t33\n\t],\n\t\"./bs/vector.svg\": [\n\t\t146,\n\t\t34\n\t],\n\t\"./bt/vector.svg\": [\n\t\t147,\n\t\t35\n\t],\n\t\"./bv/vector.svg\": [\n\t\t148,\n\t\t36\n\t],\n\t\"./bw/vector.svg\": [\n\t\t149,\n\t\t37\n\t],\n\t\"./by/vector.svg\": [\n\t\t150,\n\t\t38\n\t],\n\t\"./bz/vector.svg\": [\n\t\t151,\n\t\t39\n\t],\n\t\"./ca/vector.svg\": [\n\t\t152,\n\t\t40\n\t],\n\t\"./cc/vector.svg\": [\n\t\t153,\n\t\t41\n\t],\n\t\"./cd/vector.svg\": [\n\t\t154,\n\t\t42\n\t],\n\t\"./cf/vector.svg\": [\n\t\t155,\n\t\t43\n\t],\n\t\"./cg/vector.svg\": [\n\t\t156,\n\t\t44\n\t],\n\t\"./ch/vector.svg\": [\n\t\t157,\n\t\t45\n\t],\n\t\"./ci/vector.svg\": [\n\t\t158,\n\t\t46\n\t],\n\t\"./ck/vector.svg\": [\n\t\t159,\n\t\t47\n\t],\n\t\"./cl/vector.svg\": [\n\t\t160,\n\t\t48\n\t],\n\t\"./cm/vector.svg\": [\n\t\t161,\n\t\t49\n\t],\n\t\"./cn/vector.svg\": [\n\t\t162,\n\t\t50\n\t],\n\t\"./co/vector.svg\": [\n\t\t163,\n\t\t51\n\t],\n\t\"./cr/vector.svg\": [\n\t\t164,\n\t\t52\n\t],\n\t\"./cu/vector.svg\": [\n\t\t165,\n\t\t53\n\t],\n\t\"./cv/vector.svg\": [\n\t\t166,\n\t\t54\n\t],\n\t\"./cw/vector.svg\": [\n\t\t167,\n\t\t55\n\t],\n\t\"./cx/vector.svg\": [\n\t\t168,\n\t\t56\n\t],\n\t\"./cy/vector.svg\": [\n\t\t169,\n\t\t57\n\t],\n\t\"./cz/vector.svg\": [\n\t\t170,\n\t\t58\n\t],\n\t\"./de/vector.svg\": [\n\t\t171,\n\t\t59\n\t],\n\t\"./dj/vector.svg\": [\n\t\t172,\n\t\t60\n\t],\n\t\"./dk/vector.svg\": [\n\t\t173,\n\t\t61\n\t],\n\t\"./dm/vector.svg\": [\n\t\t174,\n\t\t62\n\t],\n\t\"./do/vector.svg\": [\n\t\t175,\n\t\t63\n\t],\n\t\"./dz/vector.svg\": [\n\t\t176,\n\t\t64\n\t],\n\t\"./ec/vector.svg\": [\n\t\t177,\n\t\t65\n\t],\n\t\"./ee/vector.svg\": [\n\t\t178,\n\t\t66\n\t],\n\t\"./eg/vector.svg\": [\n\t\t179,\n\t\t67\n\t],\n\t\"./eh/vector.svg\": [\n\t\t180,\n\t\t68\n\t],\n\t\"./er/vector.svg\": [\n\t\t181,\n\t\t69\n\t],\n\t\"./es/vector.svg\": [\n\t\t182,\n\t\t70\n\t],\n\t\"./et/vector.svg\": [\n\t\t183,\n\t\t71\n\t],\n\t\"./fi/vector.svg\": [\n\t\t184,\n\t\t72\n\t],\n\t\"./fj/vector.svg\": [\n\t\t185,\n\t\t73\n\t],\n\t\"./fk/vector.svg\": [\n\t\t186,\n\t\t74\n\t],\n\t\"./fo/vector.svg\": [\n\t\t187,\n\t\t75\n\t],\n\t\"./fr/vector.svg\": [\n\t\t188,\n\t\t76\n\t],\n\t\"./ga/vector.svg\": [\n\t\t189,\n\t\t77\n\t],\n\t\"./gb/vector.svg\": [\n\t\t190,\n\t\t78\n\t],\n\t\"./gd/vector.svg\": [\n\t\t191,\n\t\t79\n\t],\n\t\"./ge/vector.svg\": [\n\t\t192,\n\t\t80\n\t],\n\t\"./gf/vector.svg\": [\n\t\t193,\n\t\t81\n\t],\n\t\"./gg/vector.svg\": [\n\t\t194,\n\t\t82\n\t],\n\t\"./gh/vector.svg\": [\n\t\t195,\n\t\t83\n\t],\n\t\"./gi/vector.svg\": [\n\t\t196,\n\t\t84\n\t],\n\t\"./gl/vector.svg\": [\n\t\t197,\n\t\t85\n\t],\n\t\"./gm/vector.svg\": [\n\t\t198,\n\t\t86\n\t],\n\t\"./gn/vector.svg\": [\n\t\t199,\n\t\t87\n\t],\n\t\"./gp/vector.svg\": [\n\t\t200,\n\t\t88\n\t],\n\t\"./gq/vector.svg\": [\n\t\t201,\n\t\t89\n\t],\n\t\"./gr/vector.svg\": [\n\t\t202,\n\t\t90\n\t],\n\t\"./gs/vector.svg\": [\n\t\t203,\n\t\t91\n\t],\n\t\"./gt/vector.svg\": [\n\t\t204,\n\t\t92\n\t],\n\t\"./gu/vector.svg\": [\n\t\t205,\n\t\t93\n\t],\n\t\"./gw/vector.svg\": [\n\t\t206,\n\t\t94\n\t],\n\t\"./gy/vector.svg\": [\n\t\t207,\n\t\t95\n\t],\n\t\"./hk/vector.svg\": [\n\t\t208,\n\t\t96\n\t],\n\t\"./hm/vector.svg\": [\n\t\t209,\n\t\t97\n\t],\n\t\"./hn/vector.svg\": [\n\t\t210,\n\t\t98\n\t],\n\t\"./hr/vector.svg\": [\n\t\t211,\n\t\t99\n\t],\n\t\"./ht/vector.svg\": [\n\t\t212,\n\t\t100\n\t],\n\t\"./hu/vector.svg\": [\n\t\t213,\n\t\t101\n\t],\n\t\"./id/vector.svg\": [\n\t\t214,\n\t\t102\n\t],\n\t\"./ie/vector.svg\": [\n\t\t215,\n\t\t103\n\t],\n\t\"./il/vector.svg\": [\n\t\t216,\n\t\t104\n\t],\n\t\"./im/vector.svg\": [\n\t\t217,\n\t\t105\n\t],\n\t\"./in/vector.svg\": [\n\t\t218,\n\t\t106\n\t],\n\t\"./io/vector.svg\": [\n\t\t219,\n\t\t107\n\t],\n\t\"./iq/vector.svg\": [\n\t\t220,\n\t\t108\n\t],\n\t\"./ir/vector.svg\": [\n\t\t221,\n\t\t109\n\t],\n\t\"./is/vector.svg\": [\n\t\t222,\n\t\t110\n\t],\n\t\"./it/vector.svg\": [\n\t\t223,\n\t\t111\n\t],\n\t\"./jm/vector.svg\": [\n\t\t224,\n\t\t112\n\t],\n\t\"./jo/vector.svg\": [\n\t\t225,\n\t\t113\n\t],\n\t\"./jp/vector.svg\": [\n\t\t226,\n\t\t114\n\t],\n\t\"./ke/vector.svg\": [\n\t\t227,\n\t\t115\n\t],\n\t\"./kg/vector.svg\": [\n\t\t228,\n\t\t116\n\t],\n\t\"./kh/vector.svg\": [\n\t\t229,\n\t\t117\n\t],\n\t\"./ki/vector.svg\": [\n\t\t230,\n\t\t118\n\t],\n\t\"./km/vector.svg\": [\n\t\t231,\n\t\t119\n\t],\n\t\"./kn/vector.svg\": [\n\t\t232,\n\t\t120\n\t],\n\t\"./kp/vector.svg\": [\n\t\t233,\n\t\t121\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 113;\nmodule.exports = webpackAsyncContext;","import { useEffect, useState } from \"react\";\r\n\r\nconst routePrefixes = [\"/Doomsday-algorithm-practice\", \"/test\", \"/\"];\r\n\r\nexport default function useRoutePrefix(delimiter) {\r\n  const [prefix, setPrefix] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let pathname = window.location.pathname;\r\n    for (let i = 0; i < routePrefixes.length; i++) {\r\n      let current = routePrefixes[i];\r\n      if (pathname.startsWith(current)) {\r\n        let delimited = current.endsWith(\"/\");\r\n        if (delimiter && !delimited) {\r\n          current = current + \"/\";\r\n        }\r\n        else if (delimited && !delimiter) {\r\n          current = current.slice(0, current.length - 1);\r\n        }\r\n        setPrefix(current);\r\n        break;\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return [prefix];\r\n}\r\n","import { Box, Button, Heading, Menu } from 'grommet';\r\nimport { List } from \"grommet-icons\";\r\nimport React, { useState } from 'react';\r\n\r\nfunction Header(props) {\r\n    const [open, setOpen] = useState(false);\r\n    let chooseGame = props.chooseGame;\r\n    let games = props.games;\r\n\r\n    return (\r\n        <Box>\r\n            <Box height=\"50px\"></Box>\r\n            <Box\r\n                align=\"center\"\r\n                as=\"header\"\r\n                direction=\"row\"\r\n                flex={false}\r\n                justify=\"start\"\r\n                height=\"50px\"\r\n                style={{ position: \"fixed\", zIndex: 10 }}\r\n            >\r\n                <Button\r\n                    height=\"50px\"\r\n                    width=\"50px\"\r\n                    padding=\"10px\"\r\n                    margin=\"5px 20px\"\r\n                    onClick={() => { setOpen(!open) }}\r\n                >\r\n                    <List style={{ borderRadius: \"200px\", border: \"1px solid white\", padding: \"5px\" }} />\r\n                </Button>\r\n                <Heading level={4}>Segal's Mind Games</Heading>\r\n            </Box>\r\n            <Box style={{ width: \"100%\", height: \"100%\", position: \"fixed\", display: open ? \"block\" : \"none\", zIndex: 11 }}\r\n                onClick={() => { setOpen(false) }}\r\n            />\r\n            <Box\r\n                background=\"white\"\r\n                round=\"small\"\r\n                pad=\"small\"\r\n                gap=\"large\"\r\n                style={{ position: \"absolute\", display: open ? \"block\" : \"none\", marginTop: \"50px\", zIndex: 12 }}>\r\n                {Object.entries(games).map(([name, value], i) =>\r\n                    typeof (value) === \"object\" ?\r\n                        <Menu key={i} label={name} items={value.map(v => {\r\n                            return {\r\n                                label: v,\r\n                                onClick: () => { chooseGame(name, v); setOpen(false) }\r\n                            }\r\n                        })} /> :\r\n                        <Button key={i} hoverIndicator onClick={() => { chooseGame(name, \"\"); setOpen(false) }}> {name} </Button>\r\n                )}\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React, {Fragment} from 'react';\r\nimport {Box, Heading, Text} from \"grommet\";\r\nimport * as moment from \"moment\";\r\n\r\nconst centuryIndexMap = {18: 5, 19: 3, 20: 2, 21: 0};\r\nconst doomsdaysForMonth = {1: \"03\", 2: \"14\", 3: \"07\", 4: \"04\", 5: \"09\", 6: \"06\", 7: \"11\", 8: \"08\", 9: \"05\", 10: \"10\", 11: \"07\", 12: \"12\"};\r\nconst doomsdaysForMonthInLeapYear = {...doomsdaysForMonth, 1: \"04\", 2: \"15\"};\r\n\r\nexport default function ExplanationModal(props) {\r\n\r\n  let day = moment(props.currentDay);\r\n\r\n  let centuryIndex = centuryIndexMap[day.format(\"Y\").substring(0, 2)];\r\n  let year = Number(day.format(\"YY\"));\r\n  let yearAfter1Step = year % 2 === 1 ? (year + 11) : year;\r\n  let yearAfter2Step = yearAfter1Step / 2;\r\n  let yearAfter3Step = yearAfter2Step % 2 === 1 ? yearAfter2Step + 11 : yearAfter2Step;\r\n  let nearestMultiple = yearAfter3Step % 7 === 0 ?  yearAfter3Step : yearAfter3Step + 7 - (yearAfter3Step % 7);\r\n  let weekDay = (nearestMultiple - yearAfter3Step + centuryIndex) % 7;\r\n  let doomsday = day.isLeapYear() ?\r\n      `${day.format(\"MM-\")}${doomsdaysForMonthInLeapYear[day.format(\"M\")]}` :\r\n      `${day.format(\"MM-\")}${doomsdaysForMonth[day.format(\"M\")]}`;\r\n\r\n  let dayNumber = Number(day.format(\"D\"));\r\n  let doomsdayNumber = Number(doomsday.substring(3));\r\n  let doomsdayToDayChain = [];\r\n\r\n  while (Math.abs(dayNumber - doomsdayNumber) > 6) {\r\n    doomsdayToDayChain.push(`${day.format(\"MM-\")}${doomsdayNumber < 10 ? `0${doomsdayNumber}` : doomsdayNumber}`);\r\n    if (doomsdayNumber < dayNumber) doomsdayNumber += 7;\r\n    else doomsdayNumber -= 7;\r\n  }\r\n  if (doomsdayToDayChain.length > 0) {\r\n    doomsdayToDayChain.push(`${day.format(\"MM-\")}${doomsdayNumber < 10 ? `0${doomsdayNumber}` : doomsdayNumber}`);\r\n  }\r\n\r\n  return <Box direction={\"column\"} margin={\"medium\"}>\r\n    <Heading alignSelf={\"center\"}>\r\n      <span className={\"century\"}>{day.format(\"Y\").substring(0, 2)}</span>\r\n      <span className={\"year\"}>{day.format(\"YY\")}</span>-\r\n      <span className={\"month\"}>{day.format(\"MM\")}</span>-\r\n      <span className={\"day\"}>{day.format(\"DD\")}</span>\r\n    </Heading>\r\n    <Text margin={{bottom: \"xsmall\"}}>\r\n      Century index for the <b className={\"century\"}>{day.format(\"Y\").substring(0, 2)}</b>00s is <b className={\"centuryIndex\"}>{centuryIndex}</b>.\r\n    </Text>\r\n    <Text>\r\n      Calculating the year index for year <b className={\"year\"}>{day.format(\"YY\")}</b> using \"odd + 11\" method:\r\n    </Text>\r\n    <Box pad={{horizontal: \"medium\", vertical: 'xsmall'}} margin={{bottom: \"xsmall\"}}>\r\n      {year !== yearAfter1Step &&\r\n        <Text>{year} is odd, adding 11: {year} + 11 = {yearAfter1Step};</Text>\r\n      }\r\n      <Text>{yearAfter1Step} is even, dividing by 2: {yearAfter1Step} / 2 = { yearAfter2Step === yearAfter3Step ? <><b className={\"yearIndex\"}>{yearAfter2Step}</b>.</> : `${yearAfter2Step};`}</Text>\r\n      {yearAfter2Step !== yearAfter3Step &&\r\n        <Text>{yearAfter2Step} is odd, adding 11: {yearAfter2Step} + 11 = <b className={\"yearIndex\"}>{yearAfter3Step}</b>.</Text>\r\n      }\r\n    </Box>\r\n    <Text>The nearest higher multiple of 7 to <b className={\"yearIndex\"}>{yearAfter3Step}</b> is <b className={\"nearestMultiple\"}>{nearestMultiple}</b>.</Text>\r\n    <Text margin={{bottom: \"xsmall\"}}>Calculating the weekday of the doomsday: (<b className={\"nearestMultiple\"}>{nearestMultiple}</b> - <b className={\"yearIndex\"}>{yearAfter3Step}</b> + <b className={\"centuryIndex\"}>{centuryIndex}</b>) mod 7 = <b className={\"doomsdayWeekDay\"}>{weekDay}</b> <b>({moment.weekdays(weekDay)})</b>.</Text>\r\n    <Text>\r\n      Doomsday for {day.format(\"MMMM\")} is <b>{doomsday.substring(0, 3)}</b><b className={doomsdayToDayChain.length === 0 ? \"doomsday\" : \"\"}>{doomsday.substring(3)}</b>{day.isLeapYear() && (day.format(\"M\") < 3) && <b> (leap year)</b>}.\r\n    </Text>\r\n    {doomsdayToDayChain.length > 0 && <>\r\n      <Text>Selecting a doomsday closer to our date:</Text>\r\n      <Box pad={{horizontal: \"medium\", vertical: 'xsmall'}}>\r\n        <Text>\r\n          {doomsdayToDayChain.map((date, index) => {\r\n            if (index === doomsdayToDayChain.length - 1) return <Fragment key={index}><b>{date.substring(0, 3)}</b><b className={\"doomsday\"}>{date.substring(3)}</b>.</Fragment>;\r\n            return `${date} -> `\r\n          })}\r\n        </Text>\r\n      </Box>\r\n      </>\r\n    }\r\n    {doomsdayNumber === dayNumber ?\r\n        <Text>Our date matches the doomsday, and it is <b>{day.format(\"dddd\")}</b>.</Text> :\r\n        <Text>Calculating the day of the week: (<b className={\"doomsdayWeekDay\"}>{weekDay}</b> {dayNumber > doomsdayNumber ?\r\n            <> + (<b className={\"day\"}>{dayNumber}</b> - <b className={\"doomsday\"}>{doomsdayNumber}</b>)</> :\r\n            <> - (<b className={\"doomsday\"}>{doomsdayNumber}</b> - <b className={\"day\"}>{dayNumber}</b>)</>\r\n        }) mod 7 = <b>{day.format(\"d\")} ({day.format(\"dddd\")})</b>.</Text>\r\n    }\r\n  </Box>\r\n}","import React, {useState} from 'react';\r\nimport {Box, Button, Layer} from \"grommet\";\r\nimport useDidUpdate from \"../../functions/useDidUpdate\";\r\nimport ExplanationModal from \"./ExplanationModal\";\r\n\r\nexport default function FooterBar(props) {\r\n\r\n  const [fullyHidden, setFullyHidden] = useState(true);\r\n  const [showExplanation, setShowExplanation] = React.useState(false);\r\n\r\n  useDidUpdate(() => {\r\n    setFullyHidden(false)\r\n  }, [props.isVisible]);\r\n\r\n  return <Box\r\n    key={props.isVisible}\r\n    direction={\"row\"}\r\n    justify={\"between\"}\r\n    margin={{bottom: \"small\", right: \"large\", left: \"large\"}}\r\n    animation={props.isVisible ? {\"type\": \"fadeIn\"} : {\"type\": \"fadeOut\", \"duration\": 200}}\r\n  >\r\n    <Button\r\n        label={\"Explanation\"}\r\n        onClick={props.isVisible ? () => setShowExplanation(true) : () => {}}\r\n        style={{visibility: (fullyHidden ? \"hidden\" : \"visible\")}}\r\n    />\r\n    {showExplanation && (\r\n        <Layer\r\n            onEsc={() => setShowExplanation(false)}\r\n            onClickOutside={() => setShowExplanation(false)}\r\n            margin={\"medium\"}\r\n            className={\"modal\"}\r\n            responsive={false}\r\n        >\r\n          <ExplanationModal currentDay={props.currentDay}/>\r\n        </Layer>\r\n    )}\r\n    <Button\r\n      label={\"Continue\"}\r\n      onClick={props.isVisible ? props.onContinueClick : () => {}}\r\n      style={{visibility: (fullyHidden ? \"hidden\" : \"visible\")}}\r\n    />\r\n  </Box>\r\n}\r\n","import {useEffect, useRef} from 'react';\r\n\r\nexport default function useDidUpdate (callback, deps) {\r\n  const hasMount = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (hasMount.current) {\r\n      callback()\r\n    } else {\r\n      hasMount.current = true\r\n    }\r\n  }, deps)\r\n}\r\n","import {Box, Text} from \"grommet\";\r\nimport React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nexport default function DayButton(props) {\r\n\r\n  const anySelected = props.selectedDayOfWeek !== undefined;\r\n\r\n  const isSelectedButFalse =  anySelected &&\r\n    props.selectedDayOfWeek !== props.expectedDayOfWeek &&\r\n    props.number === props.selectedDayOfWeek;\r\n\r\n  const isCorrect = anySelected &&\r\n    props.number === props.expectedDayOfWeek;\r\n\r\n  return props.number !== undefined ?\r\n    <Box\r\n      flex={{'grow': 1}}\r\n      basis={'xxsmall'}\r\n      align={'center'}\r\n      justify={'center'}\r\n      style={{boxShadow: \"none\"}}\r\n      animation={(isSelectedButFalse || isCorrect) ? {\"type\": \"zoomIn\", \"duration\": 400} : {}}\r\n      background={isSelectedButFalse ? 'status-error' : (isCorrect ? 'status-ok' : \"\")}\r\n      onClick={() => {\r\n        if (!anySelected) props.setSelectedDayOfWeek(props.number)\r\n      }}\r\n    >\r\n      <Text size={\"large\"}>{moment.weekdays(props.number)}</Text>\r\n    </Box> :\r\n    <Box\r\n      flex={{'grow': 1}}\r\n      basis={'xxsmall'}\r\n    />;\r\n}\r\n","import {Box} from \"grommet\";\r\nimport DayButton from \"./DayButton\";\r\nimport React from \"react\";\r\n\r\nexport default function DayButtonGrid(props) {\r\n\r\n  let selected = props.selectedDayOfWeek;\r\n  let setSelected = props.setSelectedDayOfWeek;\r\n  let expected = props.expectedDayOfWeek;\r\n\r\n  return <Box\r\n    flex={{grow: 2}}\r\n    direction={'column'}\r\n    justify={'center'}\r\n    alignSelf={'center'}\r\n    style={{width: \"100%\"}}\r\n  >\r\n    <Box\r\n      flex={'grow'}\r\n      direction={\"row\"}\r\n      align={'stretch'}\r\n      wrap={true}\r\n    >\r\n      <DayButton number={1} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n      <DayButton number={2} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n      <DayButton number={3} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n    </Box>\r\n    <Box\r\n      flex={'grow'}\r\n      direction={\"row\"}\r\n      align={'stretch'}\r\n      wrap={true}\r\n    >\r\n      <DayButton number={4} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n      <DayButton number={5} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n      <DayButton number={6} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n    </Box>\r\n    <Box\r\n      flex={'grow'}\r\n      direction={\"row\"}\r\n      align={'stretch'}\r\n      wrap={true}\r\n    >\r\n      <DayButton />\r\n      <DayButton number={0} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n      <DayButton />\r\n    </Box>\r\n  </Box>\r\n}\r\n","export default function formatScoreTime (time) {\r\n    let minutes = (\"0\" + Math.floor(time / 60000) % 60).slice(-2);\r\n    let seconds = (\"0\" + Math.floor(time / 1000) % 60).slice(-2);\r\n    let milliSeconds = (\"0\" + Math.floor(time / 10) % 100).slice(-2);\r\n    return minutes + \":\" + seconds + \".\" + milliSeconds;\r\n  }","import React, { useEffect } from 'react';\r\nimport formatScoreTime from \"../../functions/formatScoreTime.js\";\r\nimport { Box, Heading } from 'grommet';\r\n\r\nfunction Stopwatch(props) {\r\n  let running = props.running;\r\n  let time = props.time;\r\n  let setTime = props.setTime;\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (running) {\r\n      interval = setInterval(() => {\r\n        setTime((prevTime) => prevTime + 10);\r\n      }, 10);\r\n    } else if (!running) {\r\n      clearInterval(interval);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [running, setTime]);\r\n\r\n  return (\r\n    <Box style={{margin: \"0\"}}>\r\n      <Heading level={3}>{formatScoreTime(time)}</Heading>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Stopwatch;","import React from 'react';\r\nimport { Box, Text } from 'grommet';\r\nimport formatScoreTime from \"../../functions/formatScoreTime.js\";\r\n\r\n\r\nfunction ScoreRow(props) {\r\n    let score = props.score;\r\n    let success = props.success;\r\n    let index = props.index;\r\n\r\n    return (\r\n        <Box\r\n            flex={'grow'}\r\n            direction={\"row\"}\r\n            align={'stretch'}\r\n            height=\"25px\"\r\n            wrap={true}>\r\n            <Text color=\"darkslategrey\" style={{ marginRight: \"10px\" }}>{index + 1}</Text>\r\n            <Text color={success ? \"white\" : \"darkred\"}>{formatScoreTime(score)}</Text>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ScoreRow;","const getHighScore = (type) => parseInt(localStorage.getItem('highScore' + type)) || 0;\r\nconst setHighScore = (type, score) => {\r\n  localStorage.setItem('highScore' + type, score)\r\n};\r\n\r\nexport const storage = {\r\n  getHighScore,\r\n  setHighScore\r\n};","import { useState, useEffect } from 'react';\r\nimport {storage} from \"../services/storage\";\r\n\r\nexport function useHighScoreState(type) {\r\n  const [highScore, setHighScore] = useState(storage.getHighScore(type));\r\n\r\n  useEffect(() => {\r\n    storage.setHighScore(type, highScore)\r\n  }, [highScore]);\r\n\r\n  return [highScore, setHighScore];\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Box, Text } from 'grommet';\r\nimport formatScoreTime from \"../../functions/formatScoreTime.js\";\r\nimport { useHighScoreState } from \"../../functions/useHighScoreState.js\";\r\n\r\nconst trimScores = (scores) => {\r\n  let successSorted = scores.sort((a, b) => a[1] - b[1]);\r\n  let slicedWorst = false;\r\n  if (!successSorted[0][1]) {\r\n    successSorted = successSorted.slice(1);\r\n    slicedWorst = true;\r\n  }\r\n  if (!successSorted[0][1]) {\r\n    return successSorted;\r\n  }\r\n  let sortedScores = successSorted.sort((a, b) => a[0] - b[0]);\r\n  if (!slicedWorst) {\r\n    sortedScores = sortedScores.slice(0, -1);\r\n  }\r\n  return sortedScores.slice(1);\r\n}\r\n\r\nconst calulateAverageOfLastScores = (scores, lastAmount, trimAvrage) => {\r\n  let scoreCopy = scores.slice(0);\r\n  let relevantScores = scoreCopy.reverse().slice(0, lastAmount);\r\n  if (relevantScores.length < lastAmount) {\r\n    return 0;\r\n  }\r\n\r\n  if (trimAvrage) {\r\n    relevantScores = trimScores(relevantScores);\r\n    console.info(relevantScores);\r\n  }\r\n\r\n  let sum = 0;\r\n  for (let i = 0; i < relevantScores.length; i++) {\r\n    if (relevantScores[i][1] === false) {\r\n      return -1;\r\n    }\r\n    sum += relevantScores[i][0];\r\n  }\r\n\r\n  return sum / relevantScores.length;\r\n}\r\n\r\nconst formatAverageTime = (averageTime) => {\r\n  if (averageTime === -1) {\r\n    return \"DNF\";\r\n  } else if (averageTime === 0) {\r\n    return \"-\";\r\n  }\r\n  return formatScoreTime(averageTime);\r\n}\r\n\r\n\r\nfunction AverageScore(props) {\r\n  let scores = props.scores;\r\n  let averageSize = props.averageSize;\r\n  let isTrimmed = props.isTrimmed ?? false;\r\n  let type = props.type + (isTrimmed ? \"trimmed\" : \"\");\r\n  let [average, setAverage] = useState(0);\r\n  let [bestAverage, setBestAverage] = useHighScoreState(type + averageSize.toString());\r\n  let [newHighScore, setNewHighScore] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setNewHighScore(false);\r\n    let currentAverage = calulateAverageOfLastScores(scores, averageSize, isTrimmed);\r\n    setAverage(currentAverage);\r\n\r\n    if (currentAverage > 0 && bestAverage === 0 || (currentAverage > 0 && (bestAverage <= 0 || bestAverage > currentAverage))) {\r\n      setBestAverage(Math.max(currentAverage, 0));\r\n      setNewHighScore(true);\r\n    }\r\n  }, [scores.length]);\r\n\r\n  return (\r\n    <Box>\r\n      {averageSize === 1\r\n        ? <Text color={newHighScore ? \"orange\" : \"white\"}>Top Score: {formatAverageTime(bestAverage)}</Text>\r\n        : <Box>\r\n          <Text> {isTrimmed ? \"Trimmed average\" : \"Average\"}  of {averageSize}: {formatAverageTime(average)}</Text>\r\n          <Text color={newHighScore ? \"orange\" : \"white\"}>Best {isTrimmed ? \"trimmed \" : \"\"} average of {averageSize}: {formatAverageTime(bestAverage)}</Text>\r\n        </Box>\r\n      }\r\n    </Box>\r\n\r\n  );\r\n};\r\n\r\nexport default AverageScore;","import React, { useEffect, useState } from 'react';\r\nimport { Box, Heading, Text } from 'grommet';\r\nimport ScoreRow from './ScoreRow';\r\nimport { useHighScoreState } from \"../../functions/useHighScoreState.js\";\r\nimport AverageScore from \"./AverageScore.js\";\r\n\r\n\r\nfunction ScoreBoard(props) {\r\n  let scores = props.scores;\r\n  let averagesToShow = props.averagesToShow ?? [];\r\n  let trimmedAveragesToShow = props.trimmedAveragesToShow ?? [];\r\n  let type = props.type;\r\n  let [streak, setStreak] = useState(0);\r\n  let [bestStreak, setBestStreak] = useHighScoreState(type + \"streak\");\r\n  let [newHighScore, setNewHighScore] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setNewHighScore(false);\r\n    if (scores.length > 0) {\r\n      let lastScore = scores[scores.length - 1]\r\n      if (lastScore[1] === false) {\r\n        setStreak(0);\r\n      }\r\n      else {\r\n        let currentStreak = streak + 1;\r\n        if (bestStreak < currentStreak) {\r\n          setBestStreak(currentStreak);\r\n          setNewHighScore(true);\r\n        }\r\n        setStreak(currentStreak);\r\n      }\r\n    }\r\n  }, [scores.length, scores]);\r\n\r\n  return (\r\n    <Box\r\n      flex={'grow'}\r\n      direction={\"row\"}\r\n      align={'stretch'}\r\n      wrap={true}\r\n      style={{ padding: \"5px\" }}\r\n    >\r\n      <Box\r\n        align={'start'}\r\n        style={{ padding: \"5px 10px\" }}\r\n        justify={'center'}>\r\n        <Heading level={3} style={{margin: \"0\"}}>Scores:</Heading>\r\n        <Box width={\"300px\"} height={\"150px\"}\r\n          style={{ border: \"2px solid white\", padding: \"10px\", overflowY: \"scroll\" }}>\r\n          {scores.length > 0 ? (scores.map(([score, success], index) =>\r\n            <ScoreRow key={index} index={index} score={score} success={success} />).reverse()\r\n          ) : <Text>No scores yet...</Text>}\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        align={'start'}\r\n        style={{ padding: \"15px\" }}\r\n        justify={'center'}>\r\n        <Text>Current Streak: {streak}</Text>\r\n        <Text color={newHighScore ? \"orange\" : \"white\"}>Best Streak: {bestStreak}</Text>\r\n        {averagesToShow.map((averageSize, i) =>\r\n          <AverageScore key={i} scores={scores} averageSize={averageSize} type={type}/>\r\n        )}\r\n        {trimmedAveragesToShow.map((averageSize, i) =>\r\n          <AverageScore key={i} scores={scores} averageSize={averageSize} type={type} isTrimmed={true}/>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ScoreBoard;","import React, { useEffect, useState } from 'react';\r\nimport { Box, Heading } from 'grommet';\r\nimport FooterBar from \"./FooterBar\";\r\nimport DayButtonGrid from \"./DayButtonGrid\";\r\nimport Stopwatch from \"../score/Stopwatch\";\r\nimport ScoreBoard from \"../score/ScoreBoard\";\r\nconst moment = require('moment');\r\nconst momentRandom = require('moment-random');\r\n\r\nfunction DoomdsdayGame(props) {\r\n  const generateRandomDay = () => momentRandom(\r\n    moment(props.endDate),\r\n    moment(props.startDate)\r\n  );\r\n\r\n  const parseDateToWeekDayNumber = (date) => Number(date.format('d'));\r\n\r\n  let initialDay = generateRandomDay();\r\n  const [currentDay, setCurrentDay] = useState(initialDay.format(\"Y-MM-DD\"));\r\n  const [scores, setScores] = useState([]);\r\n  const [selectedDayOfWeek, setSelectedDayOfWeek] = useState();\r\n  const [running, setRunning] = useState(true);\r\n  const [time, setTime] = useState(0);\r\n  const [expectedDayOfWeek, setExpectedDayOfWeek] = useState(parseDateToWeekDayNumber(initialDay));\r\n\r\n  useEffect(() => {\r\n    if (selectedDayOfWeek !== undefined) {\r\n      setRunning(false);\r\n      // if (selectedDayOfWeek === 0) {\r\n      if (selectedDayOfWeek === expectedDayOfWeek) {\r\n        scores.push([time, true]);\r\n      } else {\r\n        scores.push([time, false]);\r\n      }\r\n      setScores(scores);\r\n    }\r\n  }, [selectedDayOfWeek]);\r\n\r\n  const startNewRound = () => {\r\n    let nextDay = generateRandomDay();\r\n    setSelectedDayOfWeek(undefined);\r\n    setCurrentDay(nextDay.format(\"Y-MM-DD\"));\r\n    setExpectedDayOfWeek(parseDateToWeekDayNumber(nextDay));\r\n    setRunning(true);\r\n    setTime(0);\r\n  };\r\n\r\n  return (\r\n    <Box direction={\"column\"} flex={\"grow\"} style={{ width: \"100%\" }} alignSelf={'center'}>\r\n      <Box\r\n        key={currentDay}\r\n        flex={{ grow: 1 }}\r\n        align={'center'}\r\n        justify={'center'}\r\n        animation={{ \"type\": \"fadeIn\" }}\r\n      >\r\n        <Box flex={{ grow: 4 }}>\r\n          <Heading size={\"large\"} level={'1'}>\r\n            {currentDay}\r\n          </Heading>\r\n        </Box>\r\n      </Box>\r\n      <DayButtonGrid selectedDayOfWeek={selectedDayOfWeek} setSelectedDayOfWeek={setSelectedDayOfWeek} expectedDayOfWeek={expectedDayOfWeek} />\r\n      <Box align={'center'}>\r\n        <Stopwatch running={running} time={time} setTime={setTime} />\r\n        <ScoreBoard scores={scores} type=\"doomsday\" averagesToShow={[1, 3]} trimmedAveragesToShow={[5]}/>\r\n      </Box>\r\n      <FooterBar onContinueClick={startNewRound} isVisible={selectedDayOfWeek !== undefined} currentDay={currentDay} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default DoomdsdayGame;\r\n","import { Box, Button, Heading, TextInput } from \"grommet\";\r\nimport React, { useState } from \"react\";\r\nimport ScoreBoard from \"../score/ScoreBoard\";\r\nimport Stopwatch from \"../score/Stopwatch\";\r\n\r\nfunction MindPalaceGame(props) {\r\n  let numberLength = props.numberLength;\r\n  let choices = props.choices;\r\n  let type = props.type;\r\n  const [scores, setScores] = useState([]);\r\n  const [running, setRunning] = useState(true);\r\n  const [number, setNumber] = useState(generateTextWithLength());\r\n  const [answer, setAnswer] = React.useState(\"\");\r\n  const [hidden, setHidden] = React.useState(false);\r\n  const [time, setTime] = useState(0);\r\n\r\n  function insertIntervaledDash(str) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < str.length; i += 5) {\r\n      const chunk = str.slice(i, i + 5);\r\n      result += chunk + \"-\";\r\n    }\r\n\r\n    // Remove the trailing \"-\" if present\r\n    result = result.replace(/-$/, \"\");\r\n\r\n    return result.toUpperCase();\r\n  }\r\n\r\n  function generateTextWithLength() {\r\n    let randomText = \"\";\r\n    for (let i = 0; i < numberLength; i++) {\r\n      let chosenOption = choices[Math.floor(Math.random() * choices.length)];\r\n      randomText += chosenOption;\r\n    }\r\n\r\n    return randomText;\r\n  }\r\n\r\n  const SubmitAnswer = () => {\r\n    let success = false;\r\n    if (number.toUpperCase() === answer.toUpperCase()) {\r\n      success = true;\r\n    }\r\n\r\n    setRunning(false);\r\n    setHidden(false);\r\n    scores.push([time, success]);\r\n    setScores(scores);\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setTime(0);\r\n    setRunning(true);\r\n    setNumber(generateTextWithLength());\r\n    setAnswer(\"\");\r\n  };\r\n\r\n  const handleInput = (input) => {\r\n    setHidden(true);\r\n    setAnswer(input.toUpperCase());\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      direction={\"column\"}\r\n      flex={\"grow\"}\r\n      style={{ width: \"100%\" }}\r\n      alignSelf={\"center\"}\r\n    >\r\n      <Box\r\n        flex={{ grow: 1 }}\r\n        align={\"center\"}\r\n        justify={\"center\"}\r\n        animation={{ type: \"fadeIn\" }}\r\n      >\r\n        <Box flex={{ grow: 4 }}>\r\n          <Heading size={\"large\"} level={\"3\"} style={{ userSelect: \"none\", margin: \"10px 5px\", textAlign: \"center\"}}>\r\n            {!hidden\r\n              ? insertIntervaledDash(number)\r\n              : insertIntervaledDash(\"X\".repeat(answer.length))}\r\n          </Heading>\r\n        </Box>\r\n\r\n        {running ? (\r\n          <TextInput\r\n            placeholder=\"Type your answer here\"\r\n            value={answer}\r\n            onChange={(event) => handleInput(event.target.value)}\r\n          />\r\n        ) : (\r\n          <Heading level={\"3\"}>{insertIntervaledDash(answer)}</Heading>\r\n        )}\r\n        <Button\r\n          label=\"Submit\"\r\n          onClick={() => SubmitAnswer()}\r\n          style={{\r\n            marginTop: \"15px\",\r\n            visibility: !running ? \"hidden\" : \"visible\",\r\n          }}\r\n        />\r\n      </Box>\r\n\r\n      <Box\r\n        direction={\"row\"}\r\n        justify={\"center\"}\r\n        margin={{ bottom: \"small\", right: \"large\", left: \"large\" }}\r\n      >\r\n        <Button\r\n          label=\"Continue\"\r\n          style={{ visibility: running ? \"hidden\" : \"visible\" }}\r\n          onClick={() => resetGame()}\r\n        />\r\n      </Box>\r\n\r\n      <Box align={\"center\"}>\r\n        <Stopwatch running={running} time={time} setTime={setTime} />\r\n        <ScoreBoard\r\n          scores={scores}\r\n          type={type + numberLength}\r\n          averagesToShow={[1, 3]}\r\n          trimmedAveragesToShow={numberLength <= 10 ? [5, 10] : [5]}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MindPalaceGame;\r\n","import { Text } from \"grommet\";\r\nimport React, { useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport DoomdsdayGame from \"../components/doomsday/DoomdsdayGame\";\r\nimport MindPalaceGame from \"../components/mindPalace/MindPalaceGame\";\r\n\r\nexport const doomsday = \"Doomsday Algorithm\";\r\nexport const numberMemory = \"Numbers\";\r\nexport const alphabetMemory = \"Alphabet\";\r\n\r\nexport function MindGames(props) {\r\n  const [currentGame, setCurrentGame] = useState(doomsday);\r\n  const [currentOption, setCurrentOption] = useState(0);\r\n\r\n  const chooseNewGame = (game, options) => {\r\n    setCurrentGame(game);\r\n    setCurrentOption(options);\r\n  };\r\n\r\n  const games = {};\r\n  games[doomsday] = \"\";\r\n  games[numberMemory] = [10, 15, 20, 30];\r\n  games[alphabetMemory] = [10, 15, 20, 30];\r\n\r\n  return (\r\n    <div>\r\n      <Header chooseGame={chooseNewGame} games={games} />\r\n      {currentGame === doomsday ? (\r\n        <DoomdsdayGame startDate={\"1800-01-01\"} endDate={\"2199-12-31\"} />\r\n      ) : currentGame === numberMemory ? (\r\n        <MindPalaceGame\r\n          key={currentGame + currentOption}\r\n          type={\"numberMemory\" + currentOption}\r\n          numberLength={currentOption}\r\n          choices={[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"]}\r\n        />\r\n      ) : currentGame === alphabetMemory ? (\r\n        <MindPalaceGame\r\n          key={currentGame + currentOption}\r\n          type={\"alphabetMemory\" + currentOption}\r\n          numberLength={currentOption}\r\n          choices={[\r\n            \"A\",\r\n            \"B\",\r\n            \"C\",\r\n            \"D\",\r\n            \"E\",\r\n            \"F\",\r\n            \"G\",\r\n            \"H\",\r\n            \"I\",\r\n            \"J\",\r\n            \"K\",\r\n            \"L\",\r\n            \"M\",\r\n            \"N\",\r\n            \"O\",\r\n            \"P\",\r\n            \"Q\",\r\n            \"R\",\r\n            \"S\",\r\n            \"T\",\r\n            \"U\",\r\n            \"V\",\r\n            \"W\",\r\n            \"X\",\r\n            \"Y\",\r\n            \"Z\",\r\n          ]}\r\n        />\r\n      ) : (\r\n        <Text>Invalid Game Selected</Text>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Button, TextInput } from \"grommet\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport function AddSpyfallPlayer({ index, addNewPlayer, finishStage }) {\r\n  const [playerName, setplayerName] = useState(\"Player \" + (index + 1));\r\n  const [location, setlocation] = useState(\"\");\r\n  const [finishing, setfinishing] = useState(0);\r\n\r\n  const finish = () => {\r\n    setfinishing(finishing + 1);\r\n    if (finishing >= 1) {\r\n      finishStage();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <h3>Name:</h3>\r\n      <TextInput\r\n        onChange={(event) => setplayerName(event.target.value)}\r\n        value={playerName}\r\n      />\r\n      <h3>Location:</h3>\r\n      <TextInput\r\n        onChange={(event) => setlocation(event.target.value)}\r\n        value={location}\r\n      />\r\n\r\n      <Button\r\n        margin={{vertical: \"10px\"}}\r\n        onClick={() => addNewPlayer(playerName, location)}\r\n        label=\"Next Player\"\r\n      ></Button>\r\n      <Button\r\n        margin={{vertical: \"10px\"}}\r\n        onClick={finish}\r\n        label={finishing === 0 ? \"Finish Stage\" : \"Are you sure?\"}\r\n      ></Button>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Button, Text } from \"grommet\";\r\nimport React, { useRef, useState } from \"react\";\r\n\r\nexport function SpyfallPlayerView({\r\n  currentPlayer,\r\n  chosenLocation,\r\n  isSpy,\r\n  nextPlayer,\r\n}) {\r\n  const [hidden, sethidden] = useState(true);\r\n  const btnRef = useRef(null);\r\n\r\n  return (\r\n    <Box>\r\n      <Text>Pass to {currentPlayer.name}</Text>\r\n      <Button\r\n        ref={btnRef}\r\n        onClick={() => sethidden((current) => !current)}\r\n      >\r\n        Show Role\r\n      </Button>\r\n      <Text>\r\n        {hidden\r\n          ? \"Press Button to show role\"\r\n          : isSpy\r\n          ? \"You are the spy!\"\r\n          : `The location is ${chosenLocation}`}\r\n      </Text>\r\n\r\n      <Button\r\n        onClick={nextPlayer}\r\n        label=\"Next Player\"\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","export class SpyfallPlayer {\r\n    constructor(index, name, location) {\r\n      this.index = index;\r\n      this.name = name;\r\n      this.location = location;\r\n    }\r\n  }","import { Box, Button, Heading, Text, TextInput } from \"grommet\";\r\nimport React, { useState } from \"react\";\r\nimport { AddSpyfallPlayer } from \"../components/spyfall/AddSpyfallPlayer\";\r\nimport { SpyfallPlayerView } from \"../components/spyfall/SpyfallPlayerView\";\r\nimport { SpyfallPlayer } from \"../components/spyfall/spyfallData\";\r\nimport Stopwatch from \"./../components/score/Stopwatch\";\r\n\r\nconst GameStages = {\r\n  initializing: 0,\r\n  passing: 1,\r\n  adminStart: 2,\r\n  playing: 3,\r\n  finished: 4,\r\n};\r\n\r\nfunction InitializeSpyFall(props) {\r\n  return (\r\n    <Box>\r\n      <Text>Current Player Count: {props.players.length}</Text>\r\n      <AddSpyfallPlayer\r\n        key={props.players.length}\r\n        index={props.players.length}\r\n        addNewPlayer={props.addPlayer}\r\n        finishStage={() => props.setgameStage(GameStages.adminStart)}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction SpyfallAdminStart(props) {\r\n  return (\r\n    <Box>\r\n      <Text>Player Count: {props.length}</Text>\r\n      <Text>Valid location Count: {props._length}</Text>\r\n      <Text>Spy Count:</Text>\r\n      <TextInput\r\n        placeholder=\"Spy Count\"\r\n        type={\"number\"}\r\n        value={props.spyAmount}\r\n        onChange={(event) => props.setspyAmount(event.target.value)}\r\n      />\r\n      <Button\r\n        onClick={() => props.startPassing()}\r\n        label=\"Begin!\"\r\n      ></Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction SpyfallPlaying(props) {\r\n  return (\r\n    <Box\r\n      flex={{ grow: 1 }}\r\n      align={\"center\"}\r\n      justify={\"center\"}\r\n      animation={{ type: \"fadeIn\" }}\r\n    >\r\n      <Stopwatch running={true} time={props.time} setTime={props.setTime} />\r\n      <Text>Began Playing</Text>\r\n      <Text>\r\n        There{\" \"}\r\n        {props.chosenSpiesIds.length === 1\r\n          ? \"is 1 spy\"\r\n          : `are ${props.chosenSpiesIds.length} spies`}\r\n      </Text>\r\n      <Button\r\n        hidden={props.finishingRound < 2}\r\n        onClick={props.finishRound}\r\n        label={props.finishingRound === 0 ? \"Finish Round\" : \"Are you sure?\"}\r\n      ></Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport function Spyfall({ exit }) {\r\n  const [gameStage, setgameStage] = useState(GameStages.initializing);\r\n  // const [gameStage, setgameStage] = useState(GameStages.adminStart);\r\n  const [players, setplayers] = useState([]);\r\n  // const [players, setplayers] = useState([\r\n  // new SpyfallPlayer(0, \"Player 1\", \"\"),\r\n  // new SpyfallPlayer(1, \"Player 2\", \"aaa\"),\r\n  // new SpyfallPlayer(2, \"Player 3\", \"\"),\r\n  // new SpyfallPlayer(3, \"Player 4\", \"\"),\r\n  // ]);\r\n  const [time, setTime] = useState(0);\r\n  const [chosenLocation, setchosenLocation] = useState();\r\n  const [chosenSpiesIds, setchosenSpiesIds] = useState([]);\r\n  const [spyAmount, setspyAmount] = useState(1);\r\n  const [currentPlayerIndex, setcurrentPlayerIndex] = useState(0);\r\n  const [finishingRound, setfinishingRound] = useState(0);\r\n  const finishRound = () => {\r\n    setfinishingRound(finishingRound + 1);\r\n    if (finishingRound >= 1) {\r\n      setgameStage(GameStages.finished);\r\n    }\r\n  };\r\n\r\n  const addPlayer = (name, location) => {\r\n    console.info(\"Added Player\");\r\n    let newPlayer = new SpyfallPlayer(players.length, name, location);\r\n    setplayers([...players, newPlayer]);\r\n  };\r\n\r\n  const getValidLocations = () => {\r\n    return players.filter((player) => player.location.length > 0);\r\n  };\r\n\r\n  const initializeSpyfallGame = () => {\r\n    let playersWithLocations = getValidLocations();\r\n    console.info(`Got ${playersWithLocations.length} valid locations`);\r\n    if (playersWithLocations.length === 0) {\r\n      alert(\"No valid locations!\");\r\n      exit();\r\n      return;\r\n    }\r\n    let chosenPlayer =\r\n      playersWithLocations[\r\n        Math.floor(Math.random() * playersWithLocations.length)\r\n      ];\r\n    console.info(`Chosen location of player i. ${chosenPlayer.index}`);\r\n    setchosenLocation(chosenPlayer.location);\r\n\r\n    let invalidSpyIds = [chosenPlayer.index];\r\n    let spies = [];\r\n\r\n    if (players.length - invalidSpyIds.length < spyAmount){\r\n      alert(\"Too many spies!\");\r\n      exit();\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < spyAmount; i++) {\r\n      let spyId = Math.floor(\r\n        Math.random() * (players.length - invalidSpyIds.length)\r\n      );\r\n      invalidSpyIds.forEach((invalidId) => {\r\n        if (spyId >= invalidId) {\r\n          spyId += 1;\r\n        }\r\n      });\r\n      console.info(`Chosen spy with index: ${spyId}`);\r\n      spies.push(spyId);\r\n      invalidSpyIds.push(spyId);\r\n      invalidSpyIds = invalidSpyIds.sort();\r\n    }\r\n    setchosenSpiesIds(spies);\r\n  };\r\n\r\n  const passToNextPlayer = () => {\r\n    if (currentPlayerIndex < players.length - 1) {\r\n      setcurrentPlayerIndex(currentPlayerIndex + 1);\r\n    } else {\r\n      setgameStage(GameStages.playing);\r\n    }\r\n  };\r\n\r\n  const startPassing = () => {\r\n    setgameStage(GameStages.passing);\r\n    initializeSpyfallGame();\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      flex={{ grow: 1 }}\r\n      align={\"center\"}\r\n      justify={\"center\"}\r\n      animation={{ type: \"fadeIn\" }}\r\n    >\r\n      <Box\r\n        align=\"center\"\r\n        as=\"header\"\r\n        direction=\"row\"\r\n        flex={false}\r\n        justify=\"center\"\r\n        height=\"50px\"\r\n      >\r\n        <Heading level={2}>Spyfall</Heading>\r\n      </Box>\r\n      {gameStage === GameStages.initializing ? (\r\n        <InitializeSpyFall\r\n          setgameStage={setgameStage}\r\n          players={players}\r\n          addPlayer={addPlayer}\r\n        ></InitializeSpyFall>\r\n      ) : gameStage === GameStages.adminStart ? (\r\n        <SpyfallAdminStart\r\n          length={players.length}\r\n          spyAmount={spyAmount}\r\n          setspyAmount={setspyAmount}\r\n          _length={getValidLocations().length}\r\n          startPassing={startPassing}\r\n        ></SpyfallAdminStart>\r\n      ) : gameStage === GameStages.passing ? (\r\n        <SpyfallPlayerView\r\n          key={currentPlayerIndex}\r\n          chosenLocation={chosenLocation}\r\n          currentPlayer={players[currentPlayerIndex]}\r\n          isSpy={chosenSpiesIds.includes(currentPlayerIndex)}\r\n          nextPlayer={() => passToNextPlayer()}\r\n        />\r\n      ) : gameStage === GameStages.playing ? (\r\n        <SpyfallPlaying\r\n          time={time}\r\n          setTime={setTime}\r\n          chosenSpiesIds={chosenSpiesIds}\r\n          finishingRound={finishingRound}\r\n          finishRound={finishRound}\r\n        ></SpyfallPlaying>\r\n      ) : (\r\n        <Box>\r\n          <Stopwatch running={false} time={time} setTime={setTime} />\r\n          <Text>Finished Playing</Text>\r\n          <Text>The spy/ies are:</Text>\r\n          {chosenSpiesIds.map((spyId, i) => (\r\n            <Text key={i}>{players[spyId].name}</Text>\r\n          ))}\r\n          <Button\r\n            label=\"Next Round!\"\r\n            onClick={exit}\r\n          ></Button>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","export class Country {\r\n  constructor(name, code_2, code_3, latitude, longitude, flag) {\r\n    this.name = name;\r\n    this.code_2 = code_2;\r\n    this.code_3 = code_3;\r\n    this.latitude = latitude;\r\n    this.longitude = longitude;\r\n    this.flag = flag;\r\n  }\r\n}\r\n\r\nfunction load_country(country_object) {\r\n  return new Country(\r\n    country_object[\"country\"],\r\n    country_object[\"code_2\"].toLowerCase(),\r\n    country_object[\"code_3\"].toLowerCase(),\r\n    country_object[\"latitude\"],\r\n    country_object[\"longitude\"],\r\n    country_object[\"emoji_flag\"]\r\n  );\r\n}\r\n\r\nexport function load_countries(countries_object) {\r\n  let countries = Object.values(countries_object).map((country) =>\r\n    load_country(country)\r\n  );\r\n  return countries;\r\n}\r\n\r\nexport function calcCrow(country1, country2) {\r\n  let lat1 = country1.latitude;\r\n  let lon1 = country1.longitude;\r\n  let lat2 = country2.latitude;\r\n  let lon2 = country2.longitude;\r\n  let R = 6371; // km\r\n  let dLat = toRad(lat2 - lat1);\r\n  let dLon = toRad(lon2 - lon1);\r\n  lat1 = toRad(lat1);\r\n  lat2 = toRad(lat2);\r\n\r\n  let a =\r\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\r\n  let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n  let d = R * c;\r\n  return d;\r\n}\r\n\r\nfunction calculateDirection(sourceLat, sourceLng, targetLat, targetLng) {\r\n  const dLat = toRad(targetLat - sourceLat);\r\n  const dLng = toRad(targetLng - sourceLng);\r\n\r\n  const a =\r\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    Math.cos(toRad(sourceLat)) *\r\n      Math.cos(toRad(targetLat)) *\r\n      Math.sin(dLng / 2) *\r\n      Math.sin(dLng / 2);\r\n\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n  // Calculate the bearing in degrees\r\n  let bearing = toDegrees(\r\n    Math.atan2(\r\n      Math.sin(dLng) * Math.cos(toRad(targetLat)),\r\n      Math.cos(toRad(sourceLat)) * Math.sin(toRad(targetLat)) -\r\n        Math.sin(toRad(sourceLat)) * Math.cos(toRad(targetLat)) * Math.cos(dLng)\r\n    )\r\n  );\r\n\r\n  // Ensure the bearing is positive\r\n  bearing = (bearing + 360) % 360;\r\n\r\n  return bearing;\r\n}\r\n\r\nfunction toDegrees(radians) {\r\n  return radians * (180 / Math.PI);\r\n}\r\n\r\nexport function calcDirection(country1, country2) {\r\n  return calculateDirection(country1.latitude, country1.longitude, country2.latitude, country2.longitude);\r\n}\r\n\r\n// Converts numeric degrees to radians\r\nfunction toRad(Value) {\r\n  return (Value * Math.PI) / 180;\r\n}\r\n","import { Box, Text } from \"grommet\";\r\nimport React from \"react\";\r\n\r\nexport function CountryGuessRow({ country, distance, direction }) {\r\n  return (\r\n    <Box style={{display: \"contents\"}}>\r\n      <Text>{country.name}</Text>\r\n      <Text\r\n        style={{\r\n          fontFamily: \"NotoColorEmojiLimited\",\r\n          //   fontSize: \"50px\",\r\n          //   textAlign: \"center\",\r\n        }}\r\n      >\r\n        {country.flag}\r\n      </Text>\r\n      <Text>{distance.toFixed(2)} km</Text>\r\n      <Text\r\n        style={{\r\n          position: \"absolute\",\r\n          right: 0,\r\n          translateX: \"-50%\",\r\n          translateY: \"50%\",\r\n          rotate: direction + \"deg\",\r\n          fontSize: \"25px\"\r\n        }}\r\n      >\r\n        ⬆\r\n      </Text>\r\n    </Box>\r\n  );\r\n}\r\n","var _circle, _circle2, _circle3;\nvar _excluded = [\"svgRef\", \"title\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from \"react\";\nvar SvgLoading = function SvgLoading(_ref) {\n  var svgRef = _ref.svgRef,\n    title = _ref.title,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 200 200\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    fill: \"#FF156D\",\n    stroke: \"#FF156D\",\n    strokeWidth: 15,\n    r: 15,\n    cx: 40,\n    cy: 65\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"cy\",\n    calcMode: \"spline\",\n    dur: 2,\n    values: \"65;135;65;\",\n    keySplines: \".5 0 .5 1;.5 0 .5 1\",\n    repeatCount: \"indefinite\",\n    begin: -0.4\n  }))), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    fill: \"#FF156D\",\n    stroke: \"#FF156D\",\n    strokeWidth: 15,\n    r: 15,\n    cx: 100,\n    cy: 65\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"cy\",\n    calcMode: \"spline\",\n    dur: 2,\n    values: \"65;135;65;\",\n    keySplines: \".5 0 .5 1;.5 0 .5 1\",\n    repeatCount: \"indefinite\",\n    begin: -0.2\n  }))), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    fill: \"#FF156D\",\n    stroke: \"#FF156D\",\n    strokeWidth: 15,\n    r: 15,\n    cx: 160,\n    cy: 65\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"cy\",\n    calcMode: \"spline\",\n    dur: 2,\n    values: \"65;135;65;\",\n    keySplines: \".5 0 .5 1;.5 0 .5 1\",\n    repeatCount: \"indefinite\",\n    begin: 0\n  }))));\n};\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLoading, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/loading.f6b1c3a5.svg\";\nexport { ForwardRef as ReactComponent };","import { Image } from \"grommet\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ReactComponent as DefaultSvg } from \"../countries/loading.svg\";\r\n\r\nexport function DynamicSvg({ svgName, failed, ...props }) {\r\n  const [dynamicSvg, setDynamicSvg] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadSvg = async () => {\r\n      try {\r\n        const dynamicSvgModule = await import(\r\n          `../countries/${svgName}/vector.svg`\r\n        );\r\n        console.info(dynamicSvgModule);\r\n        setDynamicSvg(() => dynamicSvgModule.default);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setDynamicSvg(DefaultSvg);\r\n        failed();\r\n      }\r\n    };\r\n\r\n    loadSvg();\r\n  }, [svgName]);\r\n\r\n  return (\r\n    <div>\r\n      {dynamicSvg === null ? <DefaultSvg {...props}/> : <Image src={dynamicSvg} {...props}/>}\r\n    </div>\r\n  );\r\n}\r\n","import { Box } from \"grommet\";\r\nimport React from \"react\";\r\n\r\nexport function GuessTable({ children, max = -1 }) {\r\n  function generateChild(child, i) {\r\n    return (\r\n      <Box\r\n        width=\"100%\"\r\n        direction=\"row\"\r\n        style={{ position: \"relative\", border: \"1px solid gray\", minHeight:\"40px\", alignItems: \"center\"}}\r\n        key={i}\r\n      >\r\n        {child}\r\n      </Box>\r\n    );\r\n  }\r\n  return (\r\n    <Box\r\n      width=\"90%\"\r\n      align=\"center\"\r\n      background=\"light-2\"\r\n      height={{ min: \"150px\", border:\"2px solid white\" }}\r\n    >\r\n      {children.map((child, i) => generateChild(child, i))}\r\n      {max === -1 || max - children.length <= 0 ? (\r\n        <span></span>\r\n      ) : (\r\n        Array.from(Array(max - children.length).keys()).map((i) => generateChild(\r\n            <span></span>, i\r\n        ))\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport function TextHighlight({ text, highlight }) {\r\n  const [parts, setparts] = useState([text]);\r\n  useEffect(() => {\r\n    let newParts = [text];\r\n    if (highlight !== \"\") {\r\n      newParts = text.split(new RegExp(`(${highlight})`, \"gi\"));\r\n    }\r\n    setparts(newParts);\r\n  }, [text, highlight]);\r\n\r\n  return (\r\n    <span>\r\n      {parts.map((part, i) => (\r\n        <span key={i}>\r\n          {part.toLowerCase() === highlight.toLowerCase() ? (\r\n            <b>{part}</b>\r\n          ) : (\r\n            part\r\n          )}\r\n        </span>\r\n      ))}\r\n    </span>\r\n  );\r\n}\r\n","import { Box, Select, Text } from \"grommet\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TextHighlight } from \"./TextHighlight\";\r\n\r\nexport function InputSelect({\r\n  onChange,\r\n  options,\r\n  value = \"\",\r\n  optionNameOperand = (o) => o,\r\n  maxDisplayValues = 25,\r\n}) {\r\n  const [searchValue, setsearchValue] = useState(\"\");\r\n  const [shownOptions, setshownOptions] = useState([]);\r\n\r\n  const updateShownOptions = (search) => {\r\n    let newOptions = [];\r\n    for (let i = 0; i < options.length; i++) {\r\n      let value = optionNameOperand(options[i]);\r\n      if (value.toLowerCase().indexOf(search.toLowerCase()) !== -1) {\r\n        newOptions.push(value);\r\n      }\r\n    }\r\n    newOptions = newOptions.sort();\r\n    setshownOptions(newOptions.splice(0, maxDisplayValues));\r\n    onChange(search);\r\n    setsearchValue(search.toLowerCase());\r\n  };\r\n\r\n  useEffect(() => {\r\n    setshownOptions(options.map(optionNameOperand));\r\n  }, [options, optionNameOperand]);\r\n\r\n  const chooseOption = (option) => {\r\n    onChange(option);\r\n    setsearchValue(option.value);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Select\r\n        onSearch={updateShownOptions}\r\n        options={shownOptions}\r\n        value={value}\r\n        onChange={chooseOption}\r\n        children={(option, index, options, { active, disabled, selected }) => (\r\n          <Text key={index}>\r\n            <TextHighlight\r\n              key={searchValue.length}\r\n              text={option}\r\n              highlight={searchValue}\r\n            />\r\n          </Text>\r\n        )}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Button, Heading } from \"grommet\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { calcCrow, calcDirection } from \"./country_utils\";\r\nimport \"./emoji.css\";\r\nimport { CountryGuessRow } from \"./modules/CountryGuessRow\";\r\nimport { DynamicSvg } from \"./modules/DynamicSvg\";\r\nimport { GuessTable } from \"./modules/GuessTable\";\r\nimport { InputSelect } from \"./modules/InputSelect\";\r\nimport getCountries from \"./useCountries\";\r\n\r\nclass Guess {\r\n  constructor(guessedCountry, actualCountry) {\r\n    this.country = guessedCountry;\r\n    console.info(guessedCountry);\r\n    this.distanceKm = calcCrow(guessedCountry, actualCountry);\r\n    console.info(this.distanceKm);\r\n    this.direction = calcDirection(guessedCountry, actualCountry);\r\n  }\r\n}\r\n\r\nconst maxGuesses = 6;\r\nexport const CountryGuesser = () => {\r\n  const [countries, setcountries] = useState([]);\r\n  const [countriesDict, setcountriesDict] = useState([]);\r\n  // const [countryComp, setCountryComp] = useState(<Box />);\r\n  const [round, setRound] = useState(0);\r\n  const [roundOver, setRoundOver] = useState(false);\r\n  const [chosenCountry, setChosenCountry] = useState();\r\n  const [guessedCountry, setguessedCountry] = React.useState(\"\");\r\n  const [currentGuesses, setCurrentGuesses] = React.useState([]);\r\n\r\n  useEffect(() => {\r\n    console.info(`Starting round ${round}`);\r\n    const [newCountries, newCountriesDict] = getCountries();\r\n    setcountries(newCountries);\r\n    setcountriesDict(newCountriesDict);\r\n    let newChosenCountry =\r\n      newCountries[Math.floor(Math.random() * newCountries.length)];\r\n    setChosenCountry(newChosenCountry);\r\n  }, [round]);\r\n\r\n  function nextRound() {\r\n    setRound((r) => r + 1);\r\n    setRoundOver(false);\r\n    setCurrentGuesses([]);\r\n    setguessedCountry(\"\");\r\n  }\r\n\r\n  const attemptGuess = () => {\r\n    if (!guessedCountry in countriesDict) {\r\n      return;\r\n    }\r\n    let chosen = countriesDict[guessedCountry];\r\n    let guess = new Guess(chosen, chosenCountry);\r\n    currentGuesses.push(guess);\r\n    setCurrentGuesses(currentGuesses);\r\n    if (chosen.name === chosenCountry.name) {\r\n      setRoundOver(true);\r\n      return;\r\n    }\r\n    setguessedCountry(\"\");\r\n    if (currentGuesses.length >= maxGuesses) {\r\n      setRoundOver(true);\r\n    }\r\n  };\r\n\r\n  if (chosenCountry === undefined) {\r\n    return <Box>Loading...</Box>;\r\n  } else {\r\n    return (\r\n      <Box\r\n        direction={\"column\"}\r\n        flex={{ grow: 1 }}\r\n        align={\"center\"}\r\n        justify={\"center\"}\r\n        animation={{ type: \"fadeIn\" }}\r\n      >\r\n        <Box\r\n          align=\"center\"\r\n          background={{ color: \"light-4\" }}\r\n          style={{\r\n            padding: \"40px\",\r\n            borderRadius: \"50px\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        >\r\n          <DynamicSvg\r\n            svgName={chosenCountry.code_2}\r\n            style={{ height: \"250px\" }}\r\n            failed={() => nextRound()}\r\n          />\r\n        </Box>\r\n\r\n        {roundOver ? (\r\n          <Box direction=\"row\">\r\n            <Heading size={\"large\"} level={\"4\"}>\r\n              The country is {chosenCountry.name}\r\n            </Heading>\r\n            <Heading\r\n              style={{\r\n                fontFamily: \"NotoColorEmojiLimited\",\r\n                textAlign: \"center\",\r\n                marginLeft: \"5px\",\r\n              }}\r\n            >\r\n              {chosenCountry.flag}\r\n            </Heading>\r\n          </Box>\r\n        ) : (\r\n          <Box />\r\n        )}\r\n\r\n        {!roundOver ? (\r\n          <Box hidden={roundOver}>\r\n            <InputSelect\r\n              options={countries}\r\n              key={round}\r\n              value={guessedCountry}\r\n              optionNameOperand={(o) => o.name}\r\n              onChange={(option) => setguessedCountry(option.value)}\r\n            />\r\n            <Button\r\n              label=\"Submit\"\r\n              onClick={attemptGuess}\r\n              style={{\r\n                marginTop: \"15px\",\r\n              }}\r\n            />\r\n          </Box>\r\n        ) : (\r\n          <Button onClick={() => nextRound()}>Next!</Button>\r\n        )}\r\n\r\n        <GuessTable max={maxGuesses}>\r\n          {currentGuesses.map((guess, i) => (\r\n            <CountryGuessRow\r\n              country={guess.country}\r\n              distance={guess.distanceKm}\r\n              direction={guess.direction}\r\n              key={i}\r\n            />\r\n          ))}\r\n        </GuessTable>\r\n      </Box>\r\n    );\r\n  }\r\n};\r\n","import countries_json from \"./countries.json\";\r\nimport { load_countries } from \"./country_utils\";\r\n\r\nexport default function getCountries() {\r\n  console.info(\"Getting countries...\")\r\n  let allCountries = load_countries(countries_json);\r\n  let countriesDIct = Object.fromEntries(\r\n    allCountries.map((country) => [country.name, country])\r\n  );\r\n  return [allCountries, countriesDIct];\r\n}\r\n","import { Box, Grommet, Anchor } from \"grommet\";\r\nimport React, { useEffect } from \"react\";\r\nimport GitHubButton from \"react-github-btn\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport useRoutePrefix from \"./functions/useRoutePrefix\";\r\nimport { MindGames } from \"./views/MindGames\";\r\nimport { Spyfall } from \"./views/Spyfall\";\r\nimport { CountryGuesser } from \"./country_guesser/countryGuesser\";\r\n\r\nconst theme = {\r\n  global: {\r\n    font: {\r\n      family: \"Solway\",\r\n    },\r\n  },\r\n  anchor: {\r\n    color: \"light-2\",\r\n  },\r\n  button: {\r\n    pad: \"small\",\r\n    border: {\r\n      color: \"focus\",\r\n      radius: \"18px\",\r\n      width: \"2px\"\r\n    },\r\n    color: \"white\"\r\n  }\r\n};\r\n\r\nclass View {\r\n  constructor(display, url, componment) {\r\n    this.display = display;\r\n    this.url = url;\r\n    this.componment = componment;\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const [routePrefix] = useRoutePrefix(true);\r\n  const views = [\r\n    new View(\"Mind Games\", \"mind_games\", <MindGames />),\r\n    new View(\r\n      \"Spy Fall\",\r\n      \"spy_fall\",\r\n      <Spyfall exit={() => window.location.pathname = routePrefix} />\r\n    ),\r\n    new View(\r\n      \"Country Guesser\",\r\n      \"country_guesser\",\r\n      <CountryGuesser />\r\n    ),\r\n  ];\r\n\r\n  useEffect(() => {\r\n    console.info(`Route prefix: ${routePrefix}`);\r\n  }, [routePrefix]);\r\n\r\n  return (\r\n    <Grommet theme={theme} full>\r\n      <Box\r\n        background={\"brand\"}\r\n        direction={\"column\"}\r\n        style={{ minHeight: \"100%\" }}\r\n      >\r\n        <BrowserRouter>\r\n          <Routes>\r\n            {views.map((view, i) => (\r\n              <Route\r\n                key={i}\r\n                path={routePrefix + view.url}\r\n                element={\r\n                <Grommet theme={theme} full>\r\n                  {view.componment}\r\n                </Grommet>}\r\n              />\r\n            ))}\r\n            <Route\r\n              path={routePrefix}\r\n              element={MainMenu(views)}\r\n            />\r\n          </Routes>\r\n        </BrowserRouter>\r\n      </Box>\r\n    </Grommet>\r\n  );\r\n}\r\n\r\nexport default App;\r\nfunction MainMenu(views) {\r\n  const [routePrefix] = useRoutePrefix(false);\r\n  return (\r\n    <Box\r\n      background={\"brand\"}\r\n      direction={\"column\"}\r\n      style={{ minHeight: \"100%\" }}\r\n    >\r\n      {views.map((view, i) => (\r\n        <Anchor key={i} alignSelf=\"center\" href={routePrefix + \"/\" + view.url}>\r\n          {i + 1} - {view.display}\r\n        </Anchor>\r\n      ))}\r\n\r\n      <Box\r\n        direction={\"row\"}\r\n        justify={\"end\"}\r\n        style={{ position: \"fixed\", bottom: 0, right: 0 }}\r\n        margin={{ right: \"large\", left: \"large\" }}\r\n      >\r\n        <GitHubButton\r\n          href=\"https://github.com/dansegal10/Doomsday-algorithm-practice\"\r\n          data-icon=\"octicon-star\"\r\n          data-show-count=\"true\"\r\n          aria-label=\"Star me on GitHub\"\r\n        >\r\n          Star\r\n        </GitHubButton>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}