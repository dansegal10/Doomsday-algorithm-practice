{"version":3,"sources":["components/Header.js","components/doomsday/ExplanationModal.js","components/doomsday/FooterBar.js","functions/useDidUpdate.js","components/doomsday/DayButton.js","components/doomsday/DayButtonGrid.js","functions/formatScoreTime.js","components/score/Stopwatch.js","components/score/ScoreRow.js","services/storage.js","functions/useHighScoreState.js","components/score/AverageScore.js","components/score/ScoreBoard.js","components/doomsday/DoomdsdayGame.js","components/mindPalace/MindPalaceGame.js","views/MindGames.js","components/spyfall/AddSpyfallPlayer.js","components/spyfall/SpyfallPlayerView.js","components/spyfall/spyfallData.js","views/Spyfall.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","_useState","useState","_useState2","_slicedToArray","open","setOpen","chooseGame","games","React","createElement","Box","height","align","as","direction","flex","justify","style","position","zIndex","Button","width","padding","margin","onClick","List","borderRadius","border","Heading","level","display","background","round","pad","gap","marginTop","Object","entries","map","_ref","i","_ref2","name","value","Menu","key","label","items","v","hoverIndicator","centuryIndexMap","18","19","20","21","doomsdaysForMonth","1","2","3","4","5","6","7","8","9","10","11","12","doomsdaysForMonthInLeapYear","_objectSpread","ExplanationModal","day","moment","currentDay","centuryIndex","format","substring","year","Number","yearAfter1Step","yearAfter2Step","yearAfter3Step","nearestMultiple","weekDay","doomsday","isLeapYear","concat","dayNumber","doomsdayNumber","doomsdayToDayChain","Math","abs","push","length","alignSelf","className","Text","bottom","horizontal","vertical","Fragment","date","index","FooterBar","fullyHidden","setFullyHidden","_React$useState","_React$useState2","showExplanation","setShowExplanation","callback","deps","hasMount","useRef","useEffect","current","useDidUpdate","isVisible","right","left","animation","visibility","Layer","onEsc","onClickOutside","responsive","onContinueClick","DayButton","anySelected","undefined","selectedDayOfWeek","isSelectedButFalse","expectedDayOfWeek","number","isCorrect","basis","boxShadow","setSelectedDayOfWeek","size","weekdays","DayButtonGrid","selected","setSelected","expected","grow","wrap","formatScoreTime","time","floor","slice","Stopwatch","running","setTime","interval","setInterval","prevTime","clearInterval","ScoreRow","score","success","color","marginRight","storage","type","parseInt","localStorage","getItem","setItem","useHighScoreState","highScore","setHighScore","formatAverageTime","averageTime","AverageScore","_props$isTrimmed","scores","averageSize","isTrimmed","average","setAverage","_useHighScoreState","toString","_useHighScoreState2","bestAverage","setBestAverage","_useState3","_useState4","newHighScore","setNewHighScore","currentAverage","lastAmount","trimAvrage","relevantScores","reverse","successSorted","sort","a","b","slicedWorst","sortedScores","trimScores","console","info","sum","calulateAverageOfLastScores","max","ScoreBoard","_props$averagesToShow","_props$trimmedAverage","averagesToShow","trimmedAveragesToShow","streak","setStreak","bestStreak","setBestStreak","currentStreak","overflowY","require","momentRandom","DoomdsdayGame","generateRandomDay","endDate","startDate","parseDateToWeekDayNumber","initialDay","setCurrentDay","setScores","_useState5","_useState6","_useState7","_useState8","setRunning","_useState9","_useState10","_useState11","_useState12","setExpectedDayOfWeek","nextDay","MindPalaceGame","numberLength","choices","generateTextWithLength","setNumber","answer","setAnswer","_React$useState3","_React$useState4","hidden","setHidden","insertIntervaledDash","str","result","replace","toUpperCase","randomText","random","userSelect","textAlign","repeat","TextInput","placeholder","onChange","event","input","target","SubmitAnswer","MindGames","currentGame","setCurrentGame","currentOption","setCurrentOption","game","options","AddSpyfallPlayer","addNewPlayer","finishStage","playerName","setplayerName","location","setlocation","finishing","setfinishing","SpyfallPlayerView","currentPlayer","chosenLocation","isSpy","nextPlayer","sethidden","btnRef","ref","SpyfallPlayer","_createClass","_classCallCheck","this","GameStages","InitializeSpyFall","players","addPlayer","setgameStage","SpyfallAdminStart","_length","spyAmount","setspyAmount","startPassing","SpyfallPlaying","chosenSpiesIds","finishingRound","finishRound","Spyfall","exit","gameStage","setplayers","setchosenLocation","setchosenSpiesIds","_useState13","_useState14","currentPlayerIndex","setcurrentPlayerIndex","_useState15","_useState16","setfinishingRound","getValidLocations","filter","player","newPlayer","_toConsumableArray","playersWithLocations","alert","chosenPlayer","invalidSpyIds","spies","_loop","spyId","forEach","invalidId","initializeSpyfallGame","includes","Link","to","theme","global","font","family","View","url","componment","App","selectedView","setSelectedView","views","window","pathname","Grommet","full","minHeight","BrowserRouter","Routes","Route","path","element","MainMenu","view","GitHubButton","href","data-icon","data-show-count","aria-label","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4b7b578a.chunk.js","sourcesContent":["import { Box, Button, Heading, Menu } from 'grommet';\r\nimport { List } from \"grommet-icons\";\r\nimport React, { useState } from 'react';\r\n\r\nfunction Header(props) {\r\n    const [open, setOpen] = useState(false);\r\n    let chooseGame = props.chooseGame;\r\n    let games = props.games;\r\n\r\n    return (\r\n        <Box>\r\n            <Box height=\"50px\"></Box>\r\n            <Box\r\n                align=\"center\"\r\n                as=\"header\"\r\n                direction=\"row\"\r\n                flex={false}\r\n                justify=\"start\"\r\n                height=\"50px\"\r\n                style={{ position: \"fixed\", zIndex: 10 }}\r\n            >\r\n                <Button\r\n                    height=\"50px\"\r\n                    width=\"50px\"\r\n                    padding=\"10px\"\r\n                    margin=\"5px 20px\"\r\n                    onClick={() => { setOpen(!open) }}\r\n                >\r\n                    <List style={{ borderRadius: \"200px\", border: \"1px solid white\", padding: \"5px\" }} />\r\n                </Button>\r\n                <Heading level={4}>Segal's Mind Games</Heading>\r\n            </Box>\r\n            <Box style={{ width: \"100%\", height: \"100%\", position: \"fixed\", display: open ? \"block\" : \"none\", zIndex: 11 }}\r\n                onClick={() => { setOpen(false) }}\r\n            />\r\n            <Box\r\n                background=\"white\"\r\n                round=\"small\"\r\n                pad=\"small\"\r\n                gap=\"large\"\r\n                style={{ position: \"absolute\", display: open ? \"block\" : \"none\", marginTop: \"50px\", zIndex: 12 }}>\r\n                {Object.entries(games).map(([name, value], i) =>\r\n                    typeof (value) === \"object\" ?\r\n                        <Menu key={i} label={name} items={value.map(v => {\r\n                            return {\r\n                                label: v,\r\n                                onClick: () => { chooseGame(name, v); setOpen(false) }\r\n                            }\r\n                        })} /> :\r\n                        <Button key={i} hoverIndicator onClick={() => { chooseGame(name, \"\"); setOpen(false) }}> {name} </Button>\r\n                )}\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React, {Fragment} from 'react';\r\nimport {Box, Heading, Text} from \"grommet\";\r\nimport * as moment from \"moment\";\r\n\r\nconst centuryIndexMap = {18: 5, 19: 3, 20: 2, 21: 0};\r\nconst doomsdaysForMonth = {1: \"03\", 2: \"14\", 3: \"07\", 4: \"04\", 5: \"09\", 6: \"06\", 7: \"11\", 8: \"08\", 9: \"05\", 10: \"10\", 11: \"07\", 12: \"12\"};\r\nconst doomsdaysForMonthInLeapYear = {...doomsdaysForMonth, 1: \"04\", 2: \"15\"};\r\n\r\nexport default function ExplanationModal(props) {\r\n\r\n  let day = moment(props.currentDay);\r\n\r\n  let centuryIndex = centuryIndexMap[day.format(\"Y\").substring(0, 2)];\r\n  let year = Number(day.format(\"YY\"));\r\n  let yearAfter1Step = year % 2 === 1 ? (year + 11) : year;\r\n  let yearAfter2Step = yearAfter1Step / 2;\r\n  let yearAfter3Step = yearAfter2Step % 2 === 1 ? yearAfter2Step + 11 : yearAfter2Step;\r\n  let nearestMultiple = yearAfter3Step % 7 === 0 ?  yearAfter3Step : yearAfter3Step + 7 - (yearAfter3Step % 7);\r\n  let weekDay = (nearestMultiple - yearAfter3Step + centuryIndex) % 7;\r\n  let doomsday = day.isLeapYear() ?\r\n      `${day.format(\"MM-\")}${doomsdaysForMonthInLeapYear[day.format(\"M\")]}` :\r\n      `${day.format(\"MM-\")}${doomsdaysForMonth[day.format(\"M\")]}`;\r\n\r\n  let dayNumber = Number(day.format(\"D\"));\r\n  let doomsdayNumber = Number(doomsday.substring(3));\r\n  let doomsdayToDayChain = [];\r\n\r\n  while (Math.abs(dayNumber - doomsdayNumber) > 6) {\r\n    doomsdayToDayChain.push(`${day.format(\"MM-\")}${doomsdayNumber < 10 ? `0${doomsdayNumber}` : doomsdayNumber}`);\r\n    if (doomsdayNumber < dayNumber) doomsdayNumber += 7;\r\n    else doomsdayNumber -= 7;\r\n  }\r\n  if (doomsdayToDayChain.length > 0) {\r\n    doomsdayToDayChain.push(`${day.format(\"MM-\")}${doomsdayNumber < 10 ? `0${doomsdayNumber}` : doomsdayNumber}`);\r\n  }\r\n\r\n  return <Box direction={\"column\"} margin={\"medium\"}>\r\n    <Heading alignSelf={\"center\"}>\r\n      <span className={\"century\"}>{day.format(\"Y\").substring(0, 2)}</span>\r\n      <span className={\"year\"}>{day.format(\"YY\")}</span>-\r\n      <span className={\"month\"}>{day.format(\"MM\")}</span>-\r\n      <span className={\"day\"}>{day.format(\"DD\")}</span>\r\n    </Heading>\r\n    <Text margin={{bottom: \"xsmall\"}}>\r\n      Century index for the <b className={\"century\"}>{day.format(\"Y\").substring(0, 2)}</b>00s is <b className={\"centuryIndex\"}>{centuryIndex}</b>.\r\n    </Text>\r\n    <Text>\r\n      Calculating the year index for year <b className={\"year\"}>{day.format(\"YY\")}</b> using \"odd + 11\" method:\r\n    </Text>\r\n    <Box pad={{horizontal: \"medium\", vertical: 'xsmall'}} margin={{bottom: \"xsmall\"}}>\r\n      {year !== yearAfter1Step &&\r\n        <Text>{year} is odd, adding 11: {year} + 11 = {yearAfter1Step};</Text>\r\n      }\r\n      <Text>{yearAfter1Step} is even, dividing by 2: {yearAfter1Step} / 2 = { yearAfter2Step === yearAfter3Step ? <><b className={\"yearIndex\"}>{yearAfter2Step}</b>.</> : `${yearAfter2Step};`}</Text>\r\n      {yearAfter2Step !== yearAfter3Step &&\r\n        <Text>{yearAfter2Step} is odd, adding 11: {yearAfter2Step} + 11 = <b className={\"yearIndex\"}>{yearAfter3Step}</b>.</Text>\r\n      }\r\n    </Box>\r\n    <Text>The nearest higher multiple of 7 to <b className={\"yearIndex\"}>{yearAfter3Step}</b> is <b className={\"nearestMultiple\"}>{nearestMultiple}</b>.</Text>\r\n    <Text margin={{bottom: \"xsmall\"}}>Calculating the weekday of the doomsday: (<b className={\"nearestMultiple\"}>{nearestMultiple}</b> - <b className={\"yearIndex\"}>{yearAfter3Step}</b> + <b className={\"centuryIndex\"}>{centuryIndex}</b>) mod 7 = <b className={\"doomsdayWeekDay\"}>{weekDay}</b> <b>({moment.weekdays(weekDay)})</b>.</Text>\r\n    <Text>\r\n      Doomsday for {day.format(\"MMMM\")} is <b>{doomsday.substring(0, 3)}</b><b className={doomsdayToDayChain.length === 0 ? \"doomsday\" : \"\"}>{doomsday.substring(3)}</b>{day.isLeapYear() && (day.format(\"M\") < 3) && <b> (leap year)</b>}.\r\n    </Text>\r\n    {doomsdayToDayChain.length > 0 && <>\r\n      <Text>Selecting a doomsday closer to our date:</Text>\r\n      <Box pad={{horizontal: \"medium\", vertical: 'xsmall'}}>\r\n        <Text>\r\n          {doomsdayToDayChain.map((date, index) => {\r\n            if (index === doomsdayToDayChain.length - 1) return <Fragment key={index}><b>{date.substring(0, 3)}</b><b className={\"doomsday\"}>{date.substring(3)}</b>.</Fragment>;\r\n            return `${date} -> `\r\n          })}\r\n        </Text>\r\n      </Box>\r\n      </>\r\n    }\r\n    {doomsdayNumber === dayNumber ?\r\n        <Text>Our date matches the doomsday, and it is <b>{day.format(\"dddd\")}</b>.</Text> :\r\n        <Text>Calculating the day of the week: (<b className={\"doomsdayWeekDay\"}>{weekDay}</b> {dayNumber > doomsdayNumber ?\r\n            <> + (<b className={\"day\"}>{dayNumber}</b> - <b className={\"doomsday\"}>{doomsdayNumber}</b>)</> :\r\n            <> - (<b className={\"doomsday\"}>{doomsdayNumber}</b> - <b className={\"day\"}>{dayNumber}</b>)</>\r\n        }) mod 7 = <b>{day.format(\"d\")} ({day.format(\"dddd\")})</b>.</Text>\r\n    }\r\n  </Box>\r\n}","import React, {useState} from 'react';\r\nimport {Box, Button, Layer} from \"grommet\";\r\nimport useDidUpdate from \"../../functions/useDidUpdate\";\r\nimport ExplanationModal from \"./ExplanationModal\";\r\n\r\nexport default function FooterBar(props) {\r\n\r\n  const [fullyHidden, setFullyHidden] = useState(true);\r\n  const [showExplanation, setShowExplanation] = React.useState(false);\r\n\r\n  useDidUpdate(() => {\r\n    setFullyHidden(false)\r\n  }, [props.isVisible]);\r\n\r\n  return <Box\r\n    key={props.isVisible}\r\n    direction={\"row\"}\r\n    justify={\"between\"}\r\n    margin={{bottom: \"small\", right: \"large\", left: \"large\"}}\r\n    animation={props.isVisible ? {\"type\": \"fadeIn\"} : {\"type\": \"fadeOut\", \"duration\": 200}}\r\n  >\r\n    <Button\r\n        label={\"Explanation\"}\r\n        onClick={props.isVisible ? () => setShowExplanation(true) : () => {}}\r\n        style={{visibility: (fullyHidden ? \"hidden\" : \"visible\")}}\r\n    />\r\n    {showExplanation && (\r\n        <Layer\r\n            onEsc={() => setShowExplanation(false)}\r\n            onClickOutside={() => setShowExplanation(false)}\r\n            margin={\"medium\"}\r\n            className={\"modal\"}\r\n            responsive={false}\r\n        >\r\n          <ExplanationModal currentDay={props.currentDay}/>\r\n        </Layer>\r\n    )}\r\n    <Button\r\n      label={\"Continue\"}\r\n      onClick={props.isVisible ? props.onContinueClick : () => {}}\r\n      style={{visibility: (fullyHidden ? \"hidden\" : \"visible\")}}\r\n    />\r\n  </Box>\r\n}\r\n","import {useEffect, useRef} from 'react';\r\n\r\nexport default function useDidUpdate (callback, deps) {\r\n  const hasMount = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (hasMount.current) {\r\n      callback()\r\n    } else {\r\n      hasMount.current = true\r\n    }\r\n  }, deps)\r\n}\r\n","import {Box, Text} from \"grommet\";\r\nimport React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nexport default function DayButton(props) {\r\n\r\n  const anySelected = props.selectedDayOfWeek !== undefined;\r\n\r\n  const isSelectedButFalse =  anySelected &&\r\n    props.selectedDayOfWeek !== props.expectedDayOfWeek &&\r\n    props.number === props.selectedDayOfWeek;\r\n\r\n  const isCorrect = anySelected &&\r\n    props.number === props.expectedDayOfWeek;\r\n\r\n  return props.number !== undefined ?\r\n    <Box\r\n      flex={{'grow': 1}}\r\n      basis={'xxsmall'}\r\n      align={'center'}\r\n      justify={'center'}\r\n      style={{boxShadow: \"none\"}}\r\n      animation={(isSelectedButFalse || isCorrect) ? {\"type\": \"zoomIn\", \"duration\": 400} : {}}\r\n      background={isSelectedButFalse ? 'status-error' : (isCorrect ? 'status-ok' : \"\")}\r\n      onClick={() => {\r\n        if (!anySelected) props.setSelectedDayOfWeek(props.number)\r\n      }}\r\n    >\r\n      <Text size={\"large\"}>{moment.weekdays(props.number)}</Text>\r\n    </Box> :\r\n    <Box\r\n      flex={{'grow': 1}}\r\n      basis={'xxsmall'}\r\n    />;\r\n}\r\n","import {Box} from \"grommet\";\r\nimport DayButton from \"./DayButton\";\r\nimport React from \"react\";\r\n\r\nexport default function DayButtonGrid(props) {\r\n\r\n  let selected = props.selectedDayOfWeek;\r\n  let setSelected = props.setSelectedDayOfWeek;\r\n  let expected = props.expectedDayOfWeek;\r\n\r\n  return <Box\r\n    flex={{grow: 2}}\r\n    direction={'column'}\r\n    justify={'center'}\r\n    alignSelf={'center'}\r\n    style={{width: \"100%\"}}\r\n  >\r\n    <Box\r\n      flex={'grow'}\r\n      direction={\"row\"}\r\n      align={'stretch'}\r\n      wrap={true}\r\n    >\r\n      <DayButton number={1} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n      <DayButton number={2} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n      <DayButton number={3} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n    </Box>\r\n    <Box\r\n      flex={'grow'}\r\n      direction={\"row\"}\r\n      align={'stretch'}\r\n      wrap={true}\r\n    >\r\n      <DayButton number={4} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n      <DayButton number={5} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n      <DayButton number={6} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n    </Box>\r\n    <Box\r\n      flex={'grow'}\r\n      direction={\"row\"}\r\n      align={'stretch'}\r\n      wrap={true}\r\n    >\r\n      <DayButton />\r\n      <DayButton number={0} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n      <DayButton />\r\n    </Box>\r\n  </Box>\r\n}\r\n","export default function formatScoreTime (time) {\r\n    let minutes = (\"0\" + Math.floor(time / 60000) % 60).slice(-2);\r\n    let seconds = (\"0\" + Math.floor(time / 1000) % 60).slice(-2);\r\n    let milliSeconds = (\"0\" + Math.floor(time / 10) % 100).slice(-2);\r\n    return minutes + \":\" + seconds + \".\" + milliSeconds;\r\n  }","import React, { useEffect } from 'react';\r\nimport formatScoreTime from \"../../functions/formatScoreTime.js\";\r\nimport { Box, Heading } from 'grommet';\r\n\r\nfunction Stopwatch(props) {\r\n  let running = props.running;\r\n  let time = props.time;\r\n  let setTime = props.setTime;\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (running) {\r\n      interval = setInterval(() => {\r\n        setTime((prevTime) => prevTime + 10);\r\n      }, 10);\r\n    } else if (!running) {\r\n      clearInterval(interval);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [running, setTime]);\r\n\r\n  return (\r\n    <Box style={{margin: \"0\"}}>\r\n      <Heading level={3}>{formatScoreTime(time)}</Heading>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Stopwatch;","import React from 'react';\r\nimport { Box, Text } from 'grommet';\r\nimport formatScoreTime from \"../../functions/formatScoreTime.js\";\r\n\r\n\r\nfunction ScoreRow(props) {\r\n    let score = props.score;\r\n    let success = props.success;\r\n    let index = props.index;\r\n\r\n    return (\r\n        <Box\r\n            flex={'grow'}\r\n            direction={\"row\"}\r\n            align={'stretch'}\r\n            height=\"25px\"\r\n            wrap={true}>\r\n            <Text color=\"darkslategrey\" style={{ marginRight: \"10px\" }}>{index + 1}</Text>\r\n            <Text color={success ? \"white\" : \"darkred\"}>{formatScoreTime(score)}</Text>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ScoreRow;","const getHighScore = (type) => parseInt(localStorage.getItem('highScore' + type)) || 0;\r\nconst setHighScore = (type, score) => {\r\n  localStorage.setItem('highScore' + type, score)\r\n};\r\n\r\nexport const storage = {\r\n  getHighScore,\r\n  setHighScore\r\n};","import { useState, useEffect } from 'react';\r\nimport {storage} from \"../services/storage\";\r\n\r\nexport function useHighScoreState(type) {\r\n  const [highScore, setHighScore] = useState(storage.getHighScore(type));\r\n\r\n  useEffect(() => {\r\n    storage.setHighScore(type, highScore)\r\n  }, [highScore]);\r\n\r\n  return [highScore, setHighScore];\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Box, Text } from 'grommet';\r\nimport formatScoreTime from \"../../functions/formatScoreTime.js\";\r\nimport { useHighScoreState } from \"../../functions/useHighScoreState.js\";\r\n\r\nconst trimScores = (scores) => {\r\n  let successSorted = scores.sort((a, b) => a[1] - b[1]);\r\n  let slicedWorst = false;\r\n  if (!successSorted[0][1]) {\r\n    successSorted = successSorted.slice(1);\r\n    slicedWorst = true;\r\n  }\r\n  if (!successSorted[0][1]) {\r\n    return successSorted;\r\n  }\r\n  let sortedScores = successSorted.sort((a, b) => a[0] - b[0]);\r\n  if (!slicedWorst) {\r\n    sortedScores = sortedScores.slice(0, -1);\r\n  }\r\n  return sortedScores.slice(1);\r\n}\r\n\r\nconst calulateAverageOfLastScores = (scores, lastAmount, trimAvrage) => {\r\n  let scoreCopy = scores.slice(0);\r\n  let relevantScores = scoreCopy.reverse().slice(0, lastAmount);\r\n  if (relevantScores.length < lastAmount) {\r\n    return 0;\r\n  }\r\n\r\n  if (trimAvrage) {\r\n    relevantScores = trimScores(relevantScores);\r\n    console.info(relevantScores);\r\n  }\r\n\r\n  let sum = 0;\r\n  for (let i = 0; i < relevantScores.length; i++) {\r\n    if (relevantScores[i][1] === false) {\r\n      return -1;\r\n    }\r\n    sum += relevantScores[i][0];\r\n  }\r\n\r\n  return sum / relevantScores.length;\r\n}\r\n\r\nconst formatAverageTime = (averageTime) => {\r\n  if (averageTime === -1) {\r\n    return \"DNF\";\r\n  } else if (averageTime === 0) {\r\n    return \"-\";\r\n  }\r\n  return formatScoreTime(averageTime);\r\n}\r\n\r\n\r\nfunction AverageScore(props) {\r\n  let scores = props.scores;\r\n  let averageSize = props.averageSize;\r\n  let isTrimmed = props.isTrimmed ?? false;\r\n  let type = props.type + (isTrimmed ? \"trimmed\" : \"\");\r\n  let [average, setAverage] = useState(0);\r\n  let [bestAverage, setBestAverage] = useHighScoreState(type + averageSize.toString());\r\n  let [newHighScore, setNewHighScore] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setNewHighScore(false);\r\n    let currentAverage = calulateAverageOfLastScores(scores, averageSize, isTrimmed);\r\n    setAverage(currentAverage);\r\n\r\n    if (currentAverage > 0 && bestAverage === 0 || (currentAverage > 0 && (bestAverage <= 0 || bestAverage > currentAverage))) {\r\n      setBestAverage(Math.max(currentAverage, 0));\r\n      setNewHighScore(true);\r\n    }\r\n  }, [scores.length]);\r\n\r\n  return (\r\n    <Box>\r\n      {averageSize === 1\r\n        ? <Text color={newHighScore ? \"orange\" : \"white\"}>Top Score: {formatAverageTime(bestAverage)}</Text>\r\n        : <Box>\r\n          <Text> {isTrimmed ? \"Trimmed average\" : \"Average\"}  of {averageSize}: {formatAverageTime(average)}</Text>\r\n          <Text color={newHighScore ? \"orange\" : \"white\"}>Best {isTrimmed ? \"trimmed \" : \"\"} average of {averageSize}: {formatAverageTime(bestAverage)}</Text>\r\n        </Box>\r\n      }\r\n    </Box>\r\n\r\n  );\r\n};\r\n\r\nexport default AverageScore;","import React, { useEffect, useState } from 'react';\r\nimport { Box, Heading, Text } from 'grommet';\r\nimport ScoreRow from './ScoreRow';\r\nimport { useHighScoreState } from \"../../functions/useHighScoreState.js\";\r\nimport AverageScore from \"./AverageScore.js\";\r\n\r\n\r\nfunction ScoreBoard(props) {\r\n  let scores = props.scores;\r\n  let averagesToShow = props.averagesToShow ?? [];\r\n  let trimmedAveragesToShow = props.trimmedAveragesToShow ?? [];\r\n  let type = props.type;\r\n  let [streak, setStreak] = useState(0);\r\n  let [bestStreak, setBestStreak] = useHighScoreState(type + \"streak\");\r\n  let [newHighScore, setNewHighScore] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setNewHighScore(false);\r\n    if (scores.length > 0) {\r\n      let lastScore = scores[scores.length - 1]\r\n      if (lastScore[1] === false) {\r\n        setStreak(0);\r\n      }\r\n      else {\r\n        let currentStreak = streak + 1;\r\n        if (bestStreak < currentStreak) {\r\n          setBestStreak(currentStreak);\r\n          setNewHighScore(true);\r\n        }\r\n        setStreak(currentStreak);\r\n      }\r\n    }\r\n  }, [scores.length, scores]);\r\n\r\n  return (\r\n    <Box\r\n      flex={'grow'}\r\n      direction={\"row\"}\r\n      align={'stretch'}\r\n      wrap={true}\r\n      style={{ padding: \"5px\" }}\r\n    >\r\n      <Box\r\n        align={'start'}\r\n        style={{ padding: \"5px 10px\" }}\r\n        justify={'center'}>\r\n        <Heading level={3} style={{margin: \"0\"}}>Scores:</Heading>\r\n        <Box width={\"300px\"} height={\"150px\"}\r\n          style={{ border: \"2px solid white\", padding: \"10px\", overflowY: \"scroll\" }}>\r\n          {scores.length > 0 ? (scores.map(([score, success], index) =>\r\n            <ScoreRow key={index} index={index} score={score} success={success} />).reverse()\r\n          ) : <Text>No scores yet...</Text>}\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        align={'start'}\r\n        style={{ padding: \"15px\" }}\r\n        justify={'center'}>\r\n        <Text>Current Streak: {streak}</Text>\r\n        <Text color={newHighScore ? \"orange\" : \"white\"}>Best Streak: {bestStreak}</Text>\r\n        {averagesToShow.map((averageSize, i) =>\r\n          <AverageScore key={i} scores={scores} averageSize={averageSize} type={type}/>\r\n        )}\r\n        {trimmedAveragesToShow.map((averageSize, i) =>\r\n          <AverageScore key={i} scores={scores} averageSize={averageSize} type={type} isTrimmed={true}/>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ScoreBoard;","import React, { useEffect, useState } from 'react';\r\nimport { Box, Heading } from 'grommet';\r\nimport FooterBar from \"./FooterBar\";\r\nimport DayButtonGrid from \"./DayButtonGrid\";\r\nimport Stopwatch from \"../score/Stopwatch\";\r\nimport ScoreBoard from \"../score/ScoreBoard\";\r\nconst moment = require('moment');\r\nconst momentRandom = require('moment-random');\r\n\r\nfunction DoomdsdayGame(props) {\r\n  const generateRandomDay = () => momentRandom(\r\n    moment(props.endDate),\r\n    moment(props.startDate)\r\n  );\r\n\r\n  const parseDateToWeekDayNumber = (date) => Number(date.format('d'));\r\n\r\n  let initialDay = generateRandomDay();\r\n  const [currentDay, setCurrentDay] = useState(initialDay.format(\"Y-MM-DD\"));\r\n  const [scores, setScores] = useState([]);\r\n  const [selectedDayOfWeek, setSelectedDayOfWeek] = useState();\r\n  const [running, setRunning] = useState(true);\r\n  const [time, setTime] = useState(0);\r\n  const [expectedDayOfWeek, setExpectedDayOfWeek] = useState(parseDateToWeekDayNumber(initialDay));\r\n\r\n  useEffect(() => {\r\n    if (selectedDayOfWeek !== undefined) {\r\n      setRunning(false);\r\n      // if (selectedDayOfWeek === 0) {\r\n      if (selectedDayOfWeek === expectedDayOfWeek) {\r\n        scores.push([time, true]);\r\n      } else {\r\n        scores.push([time, false]);\r\n      }\r\n      setScores(scores);\r\n    }\r\n  }, [selectedDayOfWeek]);\r\n\r\n  const startNewRound = () => {\r\n    let nextDay = generateRandomDay();\r\n    setSelectedDayOfWeek(undefined);\r\n    setCurrentDay(nextDay.format(\"Y-MM-DD\"));\r\n    setExpectedDayOfWeek(parseDateToWeekDayNumber(nextDay));\r\n    setRunning(true);\r\n    setTime(0);\r\n  };\r\n\r\n  return (\r\n    <Box direction={\"column\"} flex={\"grow\"} style={{ width: \"100%\" }} alignSelf={'center'}>\r\n      <Box\r\n        key={currentDay}\r\n        flex={{ grow: 1 }}\r\n        align={'center'}\r\n        justify={'center'}\r\n        animation={{ \"type\": \"fadeIn\" }}\r\n      >\r\n        <Box flex={{ grow: 4 }}>\r\n          <Heading size={\"large\"} level={'1'}>\r\n            {currentDay}\r\n          </Heading>\r\n        </Box>\r\n      </Box>\r\n      <DayButtonGrid selectedDayOfWeek={selectedDayOfWeek} setSelectedDayOfWeek={setSelectedDayOfWeek} expectedDayOfWeek={expectedDayOfWeek} />\r\n      <Box align={'center'}>\r\n        <Stopwatch running={running} time={time} setTime={setTime} />\r\n        <ScoreBoard scores={scores} type=\"doomsday\" averagesToShow={[1, 3]} trimmedAveragesToShow={[5]}/>\r\n      </Box>\r\n      <FooterBar onContinueClick={startNewRound} isVisible={selectedDayOfWeek !== undefined} currentDay={currentDay} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default DoomdsdayGame;\r\n","import { Box, Button, Heading, TextInput } from \"grommet\";\r\nimport React, { useState } from \"react\";\r\nimport ScoreBoard from \"../score/ScoreBoard\";\r\nimport Stopwatch from \"../score/Stopwatch\";\r\n\r\nfunction MindPalaceGame(props) {\r\n  let numberLength = props.numberLength;\r\n  let choices = props.choices;\r\n  let type = props.type;\r\n  const [scores, setScores] = useState([]);\r\n  const [running, setRunning] = useState(true);\r\n  const [number, setNumber] = useState(generateTextWithLength());\r\n  const [answer, setAnswer] = React.useState(\"\");\r\n  const [hidden, setHidden] = React.useState(false);\r\n  const [time, setTime] = useState(0);\r\n\r\n  function insertIntervaledDash(str) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < str.length; i += 5) {\r\n      const chunk = str.slice(i, i + 5);\r\n      result += chunk + \"-\";\r\n    }\r\n\r\n    // Remove the trailing \"-\" if present\r\n    result = result.replace(/-$/, \"\");\r\n\r\n    return result.toUpperCase();\r\n  }\r\n\r\n  function generateTextWithLength() {\r\n    let randomText = \"\";\r\n    for (let i = 0; i < numberLength; i++) {\r\n      let chosenOption = choices[Math.floor(Math.random() * choices.length)];\r\n      randomText += chosenOption;\r\n    }\r\n\r\n    return randomText;\r\n  }\r\n\r\n  const SubmitAnswer = () => {\r\n    let success = false;\r\n    if (number.toUpperCase() === answer.toUpperCase()) {\r\n      success = true;\r\n    }\r\n\r\n    setRunning(false);\r\n    setHidden(false);\r\n    scores.push([time, success]);\r\n    setScores(scores);\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setTime(0);\r\n    setRunning(true);\r\n    setNumber(generateTextWithLength());\r\n    setAnswer(\"\");\r\n  };\r\n\r\n  const handleInput = (input) => {\r\n    setHidden(true);\r\n    setAnswer(input.toUpperCase());\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      direction={\"column\"}\r\n      flex={\"grow\"}\r\n      style={{ width: \"100%\" }}\r\n      alignSelf={\"center\"}\r\n    >\r\n      <Box\r\n        flex={{ grow: 1 }}\r\n        align={\"center\"}\r\n        justify={\"center\"}\r\n        animation={{ type: \"fadeIn\" }}\r\n      >\r\n        <Box flex={{ grow: 4 }}>\r\n          <Heading size={\"large\"} level={\"3\"} style={{ userSelect: \"none\", margin: \"10px 5px\", textAlign: \"center\"}}>\r\n            {!hidden\r\n              ? insertIntervaledDash(number)\r\n              : insertIntervaledDash(\"X\".repeat(answer.length))}\r\n          </Heading>\r\n        </Box>\r\n\r\n        {running ? (\r\n          <TextInput\r\n            placeholder=\"Type your answer here\"\r\n            value={answer}\r\n            onChange={(event) => handleInput(event.target.value)}\r\n          />\r\n        ) : (\r\n          <Heading level={\"3\"}>{insertIntervaledDash(answer)}</Heading>\r\n        )}\r\n        <Button\r\n          label=\"Submit\"\r\n          onClick={() => SubmitAnswer()}\r\n          style={{\r\n            marginTop: \"15px\",\r\n            visibility: !running ? \"hidden\" : \"visible\",\r\n          }}\r\n        />\r\n      </Box>\r\n\r\n      <Box\r\n        direction={\"row\"}\r\n        justify={\"center\"}\r\n        margin={{ bottom: \"small\", right: \"large\", left: \"large\" }}\r\n      >\r\n        <Button\r\n          label=\"Continue\"\r\n          style={{ visibility: running ? \"hidden\" : \"visible\" }}\r\n          onClick={() => resetGame()}\r\n        />\r\n      </Box>\r\n\r\n      <Box align={\"center\"}>\r\n        <Stopwatch running={running} time={time} setTime={setTime} />\r\n        <ScoreBoard\r\n          scores={scores}\r\n          type={type + numberLength}\r\n          averagesToShow={[1, 3]}\r\n          trimmedAveragesToShow={numberLength <= 10 ? [5, 10] : [5]}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MindPalaceGame;\r\n","import { Text } from \"grommet\";\r\nimport React, { useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport DoomdsdayGame from \"../components/doomsday/DoomdsdayGame\";\r\nimport MindPalaceGame from \"../components/mindPalace/MindPalaceGame\";\r\n\r\nexport const doomsday = \"Doomsday Algorithm\";\r\nexport const numberMemory = \"Numbers\";\r\nexport const alphabetMemory = \"Alphabet\";\r\n\r\nexport function MindGames(props) {\r\n  const [currentGame, setCurrentGame] = useState(doomsday);\r\n  const [currentOption, setCurrentOption] = useState(0);\r\n\r\n  const chooseNewGame = (game, options) => {\r\n    setCurrentGame(game);\r\n    setCurrentOption(options);\r\n  };\r\n\r\n  const games = {};\r\n  games[doomsday] = \"\";\r\n  games[numberMemory] = [10, 15, 20, 30];\r\n  games[alphabetMemory] = [10, 15, 20, 30];\r\n\r\n  return (\r\n    <div>\r\n      <Header chooseGame={chooseNewGame} games={games} />\r\n      {currentGame === doomsday ? (\r\n        <DoomdsdayGame startDate={\"1800-01-01\"} endDate={\"2199-12-31\"} />\r\n      ) : currentGame === numberMemory ? (\r\n        <MindPalaceGame\r\n          key={currentGame + currentOption}\r\n          type={\"numberMemory\" + currentOption}\r\n          numberLength={currentOption}\r\n          choices={[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"]}\r\n        />\r\n      ) : currentGame === alphabetMemory ? (\r\n        <MindPalaceGame\r\n          key={currentGame + currentOption}\r\n          type={\"alphabetMemory\" + currentOption}\r\n          numberLength={currentOption}\r\n          choices={[\r\n            \"A\",\r\n            \"B\",\r\n            \"C\",\r\n            \"D\",\r\n            \"E\",\r\n            \"F\",\r\n            \"G\",\r\n            \"H\",\r\n            \"I\",\r\n            \"J\",\r\n            \"K\",\r\n            \"L\",\r\n            \"M\",\r\n            \"N\",\r\n            \"O\",\r\n            \"P\",\r\n            \"Q\",\r\n            \"R\",\r\n            \"S\",\r\n            \"T\",\r\n            \"U\",\r\n            \"V\",\r\n            \"W\",\r\n            \"X\",\r\n            \"Y\",\r\n            \"Z\",\r\n          ]}\r\n        />\r\n      ) : (\r\n        <Text>Invalid Game Selected</Text>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Button, TextInput } from \"grommet\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport function AddSpyfallPlayer({ index, addNewPlayer, finishStage }) {\r\n  const [playerName, setplayerName] = useState(\"Player \" + (index + 1));\r\n  const [location, setlocation] = useState(\"\");\r\n  const [finishing, setfinishing] = useState(0);\r\n\r\n  const finish = () => {\r\n    setfinishing(finishing + 1);\r\n    if (finishing >= 1) {\r\n      finishStage();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <h3>Name:</h3>\r\n      <TextInput\r\n        onChange={(event) => setplayerName(event.target.value)}\r\n        value={playerName}\r\n      />\r\n      <h3>Location:</h3>\r\n      <TextInput\r\n        onChange={(event) => setlocation(event.target.value)}\r\n        value={location}\r\n      />\r\n\r\n      <Button\r\n        style={{ border: \"2px solid #6FFFB0\", borderRadius: \"18px\" }}\r\n        onClick={() => addNewPlayer(playerName, location)}\r\n        label=\"Next Player\"\r\n      ></Button>\r\n      <Button\r\n        style={{ border: \"2px solid #6FFFB0\", borderRadius: \"18px\" }}\r\n        onClick={finish}\r\n        label={finishing === 0 ? \"Finish Stage\" : \"Are you sure?\"}\r\n      ></Button>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Button, Text } from \"grommet\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\n\r\nexport function SpyfallPlayerView({\r\n  currentPlayer,\r\n  chosenLocation,\r\n  isSpy,\r\n  nextPlayer,\r\n}) {\r\n  const [hidden, sethidden] = useState(true);\r\n  const btnRef = useRef(null);\r\n\r\n  return (\r\n    <Box>\r\n      <Text>Pass to {currentPlayer.name}</Text>\r\n      <Button \r\n        style={{ \"border\": \"2px solid #6FFFB0\", \"borderRadius\": \"18px\" }}\r\n      \r\n      ref={btnRef} onClick={() => sethidden((current) => !current)}>\r\n        Show Role\r\n      </Button>\r\n      <Text>\r\n        {hidden\r\n          ? \"Press Button to show role\"\r\n          : isSpy\r\n          ? \"You are the spy!\"\r\n          : `The location is ${chosenLocation}`}\r\n      </Text>\r\n\r\n      <Button\r\n        style={{ \"border\": \"2px solid #6FFFB0\", \"borderRadius\": \"18px\" }}\r\n        onClick={nextPlayer}\r\n        label=\"Next Player\"\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","export class SpyfallPlayer {\r\n    constructor(index, name, location) {\r\n      this.index = index;\r\n      this.name = name;\r\n      this.location = location;\r\n    }\r\n  }","import { Box, Button, Heading, Text, TextInput } from \"grommet\";\r\nimport React, { useState } from \"react\";\r\nimport { AddSpyfallPlayer } from \"../components/spyfall/AddSpyfallPlayer\";\r\nimport { SpyfallPlayerView } from \"../components/spyfall/SpyfallPlayerView\";\r\nimport { SpyfallPlayer } from \"../components/spyfall/spyfallData\";\r\nimport Stopwatch from \"./../components/score/Stopwatch\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst GameStages = {\r\n  initializing: 0,\r\n  passing: 1,\r\n  adminStart: 2,\r\n  playing: 3,\r\n  finished: 4,\r\n};\r\n\r\nfunction InitializeSpyFall(props) {\r\n  return (\r\n    <Box>\r\n      <Text>Current Player Count: {props.players.length}</Text>\r\n      <AddSpyfallPlayer\r\n        key={props.players.length}\r\n        index={props.players.length}\r\n        addNewPlayer={props.addPlayer}\r\n        finishStage={() => props.setgameStage(GameStages.adminStart)}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction SpyfallAdminStart(props) {\r\n  return (\r\n    <Box>\r\n      <Text>Player Count: {props.length}</Text>\r\n      <Text>Valid location Count: {props._length}</Text>\r\n      <Text>Spy Count:</Text>\r\n      <TextInput\r\n        placeholder=\"Spy Count\"\r\n        type={\"number\"}\r\n        value={props.spyAmount}\r\n        onChange={(event) => props.setspyAmount(event.target.value)}\r\n      />\r\n      <Button\r\n        style={{ border: \"2px solid #6FFFB0\", borderRadius: \"18px\" }}\r\n        onClick={() => props.startPassing()}\r\n        label=\"Begin!\"\r\n      ></Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction SpyfallPlaying(props) {\r\n  return (\r\n    <Box\r\n      flex={{ grow: 1 }}\r\n      align={\"center\"}\r\n      justify={\"center\"}\r\n      animation={{ type: \"fadeIn\" }}\r\n    >\r\n      <Stopwatch running={true} time={props.time} setTime={props.setTime} />\r\n      <Text>Began Playing</Text>\r\n      <Text>\r\n        There{\" \"}\r\n        {props.chosenSpiesIds.length === 1\r\n          ? \"is 1 spy\"\r\n          : `are ${props.chosenSpiesIds.length} spies`}\r\n      </Text>\r\n      <Button\r\n        style={{ border: \"2px solid #6FFFB0\", borderRadius: \"18px\" }}\r\n        hidden={props.finishingRound < 2}\r\n        onClick={props.finishRound}\r\n        label={props.finishingRound === 0 ? \"Finish Round\" : \"Are you sure?\"}\r\n      ></Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport function Spyfall({ exit }) {\r\n  const [gameStage, setgameStage] = useState(GameStages.initializing);\r\n  // const [gameStage, setgameStage] = useState(GameStages.adminStart);\r\n  const [players, setplayers] = useState([]);\r\n  // const [players, setplayers] = useState([\r\n  // new SpyfallPlayer(0, \"Player 1\", \"\"),\r\n  // new SpyfallPlayer(1, \"Player 2\", \"aaa\"),\r\n  // new SpyfallPlayer(2, \"Player 3\", \"\"),\r\n  // new SpyfallPlayer(3, \"Player 4\", \"\"),\r\n  // ]);\r\n  const [time, setTime] = useState(0);\r\n  const [chosenLocation, setchosenLocation] = useState();\r\n  const [chosenSpiesIds, setchosenSpiesIds] = useState([]);\r\n  const [spyAmount, setspyAmount] = useState(1);\r\n  const [currentPlayerIndex, setcurrentPlayerIndex] = useState(0);\r\n  const [finishingRound, setfinishingRound] = useState(0);\r\n  const finishRound = () => {\r\n    setfinishingRound(finishingRound + 1);\r\n    if (finishingRound >= 1) {\r\n      setgameStage(GameStages.finished);\r\n    }\r\n  };\r\n\r\n  const addPlayer = (name, location) => {\r\n    console.info(\"Added Player\");\r\n    let newPlayer = new SpyfallPlayer(players.length, name, location);\r\n    setplayers([...players, newPlayer]);\r\n  };\r\n\r\n  const getValidLocations = () => {\r\n    return players.filter((player) => player.location.length > 0);\r\n  };\r\n\r\n  const initializeSpyfallGame = () => {\r\n    let playersWithLocations = getValidLocations();\r\n    console.info(`Got ${playersWithLocations.length} valid locations`);\r\n    if (playersWithLocations.length === 0) {\r\n      alert(\"No valid locations!\");\r\n      exit();\r\n      return;\r\n    }\r\n    let chosenPlayer =\r\n      playersWithLocations[\r\n        Math.floor(Math.random() * playersWithLocations.length)\r\n      ];\r\n    console.info(`Chosen location of player i. ${chosenPlayer.index}`);\r\n    setchosenLocation(chosenPlayer.location);\r\n\r\n    let invalidSpyIds = [chosenPlayer.index];\r\n    let spies = [];\r\n\r\n    if (players.length - invalidSpyIds.length < spyAmount){\r\n      alert(\"Too many spies!\");\r\n      exit();\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < spyAmount; i++) {\r\n      let spyId = Math.floor(\r\n        Math.random() * (players.length - invalidSpyIds.length)\r\n      );\r\n      invalidSpyIds.forEach((invalidId) => {\r\n        if (spyId >= invalidId) {\r\n          spyId += 1;\r\n        }\r\n      });\r\n      console.info(`Chosen spy with index: ${spyId}`);\r\n      spies.push(spyId);\r\n      invalidSpyIds.push(spyId);\r\n      invalidSpyIds = invalidSpyIds.sort();\r\n    }\r\n    setchosenSpiesIds(spies);\r\n  };\r\n\r\n  const passToNextPlayer = () => {\r\n    if (currentPlayerIndex < players.length - 1) {\r\n      setcurrentPlayerIndex(currentPlayerIndex + 1);\r\n    } else {\r\n      setgameStage(GameStages.playing);\r\n    }\r\n  };\r\n\r\n  const startPassing = () => {\r\n    setgameStage(GameStages.passing);\r\n    initializeSpyfallGame();\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      flex={{ grow: 1 }}\r\n      align={\"center\"}\r\n      justify={\"center\"}\r\n      animation={{ type: \"fadeIn\" }}\r\n    >\r\n      <Box\r\n        align=\"center\"\r\n        as=\"header\"\r\n        direction=\"row\"\r\n        flex={false}\r\n        justify=\"center\"\r\n        height=\"50px\"\r\n      >\r\n        <Heading level={2}>Spyfall</Heading>\r\n      </Box>\r\n      {gameStage === GameStages.initializing ? (\r\n        <InitializeSpyFall\r\n          setgameStage={setgameStage}\r\n          players={players}\r\n          addPlayer={addPlayer}\r\n        ></InitializeSpyFall>\r\n      ) : gameStage === GameStages.adminStart ? (\r\n        <SpyfallAdminStart\r\n          length={players.length}\r\n          spyAmount={spyAmount}\r\n          setspyAmount={setspyAmount}\r\n          _length={getValidLocations().length}\r\n          startPassing={startPassing}\r\n        ></SpyfallAdminStart>\r\n      ) : gameStage === GameStages.passing ? (\r\n        <SpyfallPlayerView\r\n          key={currentPlayerIndex}\r\n          chosenLocation={chosenLocation}\r\n          currentPlayer={players[currentPlayerIndex]}\r\n          isSpy={chosenSpiesIds.includes(currentPlayerIndex)}\r\n          nextPlayer={() => passToNextPlayer()}\r\n        />\r\n      ) : gameStage === GameStages.playing ? (\r\n        <SpyfallPlaying\r\n          time={time}\r\n          setTime={setTime}\r\n          chosenSpiesIds={chosenSpiesIds}\r\n          finishingRound={finishingRound}\r\n          finishRound={finishRound}\r\n        ></SpyfallPlaying>\r\n      ) : (\r\n        <Box>\r\n          <Stopwatch running={false} time={time} setTime={setTime} />\r\n          <Text>Finished Playing</Text>\r\n          <Text>The spy/ies are:</Text>\r\n          {chosenSpiesIds.map((spyId, i) => (\r\n            <Text key={i}>{players[spyId].name}</Text>\r\n          ))}\r\n          <Link\r\n            style={{ border: \"2px solid #6FFFB0\", borderRadius: \"18px\" }}\r\n            to=\"/\"\r\n          >Next Round!</Link>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Grommet } from \"grommet\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport GitHubButton from \"react-github-btn\";\r\nimport { BrowserRouter, Route, Routes, Link, useLocation } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { MindGames } from \"./views/MindGames\";\r\nimport { Spyfall } from \"./views/Spyfall\";\r\n\r\nconst theme = {\r\n  global: {\r\n    font: {\r\n      family: \"Solway\",\r\n    },\r\n  },\r\n};\r\n\r\nclass View {\r\n  constructor(display, url, componment) {\r\n    this.display = display;\r\n    this.url = url;\r\n    this.componment = componment;\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const [selectedView, setSelectedView] = useState(\"\");\r\n  const views = [\r\n    new View(\"Mind Games\", \"/mind_games\", <MindGames />),\r\n    new View(\r\n      \"Spy Fall\",\r\n      \"/spy_fall\",\r\n      <Spyfall exit={() => setSelectedView(\"\")} />\r\n    ),\r\n  ];\r\n\r\n  useEffect(() => {\r\n    console.info(window.location.pathname)\r\n  }, []);\r\n\r\n  return (\r\n    <Grommet theme={theme} full>\r\n      <Box\r\n        background={\"brand\"}\r\n        direction={\"column\"}\r\n        style={{ minHeight: \"100%\" }}\r\n      >\r\n        <BrowserRouter>\r\n          <Routes>\r\n            <Route\r\n              path=\"/\"\r\n              element={MainMenu(selectedView, views, setSelectedView)}\r\n            />\r\n            {views.map((view, i) => (\r\n              <Route key={i} path={view.url} element={view.componment} />\r\n            ))}\r\n          </Routes>\r\n        </BrowserRouter>\r\n      </Box>\r\n    </Grommet>\r\n  );\r\n}\r\n\r\nexport default App;\r\nfunction MainMenu(selectedView, views, setSelectedView) {\r\n  return (\r\n    <Box\r\n      background={\"brand\"}\r\n      direction={\"column\"}\r\n      style={{ minHeight: \"100%\" }}\r\n    >\r\n      {selectedView === \"\" ? views.map((view, i) => (\r\n        <Link\r\n          key={i}\r\n          align={\"center\"}\r\n          onClick={() => {\r\n          setSelectedView(view);\r\n          }}\r\n          to={view.url}\r\n        >\r\n          {i + 1} - {view.display}\r\n        </Link>\r\n      )): selectedView.componment}\r\n\r\n      <Box\r\n        direction={\"row\"}\r\n        justify={\"end\"}\r\n        style={{ position: \"fixed\", bottom: 0, right: 0 }}\r\n        margin={{ right: \"large\", left: \"large\" }}\r\n      >\r\n        <GitHubButton\r\n          href=\"https://github.com/dansegal10/Doomsday-algorithm-practice\"\r\n          data-icon=\"octicon-star\"\r\n          data-show-count=\"true\"\r\n          aria-label=\"Star me on GitHub\"\r\n        >\r\n          Star\r\n        </GitHubButton>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}