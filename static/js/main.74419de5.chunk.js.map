{"version":3,"sources":["components/ExplanationModal.js","components/FooterBar.js","functions/useDidUpdate.js","components/DayButton.js","components/DayButtonGrid.js","functions/formatScoreTime.js","components/Stopwatch.js","components/ScoreRow.js","services/storage.js","functions/useHighScoreState.js","components/AverageScore.js","components/ScoreBoard.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["centuryIndexMap","18","19","20","21","doomsdaysForMonth","1","2","3","4","5","6","7","8","9","10","11","12","doomsdaysForMonthInLeapYear","_objectSpread","ExplanationModal","props","day","moment","currentDay","centuryIndex","format","substring","year","Number","yearAfter1Step","yearAfter2Step","yearAfter3Step","nearestMultiple","weekDay","doomsday","isLeapYear","concat","dayNumber","doomsdayNumber","doomsdayToDayChain","Math","abs","push","length","React","createElement","Box","direction","margin","Heading","alignSelf","className","Text","bottom","pad","horizontal","vertical","Fragment","map","date","index","key","FooterBar","_useState","useState","_useState2","_slicedToArray","fullyHidden","setFullyHidden","_React$useState","_React$useState2","showExplanation","setShowExplanation","callback","deps","hasMount","useRef","useEffect","current","useDidUpdate","isVisible","justify","right","left","animation","Button","label","onClick","style","visibility","Layer","onEsc","onClickOutside","responsive","onContinueClick","DayButton","anySelected","undefined","selectedDayOfWeek","isSelectedButFalse","expectedDayOfWeek","number","isCorrect","flex","basis","align","boxShadow","background","setSelectedDayOfWeek","size","weekdays","DayButtonGrid","selected","setSelected","expected","grow","width","wrap","formatScoreTime","time","floor","slice","Stopwatch","running","setTime","interval","setInterval","prevTime","clearInterval","level","ScoreRow","score","success","height","color","marginRight","storage","type","parseInt","localStorage","getItem","setItem","useHighScoreState","highScore","setHighScore","formatAverageTime","averageTime","AverageScore","scores","averageSize","average","setAverage","_useHighScoreState","toString","_useHighScoreState2","bestAverage","setBestAverage","currentAverage","lastAmount","relevantScores","reverse","sum","i","calulateAverageOfLastScores","max","averagesToShow","ScoreBoard","streak","setStreak","bestStreak","setBestStreak","currentStreak","padding","border","overflowY","_ref","_ref2","require","momentRandom","Game","generateRandomDay","endDate","startDate","parseDateToWeekDayNumber","initialDay","setCurrentDay","_useState3","_useState4","setScores","_useState5","_useState6","_useState7","_useState8","setRunning","_useState9","_useState10","_useState11","_useState12","setExpectedDayOfWeek","fill","overflow","maxWidth","nextDay","GitHubButton","href","data-icon","data-show-count","aria-label","theme","global","font","family","App","Grommet","full","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.74419de5.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\r\nimport {Box, Heading, Text} from \"grommet\";\r\nimport * as moment from \"moment\";\r\n\r\nconst centuryIndexMap = {18: 5, 19: 3, 20: 2, 21: 0};\r\nconst doomsdaysForMonth = {1: \"03\", 2: \"14\", 3: \"07\", 4: \"04\", 5: \"09\", 6: \"06\", 7: \"11\", 8: \"08\", 9: \"05\", 10: \"10\", 11: \"07\", 12: \"12\"};\r\nconst doomsdaysForMonthInLeapYear = {...doomsdaysForMonth, 1: \"04\", 2: \"15\"};\r\n\r\nexport default function ExplanationModal(props) {\r\n\r\n  let day = moment(props.currentDay);\r\n\r\n  let centuryIndex = centuryIndexMap[day.format(\"Y\").substring(0, 2)];\r\n  let year = Number(day.format(\"YY\"));\r\n  let yearAfter1Step = year % 2 === 1 ? (year + 11) : year;\r\n  let yearAfter2Step = yearAfter1Step / 2;\r\n  let yearAfter3Step = yearAfter2Step % 2 === 1 ? yearAfter2Step + 11 : yearAfter2Step;\r\n  let nearestMultiple = yearAfter3Step % 7 === 0 ?  yearAfter3Step : yearAfter3Step + 7 - (yearAfter3Step % 7);\r\n  let weekDay = (nearestMultiple - yearAfter3Step + centuryIndex) % 7;\r\n  let doomsday = day.isLeapYear() ?\r\n      `${day.format(\"MM-\")}${doomsdaysForMonthInLeapYear[day.format(\"M\")]}` :\r\n      `${day.format(\"MM-\")}${doomsdaysForMonth[day.format(\"M\")]}`;\r\n\r\n  let dayNumber = Number(day.format(\"D\"));\r\n  let doomsdayNumber = Number(doomsday.substring(3));\r\n  let doomsdayToDayChain = [];\r\n\r\n  while (Math.abs(dayNumber - doomsdayNumber) > 6) {\r\n    doomsdayToDayChain.push(`${day.format(\"MM-\")}${doomsdayNumber < 10 ? `0${doomsdayNumber}` : doomsdayNumber}`);\r\n    if (doomsdayNumber < dayNumber) doomsdayNumber += 7;\r\n    else doomsdayNumber -= 7;\r\n  }\r\n  if (doomsdayToDayChain.length > 0) {\r\n    doomsdayToDayChain.push(`${day.format(\"MM-\")}${doomsdayNumber < 10 ? `0${doomsdayNumber}` : doomsdayNumber}`);\r\n  }\r\n\r\n  return <Box direction={\"column\"} margin={\"medium\"}>\r\n    <Heading alignSelf={\"center\"}>\r\n      <span className={\"century\"}>{day.format(\"Y\").substring(0, 2)}</span>\r\n      <span className={\"year\"}>{day.format(\"YY\")}</span>-\r\n      <span className={\"month\"}>{day.format(\"MM\")}</span>-\r\n      <span className={\"day\"}>{day.format(\"DD\")}</span>\r\n    </Heading>\r\n    <Text margin={{bottom: \"xsmall\"}}>\r\n      Century index for the <b className={\"century\"}>{day.format(\"Y\").substring(0, 2)}</b>00s is <b className={\"centuryIndex\"}>{centuryIndex}</b>.\r\n    </Text>\r\n    <Text>\r\n      Calculating the year index for year <b className={\"year\"}>{day.format(\"YY\")}</b> using \"odd + 11\" method:\r\n    </Text>\r\n    <Box pad={{horizontal: \"medium\", vertical: 'xsmall'}} margin={{bottom: \"xsmall\"}}>\r\n      {year !== yearAfter1Step &&\r\n        <Text>{year} is odd, adding 11: {year} + 11 = {yearAfter1Step};</Text>\r\n      }\r\n      <Text>{yearAfter1Step} is even, dividing by 2: {yearAfter1Step} / 2 = { yearAfter2Step === yearAfter3Step ? <><b className={\"yearIndex\"}>{yearAfter2Step}</b>.</> : `${yearAfter2Step};`}</Text>\r\n      {yearAfter2Step !== yearAfter3Step &&\r\n        <Text>{yearAfter2Step} is odd, adding 11: {yearAfter2Step} + 11 = <b className={\"yearIndex\"}>{yearAfter3Step}</b>.</Text>\r\n      }\r\n    </Box>\r\n    <Text>The nearest higher multiple of 7 to <b className={\"yearIndex\"}>{yearAfter3Step}</b> is <b className={\"nearestMultiple\"}>{nearestMultiple}</b>.</Text>\r\n    <Text margin={{bottom: \"xsmall\"}}>Calculating the weekday of the doomsday: (<b className={\"nearestMultiple\"}>{nearestMultiple}</b> - <b className={\"yearIndex\"}>{yearAfter3Step}</b> + <b className={\"centuryIndex\"}>{centuryIndex}</b>) mod 7 = <b className={\"doomsdayWeekDay\"}>{weekDay}</b> <b>({moment.weekdays(weekDay)})</b>.</Text>\r\n    <Text>\r\n      Doomsday for {day.format(\"MMMM\")} is <b>{doomsday.substring(0, 3)}</b><b className={doomsdayToDayChain.length === 0 ? \"doomsday\" : \"\"}>{doomsday.substring(3)}</b>{day.isLeapYear() && (day.format(\"M\") < 3) && <b> (leap year)</b>}.\r\n    </Text>\r\n    {doomsdayToDayChain.length > 0 && <>\r\n      <Text>Selecting a doomsday closer to our date:</Text>\r\n      <Box pad={{horizontal: \"medium\", vertical: 'xsmall'}}>\r\n        <Text>\r\n          {doomsdayToDayChain.map((date, index) => {\r\n            if (index === doomsdayToDayChain.length - 1) return <Fragment key={index}><b>{date.substring(0, 3)}</b><b className={\"doomsday\"}>{date.substring(3)}</b>.</Fragment>;\r\n            return `${date} -> `\r\n          })}\r\n        </Text>\r\n      </Box>\r\n      </>\r\n    }\r\n    {doomsdayNumber === dayNumber ?\r\n        <Text>Our date matches the doomsday, and it is <b>{day.format(\"dddd\")}</b>.</Text> :\r\n        <Text>Calculating the day of the week: (<b className={\"doomsdayWeekDay\"}>{weekDay}</b> {dayNumber > doomsdayNumber ?\r\n            <> + (<b className={\"day\"}>{dayNumber}</b> - <b className={\"doomsday\"}>{doomsdayNumber}</b>)</> :\r\n            <> - (<b className={\"doomsday\"}>{doomsdayNumber}</b> - <b className={\"day\"}>{dayNumber}</b>)</>\r\n        }) mod 7 = <b>{day.format(\"d\")} ({day.format(\"dddd\")})</b>.</Text>\r\n    }\r\n  </Box>\r\n}","import React, {useState} from 'react';\r\nimport {Box, Button, Layer} from \"grommet\";\r\nimport useDidUpdate from \"../functions/useDidUpdate\";\r\nimport ExplanationModal from \"./ExplanationModal\";\r\n\r\nexport default function FooterBar(props) {\r\n\r\n  const [fullyHidden, setFullyHidden] = useState(true);\r\n  const [showExplanation, setShowExplanation] = React.useState(false);\r\n\r\n  useDidUpdate(() => {\r\n    setFullyHidden(false)\r\n  }, [props.isVisible]);\r\n\r\n  return <Box\r\n    key={props.isVisible}\r\n    direction={\"row\"}\r\n    justify={\"between\"}\r\n    margin={{bottom: \"small\", right: \"large\", left: \"large\"}}\r\n    animation={props.isVisible ? {\"type\": \"fadeIn\"} : {\"type\": \"fadeOut\", \"duration\": 200}}\r\n  >\r\n    <Button\r\n        label={\"Explanation\"}\r\n        onClick={props.isVisible ? () => setShowExplanation(true) : () => {}}\r\n        style={{visibility: (fullyHidden ? \"hidden\" : \"visible\")}}\r\n    />\r\n    {showExplanation && (\r\n        <Layer\r\n            onEsc={() => setShowExplanation(false)}\r\n            onClickOutside={() => setShowExplanation(false)}\r\n            margin={\"medium\"}\r\n            className={\"modal\"}\r\n            responsive={false}\r\n        >\r\n          <ExplanationModal currentDay={props.currentDay}/>\r\n        </Layer>\r\n    )}\r\n    <Button\r\n      label={\"Continue\"}\r\n      onClick={props.isVisible ? props.onContinueClick : () => {}}\r\n      style={{visibility: (fullyHidden ? \"hidden\" : \"visible\")}}\r\n    />\r\n  </Box>\r\n}\r\n","import {useEffect, useRef} from 'react';\r\n\r\nexport default function useDidUpdate (callback, deps) {\r\n  const hasMount = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (hasMount.current) {\r\n      callback()\r\n    } else {\r\n      hasMount.current = true\r\n    }\r\n  }, deps)\r\n}\r\n","import {Box, Text} from \"grommet\";\r\nimport React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nexport default function DayButton(props) {\r\n\r\n  const anySelected = props.selectedDayOfWeek !== undefined;\r\n\r\n  const isSelectedButFalse =  anySelected &&\r\n    props.selectedDayOfWeek !== props.expectedDayOfWeek &&\r\n    props.number === props.selectedDayOfWeek;\r\n\r\n  const isCorrect = anySelected &&\r\n    props.number === props.expectedDayOfWeek;\r\n\r\n  return props.number !== undefined ?\r\n    <Box\r\n      flex={{'grow': 1}}\r\n      basis={'xxsmall'}\r\n      align={'center'}\r\n      justify={'center'}\r\n      style={{boxShadow: \"none\"}}\r\n      animation={(isSelectedButFalse || isCorrect) ? {\"type\": \"zoomIn\", \"duration\": 400} : {}}\r\n      background={isSelectedButFalse ? 'status-error' : (isCorrect ? 'status-ok' : \"\")}\r\n      onClick={() => {\r\n        if (!anySelected) props.setSelectedDayOfWeek(props.number)\r\n      }}\r\n    >\r\n      <Text size={\"large\"}>{moment.weekdays(props.number)}</Text>\r\n    </Box> :\r\n    <Box\r\n      flex={{'grow': 1}}\r\n      basis={'xxsmall'}\r\n    />;\r\n}\r\n","import {Box} from \"grommet\";\r\nimport DayButton from \"./DayButton\";\r\nimport React from \"react\";\r\n\r\nexport default function DayButtonGrid(props) {\r\n\r\n  let selected = props.selectedDayOfWeek;\r\n  let setSelected = props.setSelectedDayOfWeek;\r\n  let expected = props.expectedDayOfWeek;\r\n\r\n  return <Box\r\n    flex={{grow: 2}}\r\n    direction={'column'}\r\n    justify={'center'}\r\n    alignSelf={'center'}\r\n    style={{width: \"100%\"}}\r\n  >\r\n    <Box\r\n      flex={'grow'}\r\n      direction={\"row\"}\r\n      align={'stretch'}\r\n      wrap={true}\r\n    >\r\n      <DayButton number={1} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n      <DayButton number={2} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n      <DayButton number={3} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n    </Box>\r\n    <Box\r\n      flex={'grow'}\r\n      direction={\"row\"}\r\n      align={'stretch'}\r\n      wrap={true}\r\n    >\r\n      <DayButton number={4} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n      <DayButton number={5} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n      <DayButton number={6} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n    </Box>\r\n    <Box\r\n      flex={'grow'}\r\n      direction={\"row\"}\r\n      align={'stretch'}\r\n      wrap={true}\r\n    >\r\n      <DayButton />\r\n      <DayButton number={0} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n      <DayButton />\r\n    </Box>\r\n  </Box>\r\n}\r\n","export default function formatScoreTime (time) {\r\n    let minutes = (\"0\" + Math.floor(time / 60000) % 60).slice(-2);\r\n    let seconds = (\"0\" + Math.floor(time / 1000) % 60).slice(-2);\r\n    let milliSeconds = (\"0\" + Math.floor(time / 10) % 100).slice(-2);\r\n    return minutes + \":\" + seconds + \".\" + milliSeconds;\r\n  }","import React, { useEffect } from 'react';\r\nimport formatScoreTime from \"../functions/formatScoreTime.js\";\r\nimport { Box, Heading } from 'grommet';\r\n\r\nfunction Stopwatch(props) {\r\n  let running = props.running;\r\n  let time = props.time;\r\n  let setTime = props.setTime;\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (running) {\r\n      interval = setInterval(() => {\r\n        setTime((prevTime) => prevTime + 10);\r\n      }, 10);\r\n    } else if (!running) {\r\n      clearInterval(interval);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [running, setTime]);\r\n\r\n  return (\r\n    <Box>\r\n      <Heading level={3}>{formatScoreTime(time)}</Heading>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Stopwatch;","import React from 'react';\r\nimport { Box, Text } from 'grommet';\r\nimport formatScoreTime from \"../functions/formatScoreTime.js\";\r\n\r\n\r\nfunction ScoreRow(props) {\r\n    let score = props.score;\r\n    let success = props.success;\r\n    let index = props.index;\r\n\r\n    return (\r\n        <Box\r\n            flex={'grow'}\r\n            direction={\"row\"}\r\n            align={'stretch'}\r\n            height=\"25px\"\r\n            wrap={true}>\r\n            <Text color=\"darkslategrey\" style={{ marginRight: \"10px\" }}>{index + 1}</Text>\r\n            <Text color={success ? \"white\" : \"darkred\"}>{formatScoreTime(score)}</Text>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ScoreRow;","const getHighScore = (type) => parseInt(localStorage.getItem('highScore' + type)) || 0;\r\nconst setHighScore = (type, score) => {\r\n  localStorage.setItem('highScore' + type, score)\r\n};\r\n\r\nexport const storage = {\r\n  getHighScore,\r\n  setHighScore\r\n};","import { useState, useEffect } from 'react';\r\nimport {storage} from \"../services/storage\";\r\n\r\nexport function useHighScoreState(type) {\r\n  const [highScore, setHighScore] = useState(storage.getHighScore(type));\r\n\r\n  useEffect(() => {\r\n    storage.setHighScore(type, highScore)\r\n  }, [highScore]);\r\n\r\n  return [highScore, setHighScore];\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Box, Text } from 'grommet';\r\nimport formatScoreTime from \"../functions/formatScoreTime.js\";\r\nimport { useHighScoreState } from \"../functions/useHighScoreState.js\";\r\n\r\nconst calulateAverageOfLastScores = (scores, lastAmount) => {\r\n  let scoreCopy = scores.slice(0);\r\n  let relevantScores = scoreCopy.reverse().slice(0, lastAmount);\r\n  if (relevantScores.length < lastAmount) {\r\n    return 0;\r\n  }\r\n\r\n  let sum = 0;\r\n  for (let i = 0; i < relevantScores.length; i++) {\r\n    if (relevantScores[i][1] === false) {\r\n      return -1;\r\n    }\r\n    sum += relevantScores[i][0];\r\n  }\r\n\r\n  return sum / relevantScores.length;\r\n}\r\n\r\nconst formatAverageTime = (averageTime) => {\r\n  if (averageTime === -1) {\r\n    return \"DNF\";\r\n  } else if (averageTime === 0) {\r\n    return \"-\";\r\n  }\r\n  return formatScoreTime(averageTime);\r\n}\r\n\r\n\r\nfunction AverageScore(props) {\r\n  let scores = props.scores;\r\n  let averageSize = props.averageSize;\r\n  let [average, setAverage] = useState(0);\r\n  let [bestAverage, setBestAverage] = useHighScoreState(averageSize.toString());\r\n\r\n  useEffect(() => {\r\n    let currentAverage = calulateAverageOfLastScores(scores, averageSize);\r\n    setAverage(currentAverage);\r\n\r\n    if (bestAverage === 0 || (currentAverage > 0 && (bestAverage <= 0 || bestAverage > currentAverage))) {\r\n      setBestAverage(Math.max(currentAverage, 0));\r\n    }\r\n  }, [scores.length]);\r\n\r\n  return (\r\n    <Box>\r\n      <Text>Average of {averageSize}: {formatAverageTime(average)}</Text>\r\n      <Text>Best Average of {averageSize}: {formatAverageTime(bestAverage)}</Text>\r\n    </Box>\r\n\r\n  );\r\n};\r\n\r\nexport default AverageScore;","import React, { useEffect, useState } from 'react';\r\nimport { Box, Heading, Text } from 'grommet';\r\nimport ScoreRow from './ScoreRow';\r\nimport { useHighScoreState } from \"../functions/useHighScoreState.js\";\r\nimport AverageScore from \"./AverageScore.js\";\r\n\r\nconst averagesToShow = [5, 12];\r\n\r\nfunction ScoreBoard(props) {\r\n  let scores = props.scores;\r\n  let [streak, setStreak] = useState(0);\r\n  let [bestStreak, setBestStreak] = useHighScoreState(\"streak\");\r\n\r\n  useEffect(() => {\r\n    if (scores.length > 0) {\r\n      let lastScore = scores[scores.length - 1]\r\n      if (lastScore[1] === false) {\r\n        setStreak(0);\r\n      }\r\n      else {\r\n        let currentStreak = streak + 1;\r\n        if (bestStreak < currentStreak) {\r\n          setBestStreak(currentStreak);\r\n        }\r\n        setStreak(currentStreak);\r\n      }\r\n    }\r\n  }, [scores.length, scores]);\r\n\r\n  return (\r\n    <Box\r\n      flex={'grow'}\r\n      direction={\"row\"}\r\n      align={'stretch'}\r\n      wrap={true}\r\n      style={{ padding: \"15px\" }}\r\n    >\r\n      <Box\r\n        align={'start'}\r\n        style={{ padding: \"15px\" }}\r\n        justify={'center'}>\r\n        <Heading level={3}>Scores:</Heading>\r\n        <Box width={\"300px\"} height={\"150px\"}\r\n          style={{ border: \"2px solid white\", padding: \"10px\", overflowY: \"scroll\" }}>\r\n          {scores.length > 0 ? (scores.map(([score, success], index) =>\r\n            <ScoreRow key={index} index={index} score={score} success={success} />).reverse()\r\n          ) : <Text>No scores yet...</Text>}\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        align={'start'}\r\n        style={{ padding: \"15px\" }}\r\n        justify={'center'}>\r\n        {averagesToShow.map((averageSize, i) =>\r\n          <AverageScore key={i} scores={scores} averageSize={averageSize} />\r\n        )}\r\n        <Text>Current Streak: {streak}</Text>\r\n        <Text>Best Streak: {bestStreak}</Text>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ScoreBoard;","import React, { useEffect, useState } from 'react';\r\nimport { Box, Heading } from 'grommet';\r\nimport FooterBar from \"./components/FooterBar\";\r\nimport DayButtonGrid from \"./components/DayButtonGrid\";\r\nimport Stopwatch from \"./components/Stopwatch\";\r\nimport ScoreBoard from \"./components/ScoreBoard\";\r\nimport GitHubButton from 'react-github-btn'\r\nconst moment = require('moment');\r\nconst momentRandom = require('moment-random');\r\n\r\nfunction Game(props) {\r\n\r\n  const generateRandomDay = () => momentRandom(\r\n    moment(props.endDate),\r\n    moment(props.startDate)\r\n  );\r\n\r\n  const parseDateToWeekDayNumber = (date) => Number(date.format('d'));\r\n\r\n  let initialDay = generateRandomDay();\r\n  const [currentDay, setCurrentDay] = useState(initialDay.format(\"Y-MM-DD\"));\r\n  const [scores, setScores] = useState([]);\r\n  const [selectedDayOfWeek, setSelectedDayOfWeek] = useState();\r\n  const [running, setRunning] = useState(true);\r\n  const [time, setTime] = useState(0);\r\n  const [expectedDayOfWeek, setExpectedDayOfWeek] = useState(parseDateToWeekDayNumber(initialDay));\r\n\r\n  useEffect(() => {\r\n    if (selectedDayOfWeek !== undefined) {\r\n      setRunning(false);\r\n    }\r\n  }, [selectedDayOfWeek]);\r\n\r\n  const startNewRound = () => {\r\n    let nextDay = generateRandomDay();\r\n    setCurrentDay(nextDay.format(\"Y-MM-DD\"));\r\n    if (selectedDayOfWeek === expectedDayOfWeek) {\r\n      scores.push([time, true]);\r\n    } else {\r\n      scores.push([time, false]);\r\n    }\r\n    setSelectedDayOfWeek(undefined);\r\n    setExpectedDayOfWeek(parseDateToWeekDayNumber(nextDay));\r\n    setRunning(true);\r\n    setTime(0);\r\n    setScores(scores);\r\n  };\r\n\r\n  return (\r\n    <Box fill background={'brand'} direction={'column'} overflow={'hidden'}>\r\n      <Box direction={\"column\"} flex={\"grow\"} style={{ maxWidth: 800, width: \"100%\" }} alignSelf={'center'}>\r\n        <Box\r\n          key={currentDay}\r\n          flex={{ grow: 1 }}\r\n          align={'center'}\r\n          justify={'center'}\r\n          animation={{ \"type\": \"fadeIn\" }}\r\n        >\r\n          <Box flex={{ grow: 4 }}>\r\n            <Heading size={\"large\"} level={'1'}>\r\n              {currentDay}\r\n            </Heading>\r\n          </Box>\r\n        </Box>\r\n        <DayButtonGrid selectedDayOfWeek={selectedDayOfWeek} setSelectedDayOfWeek={setSelectedDayOfWeek} expectedDayOfWeek={expectedDayOfWeek} />\r\n        <Box align={'center'}>\r\n          <Stopwatch running={running} time={time} setTime={setTime} />\r\n          <ScoreBoard scores={scores} />\r\n        </Box>\r\n        <FooterBar onContinueClick={startNewRound} isVisible={selectedDayOfWeek !== undefined} currentDay={currentDay} />\r\n        <Box\r\n          direction={\"row\"}\r\n          justify={\"end\"}\r\n          margin={{ right: \"large\", left: \"large\" }}\r\n        >\r\n          <GitHubButton href=\"https://github.com/grantas33/Doomsday-algorithm-practice\" data-icon=\"octicon-star\" data-show-count=\"true\" aria-label=\"Star me on GitHub\">Star</GitHubButton>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport {Grommet} from 'grommet';\r\nimport Game from \"./Game\";\r\nimport './App.css';\r\nconst theme = {\r\n  global: {\r\n    font: {\r\n      family: 'Solway'\r\n    }\r\n  },\r\n};\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Grommet theme={theme} full>\r\n     <Game startDate={'1800-01-01'} endDate={'2199-12-31'}/>\r\n    </Grommet>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}