{"version":3,"sources":["country_guesser/countries lazy /^/.*/vector/.svg$/ groupOptions: {} namespace object","components/Header.js","services/list_storage.js","country_guesser/country_utils.js","country_guesser/modules/CountryGuessRow.js","country_guesser/countries/loading.svg","country_guesser/modules/DynamicSvg.js","services/storage.js","functions/useHighScoreState.js","country_guesser/modules/GuessScoreBoard.js","country_guesser/modules/GuessTable.js","country_guesser/modules/TextHighlight.js","country_guesser/modules/InputSelect.js","country_guesser/countryGuesser.js","country_guesser/useCountries.js","functions/useRoutePrefix.js","components/doomsday/ExplanationModal.js","components/doomsday/FooterBar.js","functions/useDidUpdate.js","components/doomsday/DayButton.js","components/doomsday/DayButtonGrid.js","functions/formatScoreTime.js","components/score/Stopwatch.js","components/score/ScoreRow.js","components/score/AverageScore.js","components/score/ScoreBoard.js","components/doomsday/DoomdsdayGame.js","components/mindPalace/MindPalaceGame.js","views/MindGames.js","components/spyfall/SpyFallConfirmButton.js","components/spyfall/AddSpyfallPlayer.js","components/spyfall/SpyfallPlayerView.js","components/spyfall/spyfallData.js","views/Spyfall.js","components/cityAlphabet/CityAlphabet.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","Header","props","_useState","useState","_useState2","_slicedToArray","open","setOpen","onClick","items","React","createElement","Box","height","align","as","direction","flex","justify","style","position","zIndex","Button","width","padding","margin","List","borderRadius","border","Heading","level","display","background","round","pad","gap","marginTop","entries","_ref","i","_ref2","name","value","Menu","key","label","v","hoverIndicator","list_storage","type","list","localStorage","setItem","join","parse_object","arguments","length","undefined","result","getItem","split","Country","_createClass","country_object","_classCallCheck","this","code_2","toLowerCase","code_3","latitude","longitude","flag","official_name","population","continents","area","capitals","languages","load_countries","countries_object","country","calculateDirection","sourceLat","sourceLng","targetLat","targetLng","dLat","toRad","dLng","a","Math","sin","cos","bearing","atan2","sqrt","PI","Value","CountryGuessRow","distance","Text","fontFamily","toFixed","toLocaleString","right","translateX","translateY","rotate","fontSize","_circle","_circle2","_circle3","_excluded","_extends","assign","bind","target","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","svgRef","title","viewBox","ref","fill","stroke","strokeWidth","r","cx","cy","attributeName","calcMode","dur","values","keySplines","repeatCount","begin","ForwardRef","forwardRef","_regeneratorRuntime","Op","hasOwn","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","reject","invoke","record","__await","unwrapped","error","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","DynamicSvg","svgName","failed","dynamicSvg","setDynamicSvg","useEffect","_asyncToGenerator","_callee","dynamicSvgModule","_context","concat","console","default","t0","DefaultSvg","loadSvg","Image","src","storage","parseInt","score","useHighScoreState","highScore","setHighScore","GuessScoreBoard","scores","streak","_useHighScoreState","_useHighScoreState2","bestStreak","setBestStreak","newHighScore","setNewHighScore","count","index","color","GuessTable","children","_ref$max","max","generateChild","child","minHeight","alignItems","min","Array","from","TextHighlight","text","highlight","parts","setparts","newParts","RegExp","part","InputSelect","onChange","options","_ref$value","_ref$optionNameOperan","optionNameOperand","_ref$maxDisplayValues","maxDisplayValues","searchValue","setsearchValue","_useState3","_useState4","shownOptions","setshownOptions","Select","onSearch","search","newOptions","sort","splice","option","active","disabled","selected","Guess","guessedCountry","actualCountry","country1","country2","distanceKm","lat1","lon1","lat2","lon2","dLon","calcCrow","gameType","CountryGuesser","countries","setcountries","countriesDict","setcountriesDict","_useState5","_useState6","setRound","_useState7","_useState8","roundOver","setRoundOver","_useState9","_useState10","chosenCountry","setChosenCountry","_React$useState","_React$useState2","setguessedCountry","_React$useState3","_React$useState4","currentGuesses","setCurrentGuesses","_useState11","maxGuesses","_useState12","setscores","_useState13","_useState14","setstreak","nextRound","_getCountries","use_territories","allCountries","countries_json","territories_json","countriesDIct","fromEntries","getCountries","_getCountries2","newCountries","newCountriesDict","newChosenCountry","floor","random","grow","animation","maxWidth","alignContent","marginBottom","size","textAlign","marginLeft","hidden","chosen","guess","s","won","routePrefixes","useRoutePrefix","delimiter","prefix","setPrefix","pathname","window","location","current","startsWith","delimited","endsWith","centuryIndexMap","18","19","20","21","doomsdaysForMonth","1","2","3","4","5","6","7","8","9","10","11","12","doomsdaysForMonthInLeapYear","_objectSpread","ExplanationModal","day","moment","currentDay","centuryIndex","format","substring","year","Number","yearAfter1Step","yearAfter2Step","yearAfter3Step","nearestMultiple","weekDay","doomsday","isLeapYear","dayNumber","doomsdayNumber","doomsdayToDayChain","abs","alignSelf","className","bottom","horizontal","vertical","Fragment","date","FooterBar","fullyHidden","setFullyHidden","showExplanation","setShowExplanation","callback","deps","hasMount","useRef","useDidUpdate","isVisible","left","visibility","Layer","onEsc","onClickOutside","responsive","onContinueClick","DayButton","anySelected","selectedDayOfWeek","isSelectedButFalse","expectedDayOfWeek","number","isCorrect","basis","boxShadow","setSelectedDayOfWeek","weekdays","DayButtonGrid","setSelected","expected","formatScoreTime","time","Stopwatch","running","setTime","interval","setInterval","prevTime","clearInterval","ScoreRow","success","marginRight","formatAverageTime","averageTime","AverageScore","_props$isTrimmed","averageSize","isTrimmed","average","setAverage","toString","bestAverage","setBestAverage","currentAverage","lastAmount","trimAvrage","relevantScores","successSorted","b","slicedWorst","sortedScores","trimScores","sum","calulateAverageOfLastScores","ScoreBoard","_ref$trimmedAveragesT","trimmedAveragesToShow","_ref$averagesToShow","averagesToShow","timeScores","setStreak","currentStreak","overflowY","_ref3","require","momentRandom","DoomdsdayGame","generateRandomDay","endDate","startDate","parseDateToWeekDayNumber","initialDay","setCurrentDay","setScores","setRunning","setExpectedDayOfWeek","nextDay","MindPalaceGame","numberLength","choices","generateTextWithLength","setNumber","answer","setAnswer","setHidden","insertIntervaledDash","str","replace","toUpperCase","randomText","userSelect","repeat","TextInput","placeholder","event","input","SubmitAnswer","MindGames","currentGame","setCurrentGame","currentOption","setCurrentOption","games","game","SpyFallConfirmButton","confirmText","_ref$onTrigger","onTrigger","_ref$onDisable","onDisable","_ref$onClick","_ref$noConfirmDisable","noConfirmDisable","confirm","setConfirm","triggered","setTriggered","toggleTriggerState","AddSpyfallPlayer","addNewPlayer","finishStage","playerName","setplayerName","setlocation","SpyfallPlayerView","currentPlayer","chosenLocation","isSpy","nextPlayer","prevPlayer","sethidden","SpyfallPlayer","GameStages","GameLocations","playerLocations","playersWithLocation","defaultLocations","useDefaultLocations","_toConsumableArray","log","_locations","locations","chosenIndex","InitializeSpyFall","players","addPlayer","setgameStage","SpyfallAdminStart","playersCount","spyAmount","setspyAmount","gameLocations","startPassing","getPlayerLocationsLength","locationCount","setLocationCount","triggerDefaultLocations","getLength","SpyfallPlaying","chosenSpiesIds","finishingRound","finishRound","Spyfall","exit","gameStage","setplayers","setchosenLocation","setchosenSpiesIds","_useState15","_useState16","currentPlayerIndex","setcurrentPlayerIndex","_useState17","_useState18","setfinishingRound","newPlayer","filter","player","alert","_locations$getLocatio","getLocation","_locations$getLocatio2","chosenPlayerIndex","invalidSpyIds","spies","_loop","spyId","invalidId","initializeSpyfallGame","includes","CityAlphabet","theme","global","font","family","anchor","button","radius","View","url","componment","App","navigate","useNavigate","_useRoutePrefix","routePrefix","views","Grommet","full","Home","view","topMargin","Routes","Route","path","element","MainMenu","_useRoutePrefix3","Anchor","href","GitHubButton","data-icon","data-show-count","aria-label","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","BrowserRouter","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"+IAAA,IAAIA,EAAM,CACT,kBAAmB,CAClB,IACA,GAED,kBAAmB,CAClB,IACA,GAED,kBAAmB,CAClB,IACA,GAED,kBAAmB,CAClB,IACA,GAED,kBAAmB,CAClB,IACA,GAED,kBAAmB,CAClB,IACA,GAED,kBAAmB,CAClB,IACA,GAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,kBAAmB,CAClB,IACA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","file":"static/js/main.b19c0f18.chunk.js","sourcesContent":["var map = {\n\t\"./ad/vector.svg\": [\n\t\t118,\n\t\t3\n\t],\n\t\"./ae/vector.svg\": [\n\t\t119,\n\t\t4\n\t],\n\t\"./af/vector.svg\": [\n\t\t120,\n\t\t5\n\t],\n\t\"./ag/vector.svg\": [\n\t\t121,\n\t\t6\n\t],\n\t\"./ai/vector.svg\": [\n\t\t122,\n\t\t7\n\t],\n\t\"./al/vector.svg\": [\n\t\t123,\n\t\t8\n\t],\n\t\"./am/vector.svg\": [\n\t\t124,\n\t\t9\n\t],\n\t\"./ao/vector.svg\": [\n\t\t125,\n\t\t10\n\t],\n\t\"./aq/vector.svg\": [\n\t\t126,\n\t\t11\n\t],\n\t\"./ar/vector.svg\": [\n\t\t127,\n\t\t12\n\t],\n\t\"./as/vector.svg\": [\n\t\t128,\n\t\t13\n\t],\n\t\"./at/vector.svg\": [\n\t\t129,\n\t\t14\n\t],\n\t\"./au/vector.svg\": [\n\t\t130,\n\t\t15\n\t],\n\t\"./aw/vector.svg\": [\n\t\t131,\n\t\t16\n\t],\n\t\"./ax/vector.svg\": [\n\t\t132,\n\t\t17\n\t],\n\t\"./az/vector.svg\": [\n\t\t133,\n\t\t18\n\t],\n\t\"./ba/vector.svg\": [\n\t\t134,\n\t\t19\n\t],\n\t\"./bb/vector.svg\": [\n\t\t135,\n\t\t20\n\t],\n\t\"./bd/vector.svg\": [\n\t\t136,\n\t\t21\n\t],\n\t\"./be/vector.svg\": [\n\t\t137,\n\t\t22\n\t],\n\t\"./bf/vector.svg\": [\n\t\t138,\n\t\t23\n\t],\n\t\"./bg/vector.svg\": [\n\t\t139,\n\t\t24\n\t],\n\t\"./bh/vector.svg\": [\n\t\t140,\n\t\t25\n\t],\n\t\"./bi/vector.svg\": [\n\t\t141,\n\t\t26\n\t],\n\t\"./bj/vector.svg\": [\n\t\t142,\n\t\t27\n\t],\n\t\"./bl/vector.svg\": [\n\t\t143,\n\t\t28\n\t],\n\t\"./bm/vector.svg\": [\n\t\t144,\n\t\t29\n\t],\n\t\"./bn/vector.svg\": [\n\t\t145,\n\t\t30\n\t],\n\t\"./bo/vector.svg\": [\n\t\t146,\n\t\t31\n\t],\n\t\"./bq/vector.svg\": [\n\t\t147,\n\t\t32\n\t],\n\t\"./br/vector.svg\": [\n\t\t148,\n\t\t33\n\t],\n\t\"./bs/vector.svg\": [\n\t\t149,\n\t\t34\n\t],\n\t\"./bt/vector.svg\": [\n\t\t150,\n\t\t35\n\t],\n\t\"./bv/vector.svg\": [\n\t\t151,\n\t\t36\n\t],\n\t\"./bw/vector.svg\": [\n\t\t152,\n\t\t37\n\t],\n\t\"./by/vector.svg\": [\n\t\t153,\n\t\t38\n\t],\n\t\"./bz/vector.svg\": [\n\t\t154,\n\t\t39\n\t],\n\t\"./ca/vector.svg\": [\n\t\t155,\n\t\t40\n\t],\n\t\"./cc/vector.svg\": [\n\t\t156,\n\t\t41\n\t],\n\t\"./cd/vector.svg\": [\n\t\t157,\n\t\t42\n\t],\n\t\"./cf/vector.svg\": [\n\t\t158,\n\t\t43\n\t],\n\t\"./cg/vector.svg\": [\n\t\t159,\n\t\t44\n\t],\n\t\"./ch/vector.svg\": [\n\t\t160,\n\t\t45\n\t],\n\t\"./ci/vector.svg\": [\n\t\t161,\n\t\t46\n\t],\n\t\"./ck/vector.svg\": [\n\t\t162,\n\t\t47\n\t],\n\t\"./cl/vector.svg\": [\n\t\t163,\n\t\t48\n\t],\n\t\"./cm/vector.svg\": [\n\t\t164,\n\t\t49\n\t],\n\t\"./cn/vector.svg\": [\n\t\t165,\n\t\t50\n\t],\n\t\"./co/vector.svg\": [\n\t\t166,\n\t\t51\n\t],\n\t\"./cr/vector.svg\": [\n\t\t167,\n\t\t52\n\t],\n\t\"./cu/vector.svg\": [\n\t\t168,\n\t\t53\n\t],\n\t\"./cv/vector.svg\": [\n\t\t169,\n\t\t54\n\t],\n\t\"./cw/vector.svg\": [\n\t\t170,\n\t\t55\n\t],\n\t\"./cx/vector.svg\": [\n\t\t171,\n\t\t56\n\t],\n\t\"./cy/vector.svg\": [\n\t\t172,\n\t\t57\n\t],\n\t\"./cz/vector.svg\": [\n\t\t173,\n\t\t58\n\t],\n\t\"./de/vector.svg\": [\n\t\t174,\n\t\t59\n\t],\n\t\"./dj/vector.svg\": [\n\t\t175,\n\t\t60\n\t],\n\t\"./dk/vector.svg\": [\n\t\t176,\n\t\t61\n\t],\n\t\"./dm/vector.svg\": [\n\t\t177,\n\t\t62\n\t],\n\t\"./do/vector.svg\": [\n\t\t178,\n\t\t63\n\t],\n\t\"./dz/vector.svg\": [\n\t\t179,\n\t\t64\n\t],\n\t\"./ec/vector.svg\": [\n\t\t180,\n\t\t65\n\t],\n\t\"./ee/vector.svg\": [\n\t\t181,\n\t\t66\n\t],\n\t\"./eg/vector.svg\": [\n\t\t182,\n\t\t67\n\t],\n\t\"./eh/vector.svg\": [\n\t\t183,\n\t\t68\n\t],\n\t\"./er/vector.svg\": [\n\t\t184,\n\t\t69\n\t],\n\t\"./es/vector.svg\": [\n\t\t185,\n\t\t70\n\t],\n\t\"./et/vector.svg\": [\n\t\t186,\n\t\t71\n\t],\n\t\"./fi/vector.svg\": [\n\t\t187,\n\t\t72\n\t],\n\t\"./fj/vector.svg\": [\n\t\t188,\n\t\t73\n\t],\n\t\"./fk/vector.svg\": [\n\t\t189,\n\t\t74\n\t],\n\t\"./fo/vector.svg\": [\n\t\t190,\n\t\t75\n\t],\n\t\"./fr/vector.svg\": [\n\t\t191,\n\t\t76\n\t],\n\t\"./ga/vector.svg\": [\n\t\t192,\n\t\t77\n\t],\n\t\"./gb/vector.svg\": [\n\t\t193,\n\t\t78\n\t],\n\t\"./gd/vector.svg\": [\n\t\t194,\n\t\t79\n\t],\n\t\"./ge/vector.svg\": [\n\t\t195,\n\t\t80\n\t],\n\t\"./gf/vector.svg\": [\n\t\t196,\n\t\t81\n\t],\n\t\"./gg/vector.svg\": [\n\t\t197,\n\t\t82\n\t],\n\t\"./gh/vector.svg\": [\n\t\t198,\n\t\t83\n\t],\n\t\"./gi/vector.svg\": [\n\t\t199,\n\t\t84\n\t],\n\t\"./gl/vector.svg\": [\n\t\t200,\n\t\t85\n\t],\n\t\"./gm/vector.svg\": [\n\t\t201,\n\t\t86\n\t],\n\t\"./gn/vector.svg\": [\n\t\t202,\n\t\t87\n\t],\n\t\"./gp/vector.svg\": [\n\t\t203,\n\t\t88\n\t],\n\t\"./gq/vector.svg\": [\n\t\t204,\n\t\t89\n\t],\n\t\"./gr/vector.svg\": [\n\t\t205,\n\t\t90\n\t],\n\t\"./gs/vector.svg\": [\n\t\t206,\n\t\t91\n\t],\n\t\"./gt/vector.svg\": [\n\t\t207,\n\t\t92\n\t],\n\t\"./gu/vector.svg\": [\n\t\t208,\n\t\t93\n\t],\n\t\"./gw/vector.svg\": [\n\t\t209,\n\t\t94\n\t],\n\t\"./gy/vector.svg\": [\n\t\t210,\n\t\t95\n\t],\n\t\"./hk/vector.svg\": [\n\t\t211,\n\t\t96\n\t],\n\t\"./hm/vector.svg\": [\n\t\t212,\n\t\t97\n\t],\n\t\"./hn/vector.svg\": [\n\t\t213,\n\t\t98\n\t],\n\t\"./hr/vector.svg\": [\n\t\t214,\n\t\t99\n\t],\n\t\"./ht/vector.svg\": [\n\t\t215,\n\t\t100\n\t],\n\t\"./hu/vector.svg\": [\n\t\t216,\n\t\t101\n\t],\n\t\"./id/vector.svg\": [\n\t\t217,\n\t\t102\n\t],\n\t\"./ie/vector.svg\": [\n\t\t218,\n\t\t103\n\t],\n\t\"./il/vector.svg\": [\n\t\t219,\n\t\t104\n\t],\n\t\"./im/vector.svg\": [\n\t\t220,\n\t\t105\n\t],\n\t\"./in/vector.svg\": [\n\t\t221,\n\t\t106\n\t],\n\t\"./io/vector.svg\": [\n\t\t222,\n\t\t107\n\t],\n\t\"./iq/vector.svg\": [\n\t\t223,\n\t\t108\n\t],\n\t\"./ir/vector.svg\": [\n\t\t224,\n\t\t109\n\t],\n\t\"./is/vector.svg\": [\n\t\t225,\n\t\t110\n\t],\n\t\"./it/vector.svg\": [\n\t\t226,\n\t\t111\n\t],\n\t\"./jm/vector.svg\": [\n\t\t227,\n\t\t112\n\t],\n\t\"./jo/vector.svg\": [\n\t\t228,\n\t\t113\n\t],\n\t\"./jp/vector.svg\": [\n\t\t229,\n\t\t114\n\t],\n\t\"./ke/vector.svg\": [\n\t\t230,\n\t\t115\n\t],\n\t\"./kg/vector.svg\": [\n\t\t231,\n\t\t116\n\t],\n\t\"./kh/vector.svg\": [\n\t\t232,\n\t\t117\n\t],\n\t\"./ki/vector.svg\": [\n\t\t233,\n\t\t118\n\t],\n\t\"./km/vector.svg\": [\n\t\t234,\n\t\t119\n\t],\n\t\"./kn/vector.svg\": [\n\t\t235,\n\t\t120\n\t],\n\t\"./kp/vector.svg\": [\n\t\t236,\n\t\t121\n\t],\n\t\"./kr/vector.svg\": [\n\t\t237,\n\t\t122\n\t],\n\t\"./kw/vector.svg\": [\n\t\t238,\n\t\t123\n\t],\n\t\"./ky/vector.svg\": [\n\t\t239,\n\t\t124\n\t],\n\t\"./kz/vector.svg\": [\n\t\t240,\n\t\t125\n\t],\n\t\"./la/vector.svg\": [\n\t\t241,\n\t\t126\n\t],\n\t\"./lb/vector.svg\": [\n\t\t242,\n\t\t127\n\t],\n\t\"./lc/vector.svg\": [\n\t\t243,\n\t\t128\n\t],\n\t\"./li/vector.svg\": [\n\t\t244,\n\t\t129\n\t],\n\t\"./lk/vector.svg\": [\n\t\t245,\n\t\t130\n\t],\n\t\"./lr/vector.svg\": [\n\t\t246,\n\t\t131\n\t],\n\t\"./ls/vector.svg\": [\n\t\t247,\n\t\t132\n\t],\n\t\"./lt/vector.svg\": [\n\t\t248,\n\t\t133\n\t],\n\t\"./lu/vector.svg\": [\n\t\t249,\n\t\t134\n\t],\n\t\"./lv/vector.svg\": [\n\t\t250,\n\t\t135\n\t],\n\t\"./ly/vector.svg\": [\n\t\t251,\n\t\t136\n\t],\n\t\"./ma/vector.svg\": [\n\t\t252,\n\t\t137\n\t],\n\t\"./mc/vector.svg\": [\n\t\t253,\n\t\t138\n\t],\n\t\"./md/vector.svg\": [\n\t\t254,\n\t\t139\n\t],\n\t\"./me/vector.svg\": [\n\t\t255,\n\t\t140\n\t],\n\t\"./mf/vector.svg\": [\n\t\t256,\n\t\t141\n\t],\n\t\"./mg/vector.svg\": [\n\t\t257,\n\t\t142\n\t],\n\t\"./mk/vector.svg\": [\n\t\t258,\n\t\t143\n\t],\n\t\"./ml/vector.svg\": [\n\t\t259,\n\t\t144\n\t],\n\t\"./mm/vector.svg\": [\n\t\t260,\n\t\t145\n\t],\n\t\"./mn/vector.svg\": [\n\t\t261,\n\t\t146\n\t],\n\t\"./mo/vector.svg\": [\n\t\t262,\n\t\t147\n\t],\n\t\"./mq/vector.svg\": [\n\t\t263,\n\t\t148\n\t],\n\t\"./mr/vector.svg\": [\n\t\t264,\n\t\t149\n\t],\n\t\"./ms/vector.svg\": [\n\t\t265,\n\t\t150\n\t],\n\t\"./mt/vector.svg\": [\n\t\t266,\n\t\t151\n\t],\n\t\"./mu/vector.svg\": [\n\t\t267,\n\t\t152\n\t],\n\t\"./mv/vector.svg\": [\n\t\t268,\n\t\t153\n\t],\n\t\"./mw/vector.svg\": [\n\t\t269,\n\t\t154\n\t],\n\t\"./mx/vector.svg\": [\n\t\t270,\n\t\t155\n\t],\n\t\"./my/vector.svg\": [\n\t\t271,\n\t\t156\n\t],\n\t\"./mz/vector.svg\": [\n\t\t272,\n\t\t157\n\t],\n\t\"./na/vector.svg\": [\n\t\t273,\n\t\t158\n\t],\n\t\"./nc/vector.svg\": [\n\t\t274,\n\t\t159\n\t],\n\t\"./ne/vector.svg\": [\n\t\t275,\n\t\t160\n\t],\n\t\"./nf/vector.svg\": [\n\t\t276,\n\t\t161\n\t],\n\t\"./ng/vector.svg\": [\n\t\t277,\n\t\t162\n\t],\n\t\"./ni/vector.svg\": [\n\t\t278,\n\t\t163\n\t],\n\t\"./nl/vector.svg\": [\n\t\t279,\n\t\t164\n\t],\n\t\"./no/vector.svg\": [\n\t\t280,\n\t\t165\n\t],\n\t\"./np/vector.svg\": [\n\t\t281,\n\t\t166\n\t],\n\t\"./nr/vector.svg\": [\n\t\t282,\n\t\t167\n\t],\n\t\"./nu/vector.svg\": [\n\t\t283,\n\t\t168\n\t],\n\t\"./nz/vector.svg\": [\n\t\t284,\n\t\t169\n\t],\n\t\"./om/vector.svg\": [\n\t\t285,\n\t\t170\n\t],\n\t\"./pa/vector.svg\": [\n\t\t286,\n\t\t171\n\t],\n\t\"./pe/vector.svg\": [\n\t\t287,\n\t\t172\n\t],\n\t\"./pf/vector.svg\": [\n\t\t288,\n\t\t173\n\t],\n\t\"./pg/vector.svg\": [\n\t\t289,\n\t\t174\n\t],\n\t\"./ph/vector.svg\": [\n\t\t290,\n\t\t175\n\t],\n\t\"./pk/vector.svg\": [\n\t\t291,\n\t\t176\n\t],\n\t\"./pl/vector.svg\": [\n\t\t292,\n\t\t177\n\t],\n\t\"./pm/vector.svg\": [\n\t\t293,\n\t\t178\n\t],\n\t\"./pn/vector.svg\": [\n\t\t294,\n\t\t179\n\t],\n\t\"./pr/vector.svg\": [\n\t\t295,\n\t\t180\n\t],\n\t\"./pt/vector.svg\": [\n\t\t296,\n\t\t181\n\t],\n\t\"./pw/vector.svg\": [\n\t\t297,\n\t\t182\n\t],\n\t\"./py/vector.svg\": [\n\t\t298,\n\t\t183\n\t],\n\t\"./qa/vector.svg\": [\n\t\t299,\n\t\t184\n\t],\n\t\"./re/vector.svg\": [\n\t\t300,\n\t\t185\n\t],\n\t\"./ro/vector.svg\": [\n\t\t301,\n\t\t186\n\t],\n\t\"./rs/vector.svg\": [\n\t\t302,\n\t\t187\n\t],\n\t\"./ru/vector.svg\": [\n\t\t303,\n\t\t188\n\t],\n\t\"./rw/vector.svg\": [\n\t\t304,\n\t\t189\n\t],\n\t\"./sa/vector.svg\": [\n\t\t305,\n\t\t190\n\t],\n\t\"./sb/vector.svg\": [\n\t\t306,\n\t\t191\n\t],\n\t\"./sc/vector.svg\": [\n\t\t307,\n\t\t192\n\t],\n\t\"./sd/vector.svg\": [\n\t\t308,\n\t\t193\n\t],\n\t\"./se/vector.svg\": [\n\t\t309,\n\t\t194\n\t],\n\t\"./sg/vector.svg\": [\n\t\t310,\n\t\t195\n\t],\n\t\"./sh/vector.svg\": [\n\t\t311,\n\t\t196\n\t],\n\t\"./si/vector.svg\": [\n\t\t312,\n\t\t197\n\t],\n\t\"./sj/vector.svg\": [\n\t\t313,\n\t\t198\n\t],\n\t\"./sk/vector.svg\": [\n\t\t314,\n\t\t199\n\t],\n\t\"./sl/vector.svg\": [\n\t\t315,\n\t\t200\n\t],\n\t\"./sm/vector.svg\": [\n\t\t316,\n\t\t201\n\t],\n\t\"./sn/vector.svg\": [\n\t\t317,\n\t\t202\n\t],\n\t\"./so/vector.svg\": [\n\t\t318,\n\t\t203\n\t],\n\t\"./sr/vector.svg\": [\n\t\t319,\n\t\t204\n\t],\n\t\"./ss/vector.svg\": [\n\t\t320,\n\t\t205\n\t],\n\t\"./st/vector.svg\": [\n\t\t321,\n\t\t206\n\t],\n\t\"./sv/vector.svg\": [\n\t\t322,\n\t\t207\n\t],\n\t\"./sx/vector.svg\": [\n\t\t323,\n\t\t208\n\t],\n\t\"./sy/vector.svg\": [\n\t\t324,\n\t\t209\n\t],\n\t\"./sz/vector.svg\": [\n\t\t325,\n\t\t210\n\t],\n\t\"./tc/vector.svg\": [\n\t\t326,\n\t\t211\n\t],\n\t\"./td/vector.svg\": [\n\t\t327,\n\t\t212\n\t],\n\t\"./tf/vector.svg\": [\n\t\t328,\n\t\t213\n\t],\n\t\"./tg/vector.svg\": [\n\t\t329,\n\t\t214\n\t],\n\t\"./th/vector.svg\": [\n\t\t330,\n\t\t215\n\t],\n\t\"./tj/vector.svg\": [\n\t\t331,\n\t\t216\n\t],\n\t\"./tk/vector.svg\": [\n\t\t332,\n\t\t217\n\t],\n\t\"./tl/vector.svg\": [\n\t\t333,\n\t\t218\n\t],\n\t\"./tm/vector.svg\": [\n\t\t334,\n\t\t219\n\t],\n\t\"./tn/vector.svg\": [\n\t\t335,\n\t\t220\n\t],\n\t\"./to/vector.svg\": [\n\t\t336,\n\t\t221\n\t],\n\t\"./tr/vector.svg\": [\n\t\t337,\n\t\t222\n\t],\n\t\"./tt/vector.svg\": [\n\t\t338,\n\t\t223\n\t],\n\t\"./tw/vector.svg\": [\n\t\t339,\n\t\t224\n\t],\n\t\"./tz/vector.svg\": [\n\t\t340,\n\t\t225\n\t],\n\t\"./ua/vector.svg\": [\n\t\t341,\n\t\t226\n\t],\n\t\"./ug/vector.svg\": [\n\t\t342,\n\t\t227\n\t],\n\t\"./us/vector.svg\": [\n\t\t343,\n\t\t228\n\t],\n\t\"./uy/vector.svg\": [\n\t\t344,\n\t\t229\n\t],\n\t\"./uz/vector.svg\": [\n\t\t345,\n\t\t230\n\t],\n\t\"./va/vector.svg\": [\n\t\t346,\n\t\t231\n\t],\n\t\"./vc/vector.svg\": [\n\t\t347,\n\t\t232\n\t],\n\t\"./ve/vector.svg\": [\n\t\t348,\n\t\t233\n\t],\n\t\"./vg/vector.svg\": [\n\t\t349,\n\t\t234\n\t],\n\t\"./vi/vector.svg\": [\n\t\t350,\n\t\t235\n\t],\n\t\"./vn/vector.svg\": [\n\t\t351,\n\t\t236\n\t],\n\t\"./vu/vector.svg\": [\n\t\t352,\n\t\t237\n\t],\n\t\"./wf/vector.svg\": [\n\t\t353,\n\t\t238\n\t],\n\t\"./ws/vector.svg\": [\n\t\t354,\n\t\t239\n\t],\n\t\"./ye/vector.svg\": [\n\t\t355,\n\t\t240\n\t],\n\t\"./yt/vector.svg\": [\n\t\t356,\n\t\t241\n\t],\n\t\"./za/vector.svg\": [\n\t\t357,\n\t\t242\n\t],\n\t\"./zm/vector.svg\": [\n\t\t358,\n\t\t243\n\t],\n\t\"./zw/vector.svg\": [\n\t\t359,\n\t\t244\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 112;\nmodule.exports = webpackAsyncContext;","import { Box, Button, Heading, Menu } from \"grommet\";\r\nimport { List } from \"grommet-icons\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Header(props) {\r\n  const [open, setOpen] = useState(false);\r\n  let onClick = props.onClick;\r\n  let items = props.items;\r\n\r\n  return (\r\n    <Box>\r\n      <Box height=\"50px\"></Box>\r\n      <Box\r\n        align=\"center\"\r\n        as=\"header\"\r\n        direction=\"row\"\r\n        flex={false}\r\n        justify=\"start\"\r\n        height=\"50px\"\r\n        style={{ position: \"fixed\", zIndex: 10 }}\r\n      >\r\n        <Button\r\n          height=\"50px\"\r\n          width=\"50px\"\r\n          padding=\"10px\"\r\n          margin=\"5px 20px\"\r\n          onClick={() => {\r\n            setOpen(!open);\r\n          }}\r\n        >\r\n          <List\r\n            style={{\r\n              borderRadius: \"200px\",\r\n              border: \"1px solid white\",\r\n              padding: \"5px\",\r\n            }}\r\n          />\r\n        </Button>\r\n        <Heading level={4}>Segal's Mind Games</Heading>\r\n      </Box>\r\n      <Box\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          position: \"fixed\",\r\n          display: open ? \"block\" : \"none\",\r\n          zIndex: 11,\r\n        }}\r\n        onClick={() => {\r\n          setOpen(false);\r\n        }}\r\n      />\r\n      <Box\r\n        background=\"white\"\r\n        round=\"small\"\r\n        pad=\"small\"\r\n        gap=\"small\"\r\n        style={{\r\n          position: \"absolute\",\r\n          display: open ? \"block\" : \"none\",\r\n          marginTop: \"50px\",\r\n          zIndex: 12,\r\n        }}\r\n      >\r\n        {Object.entries(items).map(([name, value], i) =>\r\n          typeof value === \"object\" ? (\r\n            <Menu\r\n              key={i}\r\n              label={name}\r\n              items={value.map((v) => {\r\n                return {\r\n                  label: v,\r\n                  onClick: () => {\r\n                    onClick(name, v);\r\n                    setOpen(false);\r\n                  },\r\n                };\r\n              })}\r\n            />\r\n          ) : (\r\n            <Button\r\n              key={i}\r\n              hoverIndicator\r\n              onClick={() => {\r\n                onClick(value, \"\");\r\n                setOpen(false);\r\n              }}\r\n            >\r\n              {\" \"}\r\n              {name}{\" \"}\r\n            </Button>\r\n          )\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","const getList = (type, parse_object = (o) => o) => {\r\n  let result = localStorage.getItem(\"list\" + type);\r\n  if (result === null) {\r\n    return null;\r\n  }\r\n  return result.split(\",\").map(o => parse_object(o));\r\n};\r\nconst setList = (type, list) => {\r\n  localStorage.setItem(\"list\" + type, list.join(\",\"));\r\n};\r\n\r\nexport const list_storage = {\r\n  setList,\r\n  getList,\r\n};\r\n","export class Country {\r\n  constructor(country_object) {\r\n    this.name = country_object[\"name\"]\r\n    this.code_2 = country_object[\"code_2\"].toLowerCase()\r\n    this.code_3 = country_object[\"code_3\"].toLowerCase()\r\n    this.latitude = country_object[\"lat\"]\r\n    this.longitude = country_object[\"long\"]\r\n    this.flag = country_object[\"flag\"]\r\n    this.official_name = country_object[\"official_name\"]\r\n    this.population = country_object[\"population\"]\r\n    this.continents = country_object[\"continents\"]\r\n    this.area = country_object[\"area\"]\r\n    this.capitals = country_object[\"capitals\"]\r\n    this.languages = country_object[\"languages\"]\r\n  }\r\n}\r\n\r\nfunction load_country(country_object) {\r\n  return new Country(country_object);\r\n}\r\n\r\nexport function load_countries(countries_object) {\r\n  let countries = countries_object.map((country) =>\r\n    load_country(country)\r\n  );\r\n  return countries;\r\n}\r\n\r\nexport function calcCrow(country1, country2) {\r\n  let lat1 = country1.latitude;\r\n  let lon1 = country1.longitude;\r\n  let lat2 = country2.latitude;\r\n  let lon2 = country2.longitude;\r\n  let R = 6371; // km\r\n  let dLat = toRad(lat2 - lat1);\r\n  let dLon = toRad(lon2 - lon1);\r\n  lat1 = toRad(lat1);\r\n  lat2 = toRad(lat2);\r\n\r\n  let a =\r\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\r\n  let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n  let d = R * c;\r\n  return d;\r\n}\r\n\r\nfunction calculateDirection(sourceLat, sourceLng, targetLat, targetLng) {\r\n  const dLat = toRad(targetLat - sourceLat);\r\n  const dLng = toRad(targetLng - sourceLng);\r\n\r\n  const a =\r\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    Math.cos(toRad(sourceLat)) *\r\n      Math.cos(toRad(targetLat)) *\r\n      Math.sin(dLng / 2) *\r\n      Math.sin(dLng / 2);\r\n\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n  // Calculate the bearing in degrees\r\n  let bearing = toDegrees(\r\n    Math.atan2(\r\n      Math.sin(dLng) * Math.cos(toRad(targetLat)),\r\n      Math.cos(toRad(sourceLat)) * Math.sin(toRad(targetLat)) -\r\n        Math.sin(toRad(sourceLat)) * Math.cos(toRad(targetLat)) * Math.cos(dLng)\r\n    )\r\n  );\r\n\r\n  // Ensure the bearing is positive\r\n  bearing = (bearing + 360) % 360;\r\n\r\n  return bearing;\r\n}\r\n\r\nfunction toDegrees(radians) {\r\n  return radians * (180 / Math.PI);\r\n}\r\n\r\nexport function calcDirection(country1, country2) {\r\n  return calculateDirection(country1.latitude, country1.longitude, country2.latitude, country2.longitude);\r\n}\r\n\r\n// Converts numeric degrees to radians\r\nfunction toRad(Value) {\r\n  return (Value * Math.PI) / 180;\r\n}\r\n","import { Box, Text } from \"grommet\";\r\nimport React from \"react\";\r\n\r\nexport function CountryGuessRow({ country, distance, direction }) {\r\n  return (\r\n    <Box style={{display: \"contents\"}}>\r\n      <Text>{country.name}</Text>\r\n      <Text\r\n        style={{\r\n          fontFamily: \"NotoColorEmojiLimited\",\r\n          //   fontSize: \"50px\",\r\n          //   textAlign: \"center\",\r\n        }}\r\n      >\r\n        {country.flag}\r\n      </Text>\r\n      <Text>{distance.toFixed(2).toLocaleString()} km</Text>\r\n      <Text\r\n        style={{\r\n          position: \"absolute\",\r\n          right: \"20px\",\r\n          translateX: \"-50%\",\r\n          translateY: \"50%\",\r\n          rotate: direction + \"deg\",\r\n          fontSize: \"25px\"\r\n        }}\r\n      >\r\n        {distance > 0 ? \"⬆\" : \"\"}\r\n      </Text>\r\n    </Box>\r\n  );\r\n}\r\n","var _circle, _circle2, _circle3;\nvar _excluded = [\"svgRef\", \"title\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from \"react\";\nvar SvgLoading = function SvgLoading(_ref) {\n  var svgRef = _ref.svgRef,\n    title = _ref.title,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 200 200\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    fill: \"#FF156D\",\n    stroke: \"#FF156D\",\n    strokeWidth: 15,\n    r: 15,\n    cx: 40,\n    cy: 65\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"cy\",\n    calcMode: \"spline\",\n    dur: 2,\n    values: \"65;135;65;\",\n    keySplines: \".5 0 .5 1;.5 0 .5 1\",\n    repeatCount: \"indefinite\",\n    begin: -0.4\n  }))), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    fill: \"#FF156D\",\n    stroke: \"#FF156D\",\n    strokeWidth: 15,\n    r: 15,\n    cx: 100,\n    cy: 65\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"cy\",\n    calcMode: \"spline\",\n    dur: 2,\n    values: \"65;135;65;\",\n    keySplines: \".5 0 .5 1;.5 0 .5 1\",\n    repeatCount: \"indefinite\",\n    begin: -0.2\n  }))), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    fill: \"#FF156D\",\n    stroke: \"#FF156D\",\n    strokeWidth: 15,\n    r: 15,\n    cx: 160,\n    cy: 65\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"cy\",\n    calcMode: \"spline\",\n    dur: 2,\n    values: \"65;135;65;\",\n    keySplines: \".5 0 .5 1;.5 0 .5 1\",\n    repeatCount: \"indefinite\",\n    begin: 0\n  }))));\n};\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLoading, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/loading.f6b1c3a5.svg\";\nexport { ForwardRef as ReactComponent };","import { Image } from \"grommet\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ReactComponent as DefaultSvg } from \"../countries/loading.svg\";\r\n\r\nexport function DynamicSvg({ svgName, failed, ...props }) {\r\n  const [dynamicSvg, setDynamicSvg] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadSvg = async () => {\r\n      try {\r\n        const dynamicSvgModule = await import(\r\n          `../countries/${svgName}/vector.svg`\r\n        );\r\n        console.info(dynamicSvgModule);\r\n        setDynamicSvg(() => dynamicSvgModule.default);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setDynamicSvg(DefaultSvg);\r\n        failed();\r\n      }\r\n    };\r\n\r\n    loadSvg();\r\n  }, [svgName]);\r\n\r\n  return (\r\n    <div>\r\n      {dynamicSvg === null ? <DefaultSvg {...props}/> : <Image src={dynamicSvg} {...props}/>}\r\n    </div>\r\n  );\r\n}\r\n","const getHighScore = (type) => parseInt(localStorage.getItem('highScore' + type)) || 0;\r\nconst setHighScore = (type, score) => {\r\n  localStorage.setItem('highScore' + type, score)\r\n};\r\n\r\nexport const storage = {\r\n  getHighScore,\r\n  setHighScore\r\n};","import { useState, useEffect } from 'react';\r\nimport {storage} from \"../services/storage\";\r\n\r\nexport function useHighScoreState(type) {\r\n  const [highScore, setHighScore] = useState(storage.getHighScore(type));\r\n\r\n  useEffect(() => {\r\n    storage.setHighScore(type, highScore)\r\n  }, [highScore]);\r\n\r\n  return [highScore, setHighScore];\r\n}","import { Box, Heading, Text } from \"grommet\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHighScoreState } from \"../../functions/useHighScoreState.js\";\r\n\r\nexport default function GuessScoreBoard({ scores, type, streak }) {\r\n  let [bestStreak, setBestStreak] = useHighScoreState(type + \"GeographyStreak2\");\r\n  let [newHighScore, setNewHighScore] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (streak > bestStreak) {\r\n      setNewHighScore(true);\r\n      setBestStreak(streak);\r\n    } else {\r\n      setNewHighScore(false);\r\n    }\r\n  }, [streak]);\r\n\r\n  return (\r\n    <Box\r\n      flex={\"grow\"}\r\n      direction={\"row\"}\r\n      align={\"stretch\"}\r\n      wrap={true}\r\n      style={{ padding: \"5px\" }}\r\n    >\r\n      <Box align={\"start\"} style={{ padding: \"5px 10px\" }} justify={\"center\"}>\r\n        <Heading level={3} style={{ margin: \"0\" }}>\r\n          Scores:\r\n        </Heading>\r\n        <Box\r\n          width={\"125px\"}\r\n          style={{\r\n            border: \"2px solid white\",\r\n            padding: \"5px\",\r\n          }}\r\n        >\r\n          {scores\r\n            .map((count, index) => (\r\n              <Box\r\n                flex={\"grow\"}\r\n                direction={\"row\"}\r\n                align={\"stretch\"}\r\n                height=\"25px\"\r\n                wrap={true}\r\n                key={index}\r\n              >\r\n                <Text color=\"black\" style={{ width: \"45%\"}}>\r\n                  {index === 0 ? \"DNF\" : index}\r\n                </Text>\r\n                <Text color=\"white\">{count}</Text>\r\n              </Box>\r\n            ))\r\n            .reverse()}\r\n        </Box>\r\n      </Box>\r\n      <Box align={\"start\"} justify={\"center\"}>\r\n        <Text>Current Streak: {streak}</Text>\r\n        <Text color={newHighScore ? \"orange\" : \"white\"}>\r\n          Best Streak: {bestStreak}\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box } from \"grommet\";\r\nimport React from \"react\";\r\n\r\nexport function GuessTable({ children, max = -1 }) {\r\n  function generateChild(child, i) {\r\n    return (\r\n      <Box\r\n        width=\"100%\"\r\n        direction=\"row\"\r\n        style={{ position: \"relative\", border: \"1px solid gray\", minHeight:\"40px\", alignItems: \"center\"}}\r\n        key={i}\r\n      >\r\n        {child}\r\n      </Box>\r\n    );\r\n  }\r\n  return (\r\n    <Box\r\n      width=\"90%\"\r\n      align=\"center\"\r\n      background=\"light-2\"\r\n      height={{ min: \"150px\", border:\"2px solid white\" }}\r\n    >\r\n      {children.map((child, i) => generateChild(child, i))}\r\n      {max === -1 || max - children.length <= 0 ? (\r\n        <span></span>\r\n      ) : (\r\n        Array.from(Array(max - children.length).keys()).map((i) => generateChild(\r\n            <span></span>, i\r\n        ))\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport function TextHighlight({ text, highlight }) {\r\n  const [parts, setparts] = useState([text]);\r\n  useEffect(() => {\r\n    let newParts = [text];\r\n    if (highlight !== \"\") {\r\n      newParts = text.split(new RegExp(`(${highlight})`, \"gi\"));\r\n    }\r\n    setparts(newParts);\r\n  }, [text, highlight]);\r\n\r\n  return (\r\n    <span>\r\n      {parts.map((part, i) => (\r\n        <span key={i}>\r\n          {part.toLowerCase() === highlight.toLowerCase() ? (\r\n            <b>{part}</b>\r\n          ) : (\r\n            part\r\n          )}\r\n        </span>\r\n      ))}\r\n    </span>\r\n  );\r\n}\r\n","import { Box, Select, Text } from \"grommet\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TextHighlight } from \"./TextHighlight\";\r\n\r\nexport function InputSelect({\r\n  onChange,\r\n  options,\r\n  value = \"\",\r\n  optionNameOperand = (o) => o,\r\n  maxDisplayValues = 25,\r\n}) {\r\n  const [searchValue, setsearchValue] = useState(\"\");\r\n  const [shownOptions, setshownOptions] = useState([]);\r\n\r\n  const updateShownOptions = (search) => {\r\n    let newOptions = [];\r\n    for (let i = 0; i < options.length; i++) {\r\n      let value = optionNameOperand(options[i]);\r\n      if (value.toLowerCase().indexOf(search.toLowerCase()) !== -1) {\r\n        newOptions.push(value);\r\n      }\r\n    }\r\n    newOptions = newOptions.sort();\r\n    setshownOptions(newOptions.splice(0, maxDisplayValues));\r\n    onChange(search);\r\n    setsearchValue(search.toLowerCase());\r\n  };\r\n\r\n  useEffect(() => {\r\n    setshownOptions(options.map(optionNameOperand));\r\n  }, [options, optionNameOperand]);\r\n\r\n  const chooseOption = (option) => {\r\n    onChange(option);\r\n    setsearchValue(option.value);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Select\r\n        onSearch={updateShownOptions}\r\n        options={shownOptions}\r\n        value={value}\r\n        onChange={chooseOption}\r\n        children={(option, index, options, { active, disabled, selected }) => (\r\n          <Text key={index}>\r\n            <TextHighlight\r\n              key={searchValue.length}\r\n              text={option}\r\n              highlight={searchValue}\r\n            />\r\n          </Text>\r\n        )}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Button, Heading, Text } from \"grommet\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { list_storage } from \"./../services/list_storage\";\r\nimport { calcCrow, calcDirection } from \"./country_utils\";\r\nimport \"./emoji.css\";\r\nimport { CountryGuessRow } from \"./modules/CountryGuessRow\";\r\nimport { DynamicSvg } from \"./modules/DynamicSvg\";\r\nimport GuessScoreBoard from \"./modules/GuessScoreBoard\";\r\nimport { GuessTable } from \"./modules/GuessTable\";\r\nimport { InputSelect } from \"./modules/InputSelect\";\r\nimport getCountries from \"./useCountries\";\r\n\r\nclass Guess {\r\n  constructor(guessedCountry, actualCountry) {\r\n    this.country = guessedCountry;\r\n    console.info(guessedCountry);\r\n    this.distanceKm = calcCrow(guessedCountry, actualCountry);\r\n    console.info(this.distanceKm);\r\n    this.direction = calcDirection(guessedCountry, actualCountry);\r\n  }\r\n}\r\n\r\nconst gameType = \"CountriesWorld\";\r\nconst maxGuesses = 6;\r\nexport const CountryGuesser = () => {\r\n  const [countries, setcountries] = useState([]);\r\n  const [countriesDict, setcountriesDict] = useState([]);\r\n  // const [countryComp, setCountryComp] = useState(<Box />);\r\n  const [round, setRound] = useState(0);\r\n  const [roundOver, setRoundOver] = useState(false);\r\n  const [chosenCountry, setChosenCountry] = useState();\r\n  const [guessedCountry, setguessedCountry] = React.useState(\"\");\r\n  const [currentGuesses, setCurrentGuesses] = React.useState([]);\r\n  const [scores, setscores] = useState(\r\n    list_storage.getList(gameType, (o) => parseInt(o)) ||\r\n      new Array(maxGuesses + 1).fill(0)\r\n  );\r\n  const [streak, setstreak] = useState(0);\r\n\r\n  useEffect(() => {\r\n    console.info(`Starting round ${round}`);\r\n    const [newCountries, newCountriesDict] = getCountries(false);\r\n    setcountries(newCountries);\r\n    setcountriesDict(newCountriesDict);\r\n    let newChosenCountry =\r\n      newCountries[Math.floor(Math.random() * newCountries.length)];\r\n    console.info(newChosenCountry);\r\n    setChosenCountry(newChosenCountry);\r\n  }, [round]);\r\n\r\n  function nextRound() {\r\n    setRound((r) => r + 1);\r\n    setRoundOver(false);\r\n    setCurrentGuesses([]);\r\n    setguessedCountry(\"\");\r\n  }\r\n\r\n  function won() {\r\n    setRoundOver(true);\r\n    setstreak((s) => s + 1);\r\n    let index = currentGuesses.length;\r\n    scores[index] = scores[index] + 1;\r\n    setscores(scores);\r\n    list_storage.setList(gameType, scores);\r\n  }\r\n\r\n  function lost() {\r\n    setRoundOver(true);\r\n    setstreak(0);\r\n    scores[0] = scores[0] + 1;\r\n    setscores(scores);\r\n    list_storage.setList(gameType, scores);\r\n  }\r\n\r\n  const attemptGuess = () => {\r\n    if (!guessedCountry in countriesDict) {\r\n      return;\r\n    }\r\n    let chosen = countriesDict[guessedCountry];\r\n    let guess = new Guess(chosen, chosenCountry);\r\n    currentGuesses.push(guess);\r\n    setCurrentGuesses(currentGuesses);\r\n    setguessedCountry(\"\");\r\n    if (chosen.name === chosenCountry.name) {\r\n      won();\r\n      return;\r\n    }\r\n    if (currentGuesses.length >= maxGuesses) {\r\n      lost();\r\n    }\r\n  };\r\n\r\n  if (chosenCountry === undefined) {\r\n    return <Box>Loading...</Box>;\r\n  } else {\r\n    return (\r\n      <Box\r\n        direction={\"column\"}\r\n        flex={{ grow: 1 }}\r\n        align={\"center\"}\r\n        justify={\"center\"}\r\n        animation={{ type: \"fadeIn\" }}\r\n        style={{ maxWidth: \"850px\" }}\r\n        alignContent=\"center\"\r\n      >\r\n        <Box\r\n          align=\"center\"\r\n          background={{ color: \"light-4\" }}\r\n          style={{\r\n            padding: \"40px\",\r\n            borderRadius: \"50px\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        >\r\n          <DynamicSvg\r\n            svgName={chosenCountry.code_2}\r\n            style={{ height: \"250px\" }}\r\n            failed={() => nextRound()}\r\n          />\r\n        </Box>\r\n\r\n        {roundOver ? (\r\n          <Box style={{ display: \"contents\" }}>\r\n            <Box direction=\"row\">\r\n              <Heading size={\"large\"} level={\"4\"}>\r\n                The country is {chosenCountry.name}\r\n              </Heading>\r\n              <Heading\r\n                style={{\r\n                  fontFamily: \"NotoColorEmojiLimited\",\r\n                  textAlign: \"center\",\r\n                  marginLeft: \"5px\",\r\n                }}\r\n              >\r\n                {chosenCountry.flag}\r\n              </Heading>\r\n            </Box>\r\n            <Box direction=\"column\">\r\n              <Text>\r\n                <b>Population:</b> {chosenCountry.population.toLocaleString()}\r\n              </Text>\r\n              <Text>\r\n                <b>Official Name:</b> {chosenCountry.official_name}\r\n              </Text>\r\n              <Text>\r\n                <b>Continent:</b> {chosenCountry.continents.join(\", \")}\r\n              </Text>\r\n              <Text>\r\n                <b>Area:</b> {chosenCountry.area.toLocaleString()} km\r\n                <sup>2</sup>\r\n              </Text>\r\n              <Text>\r\n                <b>Capital:</b> {chosenCountry.capitals.join(\", \")}\r\n              </Text>\r\n              <Text>\r\n                <b>Languages:</b> {chosenCountry.languages.join(\", \")}\r\n              </Text>\r\n            </Box>\r\n          </Box>\r\n        ) : (\r\n          <Box />\r\n        )}\r\n\r\n        {!roundOver ? (\r\n          <Box hidden={roundOver}>\r\n            <InputSelect\r\n              options={countries}\r\n              key={round}\r\n              value={guessedCountry}\r\n              optionNameOperand={(o) => o.name}\r\n              onChange={(option) => setguessedCountry(option.value)}\r\n            />\r\n            <Button\r\n              label=\"Submit\"\r\n              onClick={attemptGuess}\r\n              style={{\r\n                margin: \"15px 0\",\r\n              }}\r\n            />\r\n          </Box>\r\n        ) : (\r\n          <Button onClick={() => nextRound()} label=\"Next!\" />\r\n        )}\r\n\r\n        <GuessTable max={maxGuesses}>\r\n          {currentGuesses.map((guess, i) => (\r\n            <CountryGuessRow\r\n              country={guess.country}\r\n              distance={guess.distanceKm}\r\n              direction={guess.direction}\r\n              key={i}\r\n            />\r\n          ))}\r\n        </GuessTable>\r\n        <GuessScoreBoard scores={scores} streak={streak} type={gameType} />\r\n      </Box>\r\n    );\r\n  }\r\n};\r\n","import countries_json from \"./countries.json\";\r\nimport territories_json from \"./territories.json\";\r\nimport { load_countries } from \"./country_utils\";\r\n\r\nexport default function getCountries(use_territories = false) {\r\n  console.info(\"Getting countries...\");\r\n  let allCountries = load_countries(countries_json);\r\n  if (use_territories) {\r\n    console.info(\"Loading territories as well\");\r\n    allCountries = allCountries.concat(load_countries(territories_json));\r\n  }\r\n  let countriesDIct = Object.fromEntries(\r\n    allCountries.map((country) => [country.name, country])\r\n  );\r\n  return [allCountries, countriesDIct];\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst routePrefixes = [\"/Doomsday-algorithm-practice\", \"/test\", \"/\"];\r\n\r\nexport default function useRoutePrefix(delimiter) {\r\n  const [prefix, setPrefix] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let pathname = window.location.pathname;\r\n    for (let i = 0; i < routePrefixes.length; i++) {\r\n      let current = routePrefixes[i];\r\n      if (pathname.startsWith(current)) {\r\n        let delimited = current.endsWith(\"/\");\r\n        if (delimiter && !delimited) {\r\n          current = current + \"/\";\r\n        }\r\n        else if (delimited && !delimiter) {\r\n          current = current.slice(0, current.length - 1);\r\n        }\r\n        setPrefix(current);\r\n        break;\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return [prefix];\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport {Box, Heading, Text} from \"grommet\";\r\nimport * as moment from \"moment\";\r\n\r\nconst centuryIndexMap = {18: 5, 19: 3, 20: 2, 21: 0};\r\nconst doomsdaysForMonth = {1: \"03\", 2: \"14\", 3: \"07\", 4: \"04\", 5: \"09\", 6: \"06\", 7: \"11\", 8: \"08\", 9: \"05\", 10: \"10\", 11: \"07\", 12: \"12\"};\r\nconst doomsdaysForMonthInLeapYear = {...doomsdaysForMonth, 1: \"04\", 2: \"15\"};\r\n\r\nexport default function ExplanationModal(props) {\r\n\r\n  let day = moment(props.currentDay);\r\n\r\n  let centuryIndex = centuryIndexMap[day.format(\"Y\").substring(0, 2)];\r\n  let year = Number(day.format(\"YY\"));\r\n  let yearAfter1Step = year % 2 === 1 ? (year + 11) : year;\r\n  let yearAfter2Step = yearAfter1Step / 2;\r\n  let yearAfter3Step = yearAfter2Step % 2 === 1 ? yearAfter2Step + 11 : yearAfter2Step;\r\n  let nearestMultiple = yearAfter3Step % 7 === 0 ?  yearAfter3Step : yearAfter3Step + 7 - (yearAfter3Step % 7);\r\n  let weekDay = (nearestMultiple - yearAfter3Step + centuryIndex) % 7;\r\n  let doomsday = day.isLeapYear() ?\r\n      `${day.format(\"MM-\")}${doomsdaysForMonthInLeapYear[day.format(\"M\")]}` :\r\n      `${day.format(\"MM-\")}${doomsdaysForMonth[day.format(\"M\")]}`;\r\n\r\n  let dayNumber = Number(day.format(\"D\"));\r\n  let doomsdayNumber = Number(doomsday.substring(3));\r\n  let doomsdayToDayChain = [];\r\n\r\n  while (Math.abs(dayNumber - doomsdayNumber) > 6) {\r\n    doomsdayToDayChain.push(`${day.format(\"MM-\")}${doomsdayNumber < 10 ? `0${doomsdayNumber}` : doomsdayNumber}`);\r\n    if (doomsdayNumber < dayNumber) doomsdayNumber += 7;\r\n    else doomsdayNumber -= 7;\r\n  }\r\n  if (doomsdayToDayChain.length > 0) {\r\n    doomsdayToDayChain.push(`${day.format(\"MM-\")}${doomsdayNumber < 10 ? `0${doomsdayNumber}` : doomsdayNumber}`);\r\n  }\r\n\r\n  return <Box direction={\"column\"} margin={\"medium\"}>\r\n    <Heading alignSelf={\"center\"}>\r\n      <span className={\"century\"}>{day.format(\"Y\").substring(0, 2)}</span>\r\n      <span className={\"year\"}>{day.format(\"YY\")}</span>-\r\n      <span className={\"month\"}>{day.format(\"MM\")}</span>-\r\n      <span className={\"day\"}>{day.format(\"DD\")}</span>\r\n    </Heading>\r\n    <Text margin={{bottom: \"xsmall\"}}>\r\n      Century index for the <b className={\"century\"}>{day.format(\"Y\").substring(0, 2)}</b>00s is <b className={\"centuryIndex\"}>{centuryIndex}</b>.\r\n    </Text>\r\n    <Text>\r\n      Calculating the year index for year <b className={\"year\"}>{day.format(\"YY\")}</b> using \"odd + 11\" method:\r\n    </Text>\r\n    <Box pad={{horizontal: \"medium\", vertical: 'xsmall'}} margin={{bottom: \"xsmall\"}}>\r\n      {year !== yearAfter1Step &&\r\n        <Text>{year} is odd, adding 11: {year} + 11 = {yearAfter1Step};</Text>\r\n      }\r\n      <Text>{yearAfter1Step} is even, dividing by 2: {yearAfter1Step} / 2 = { yearAfter2Step === yearAfter3Step ? <><b className={\"yearIndex\"}>{yearAfter2Step}</b>.</> : `${yearAfter2Step};`}</Text>\r\n      {yearAfter2Step !== yearAfter3Step &&\r\n        <Text>{yearAfter2Step} is odd, adding 11: {yearAfter2Step} + 11 = <b className={\"yearIndex\"}>{yearAfter3Step}</b>.</Text>\r\n      }\r\n    </Box>\r\n    <Text>The nearest higher multiple of 7 to <b className={\"yearIndex\"}>{yearAfter3Step}</b> is <b className={\"nearestMultiple\"}>{nearestMultiple}</b>.</Text>\r\n    <Text margin={{bottom: \"xsmall\"}}>Calculating the weekday of the doomsday: (<b className={\"nearestMultiple\"}>{nearestMultiple}</b> - <b className={\"yearIndex\"}>{yearAfter3Step}</b> + <b className={\"centuryIndex\"}>{centuryIndex}</b>) mod 7 = <b className={\"doomsdayWeekDay\"}>{weekDay}</b> <b>({moment.weekdays(weekDay)})</b>.</Text>\r\n    <Text>\r\n      Doomsday for {day.format(\"MMMM\")} is <b>{doomsday.substring(0, 3)}</b><b className={doomsdayToDayChain.length === 0 ? \"doomsday\" : \"\"}>{doomsday.substring(3)}</b>{day.isLeapYear() && (day.format(\"M\") < 3) && <b> (leap year)</b>}.\r\n    </Text>\r\n    {doomsdayToDayChain.length > 0 && <>\r\n      <Text>Selecting a doomsday closer to our date:</Text>\r\n      <Box pad={{horizontal: \"medium\", vertical: 'xsmall'}}>\r\n        <Text>\r\n          {doomsdayToDayChain.map((date, index) => {\r\n            if (index === doomsdayToDayChain.length - 1) return <Fragment key={index}><b>{date.substring(0, 3)}</b><b className={\"doomsday\"}>{date.substring(3)}</b>.</Fragment>;\r\n            return `${date} -> `\r\n          })}\r\n        </Text>\r\n      </Box>\r\n      </>\r\n    }\r\n    {doomsdayNumber === dayNumber ?\r\n        <Text>Our date matches the doomsday, and it is <b>{day.format(\"dddd\")}</b>.</Text> :\r\n        <Text>Calculating the day of the week: (<b className={\"doomsdayWeekDay\"}>{weekDay}</b> {dayNumber > doomsdayNumber ?\r\n            <> + (<b className={\"day\"}>{dayNumber}</b> - <b className={\"doomsday\"}>{doomsdayNumber}</b>)</> :\r\n            <> - (<b className={\"doomsday\"}>{doomsdayNumber}</b> - <b className={\"day\"}>{dayNumber}</b>)</>\r\n        }) mod 7 = <b>{day.format(\"d\")} ({day.format(\"dddd\")})</b>.</Text>\r\n    }\r\n  </Box>\r\n}","import React, {useState} from 'react';\r\nimport {Box, Button, Layer} from \"grommet\";\r\nimport useDidUpdate from \"../../functions/useDidUpdate\";\r\nimport ExplanationModal from \"./ExplanationModal\";\r\n\r\nexport default function FooterBar(props) {\r\n\r\n  const [fullyHidden, setFullyHidden] = useState(true);\r\n  const [showExplanation, setShowExplanation] = React.useState(false);\r\n\r\n  useDidUpdate(() => {\r\n    setFullyHidden(false)\r\n  }, [props.isVisible]);\r\n\r\n  return <Box\r\n    key={props.isVisible}\r\n    direction={\"row\"}\r\n    justify={\"between\"}\r\n    margin={{bottom: \"small\", right: \"large\", left: \"large\"}}\r\n    animation={props.isVisible ? {\"type\": \"fadeIn\"} : {\"type\": \"fadeOut\", \"duration\": 200}}\r\n  >\r\n    <Button\r\n        label={\"Explanation\"}\r\n        onClick={props.isVisible ? () => setShowExplanation(true) : () => {}}\r\n        style={{visibility: (fullyHidden ? \"hidden\" : \"visible\")}}\r\n    />\r\n    {showExplanation && (\r\n        <Layer\r\n            onEsc={() => setShowExplanation(false)}\r\n            onClickOutside={() => setShowExplanation(false)}\r\n            margin={\"medium\"}\r\n            className={\"modal\"}\r\n            responsive={false}\r\n        >\r\n          <ExplanationModal currentDay={props.currentDay}/>\r\n        </Layer>\r\n    )}\r\n    <Button\r\n      label={\"Continue\"}\r\n      onClick={props.isVisible ? props.onContinueClick : () => {}}\r\n      style={{visibility: (fullyHidden ? \"hidden\" : \"visible\")}}\r\n    />\r\n  </Box>\r\n}\r\n","import {useEffect, useRef} from 'react';\r\n\r\nexport default function useDidUpdate (callback, deps) {\r\n  const hasMount = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (hasMount.current) {\r\n      callback()\r\n    } else {\r\n      hasMount.current = true\r\n    }\r\n  }, deps)\r\n}\r\n","import {Box, Text} from \"grommet\";\r\nimport React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nexport default function DayButton(props) {\r\n\r\n  const anySelected = props.selectedDayOfWeek !== undefined;\r\n\r\n  const isSelectedButFalse =  anySelected &&\r\n    props.selectedDayOfWeek !== props.expectedDayOfWeek &&\r\n    props.number === props.selectedDayOfWeek;\r\n\r\n  const isCorrect = anySelected &&\r\n    props.number === props.expectedDayOfWeek;\r\n\r\n  return props.number !== undefined ?\r\n    <Box\r\n      flex={{'grow': 1}}\r\n      basis={'xxsmall'}\r\n      align={'center'}\r\n      justify={'center'}\r\n      style={{boxShadow: \"none\"}}\r\n      animation={(isSelectedButFalse || isCorrect) ? {\"type\": \"zoomIn\", \"duration\": 400} : {}}\r\n      background={isSelectedButFalse ? 'status-error' : (isCorrect ? 'status-ok' : \"\")}\r\n      onClick={() => {\r\n        if (!anySelected) props.setSelectedDayOfWeek(props.number)\r\n      }}\r\n    >\r\n      <Text size={\"large\"}>{moment.weekdays(props.number)}</Text>\r\n    </Box> :\r\n    <Box\r\n      flex={{'grow': 1}}\r\n      basis={'xxsmall'}\r\n    />;\r\n}\r\n","import {Box} from \"grommet\";\r\nimport DayButton from \"./DayButton\";\r\nimport React from \"react\";\r\n\r\nexport default function DayButtonGrid(props) {\r\n\r\n  let selected = props.selectedDayOfWeek;\r\n  let setSelected = props.setSelectedDayOfWeek;\r\n  let expected = props.expectedDayOfWeek;\r\n\r\n  return <Box\r\n    flex={{grow: 2}}\r\n    direction={'column'}\r\n    justify={'center'}\r\n    alignSelf={'center'}\r\n    style={{width: \"100%\"}}\r\n  >\r\n    <Box\r\n      flex={'grow'}\r\n      direction={\"row\"}\r\n      align={'stretch'}\r\n      wrap={true}\r\n    >\r\n      <DayButton number={1} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n      <DayButton number={2} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n      <DayButton number={3} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n    </Box>\r\n    <Box\r\n      flex={'grow'}\r\n      direction={\"row\"}\r\n      align={'stretch'}\r\n      wrap={true}\r\n    >\r\n      <DayButton number={4} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n      <DayButton number={5} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n      <DayButton number={6} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n    </Box>\r\n    <Box\r\n      flex={'grow'}\r\n      direction={\"row\"}\r\n      align={'stretch'}\r\n      wrap={true}\r\n    >\r\n      <DayButton />\r\n      <DayButton number={0} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\r\n      <DayButton />\r\n    </Box>\r\n  </Box>\r\n}\r\n","export default function formatScoreTime (time) {\r\n    let minutes = (\"0\" + Math.floor(time / 60000) % 60).slice(-2);\r\n    let seconds = (\"0\" + Math.floor(time / 1000) % 60).slice(-2);\r\n    let milliSeconds = (\"0\" + Math.floor(time / 10) % 100).slice(-2);\r\n    return minutes + \":\" + seconds + \".\" + milliSeconds;\r\n  }","import React, { useEffect } from 'react';\r\nimport formatScoreTime from \"../../functions/formatScoreTime.js\";\r\nimport { Box, Heading } from 'grommet';\r\n\r\nfunction Stopwatch(props) {\r\n  let running = props.running;\r\n  let time = props.time;\r\n  let setTime = props.setTime;\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (running) {\r\n      interval = setInterval(() => {\r\n        setTime((prevTime) => prevTime + 10);\r\n      }, 10);\r\n    } else if (!running) {\r\n      clearInterval(interval);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [running, setTime]);\r\n\r\n  return (\r\n    <Box style={{margin: \"0\"}}>\r\n      <Heading level={3}>{formatScoreTime(time)}</Heading>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Stopwatch;","import React from 'react';\r\nimport { Box, Text } from 'grommet';\r\nimport formatScoreTime from \"../../functions/formatScoreTime.js\";\r\n\r\n\r\nfunction ScoreRow({score, success, index}) {\r\n    return (\r\n        <Box\r\n            flex={'grow'}\r\n            direction={\"row\"}\r\n            align={'stretch'}\r\n            height=\"25px\"\r\n            wrap={true}>\r\n            <Text color=\"darkslategrey\" style={{ marginRight: \"10px\" }}>{index + 1}</Text>\r\n            <Text color={success ? \"white\" : \"darkred\"}>{formatScoreTime(score)}</Text>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ScoreRow;","import React, { useEffect, useState } from 'react';\r\nimport { Box, Text } from 'grommet';\r\nimport formatScoreTime from \"../../functions/formatScoreTime.js\";\r\nimport { useHighScoreState } from \"../../functions/useHighScoreState.js\";\r\n\r\nconst trimScores = (scores) => {\r\n  let successSorted = scores.sort((a, b) => a[1] - b[1]);\r\n  let slicedWorst = false;\r\n  if (!successSorted[0][1]) {\r\n    successSorted = successSorted.slice(1);\r\n    slicedWorst = true;\r\n  }\r\n  if (!successSorted[0][1]) {\r\n    return successSorted;\r\n  }\r\n  let sortedScores = successSorted.sort((a, b) => a[0] - b[0]);\r\n  if (!slicedWorst) {\r\n    sortedScores = sortedScores.slice(0, -1);\r\n  }\r\n  return sortedScores.slice(1);\r\n}\r\n\r\nconst calulateAverageOfLastScores = (scores, lastAmount, trimAvrage) => {\r\n  let scoreCopy = scores.slice(0);\r\n  let relevantScores = scoreCopy.reverse().slice(0, lastAmount);\r\n  if (relevantScores.length < lastAmount) {\r\n    return 0;\r\n  }\r\n\r\n  if (trimAvrage) {\r\n    relevantScores = trimScores(relevantScores);\r\n    console.info(relevantScores);\r\n  }\r\n\r\n  let sum = 0;\r\n  for (let i = 0; i < relevantScores.length; i++) {\r\n    if (relevantScores[i][1] === false) {\r\n      return -1;\r\n    }\r\n    sum += relevantScores[i][0];\r\n  }\r\n\r\n  return sum / relevantScores.length;\r\n}\r\n\r\nconst formatAverageTime = (averageTime) => {\r\n  if (averageTime === -1) {\r\n    return \"DNF\";\r\n  } else if (averageTime === 0) {\r\n    return \"-\";\r\n  }\r\n  return formatScoreTime(averageTime);\r\n}\r\n\r\n\r\nfunction AverageScore(props) {\r\n  let scores = props.scores;\r\n  let averageSize = props.averageSize;\r\n  let isTrimmed = props.isTrimmed ?? false;\r\n  let type = props.type + (isTrimmed ? \"trimmed\" : \"\");\r\n  let [average, setAverage] = useState(0);\r\n  let [bestAverage, setBestAverage] = useHighScoreState(type + averageSize.toString());\r\n  let [newHighScore, setNewHighScore] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setNewHighScore(false);\r\n    let currentAverage = calulateAverageOfLastScores(scores, averageSize, isTrimmed);\r\n    setAverage(currentAverage);\r\n\r\n    if (currentAverage > 0 && bestAverage === 0 || (currentAverage > 0 && (bestAverage <= 0 || bestAverage > currentAverage))) {\r\n      setBestAverage(Math.max(currentAverage, 0));\r\n      setNewHighScore(true);\r\n    }\r\n  }, [scores.length]);\r\n\r\n  return (\r\n    <Box>\r\n      {averageSize === 1\r\n        ? <Text color={newHighScore ? \"orange\" : \"white\"}>Top Score: {formatAverageTime(bestAverage)}</Text>\r\n        : <Box>\r\n          <Text> {isTrimmed ? \"Trimmed average\" : \"Average\"}  of {averageSize}: {formatAverageTime(average)}</Text>\r\n          <Text color={newHighScore ? \"orange\" : \"white\"}>Best {isTrimmed ? \"trimmed \" : \"\"} average of {averageSize}: {formatAverageTime(bestAverage)}</Text>\r\n        </Box>\r\n      }\r\n    </Box>\r\n\r\n  );\r\n};\r\n\r\nexport default AverageScore;","import React, { useEffect, useState } from \"react\";\r\nimport { Box, Heading, Text } from \"grommet\";\r\nimport ScoreRow from \"./ScoreRow\";\r\nimport { useHighScoreState } from \"../../functions/useHighScoreState.js\";\r\nimport AverageScore from \"./AverageScore.js\";\r\n\r\nexport default function ScoreBoard({\r\n  scores,\r\n  type,\r\n  trimmedAveragesToShow = [],\r\n  averagesToShow = [],\r\n  timeScores = true\r\n}) {\r\n  let [streak, setStreak] = useState(0);\r\n  let [bestStreak, setBestStreak] = useHighScoreState(type + \"streak\");\r\n  let [newHighScore, setNewHighScore] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setNewHighScore(false);\r\n    if (scores.length > 0) {\r\n      let lastScore = scores[scores.length - 1];\r\n      if (lastScore[1] === false) {\r\n        setStreak(0);\r\n      } else {\r\n        let currentStreak = streak + 1;\r\n        if (bestStreak < currentStreak) {\r\n          setBestStreak(currentStreak);\r\n          setNewHighScore(true);\r\n        }\r\n        setStreak(currentStreak);\r\n      }\r\n    }\r\n  }, [scores.length, scores]);\r\n\r\n  return (\r\n    <Box\r\n      flex={\"grow\"}\r\n      direction={\"row\"}\r\n      align={\"stretch\"}\r\n      wrap={true}\r\n      style={{ padding: \"5px\" }}\r\n    >\r\n      <Box align={\"start\"} style={{ padding: \"5px 10px\" }} justify={\"center\"}>\r\n        <Heading level={3} style={{ margin: \"0\" }}>\r\n          Scores:\r\n        </Heading>\r\n        <Box\r\n          width={\"300px\"}\r\n          height={\"150px\"}\r\n          style={{\r\n            border: \"2px solid white\",\r\n            padding: \"10px\",\r\n            overflowY: \"scroll\",\r\n          }}\r\n        >\r\n          {scores.length > 0 ? (\r\n            scores\r\n              .map(([score, success], index) => (\r\n                <ScoreRow\r\n                  key={index}\r\n                  index={index}\r\n                  score={score}\r\n                  success={success}\r\n                />\r\n              ))\r\n              .reverse()\r\n          ) : (\r\n            <Text>No scores yet...</Text>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n      <Box align={\"start\"} style={{ padding: \"15px\" }} justify={\"center\"}>\r\n        <Text>Current Streak: {streak}</Text>\r\n        <Text color={newHighScore ? \"orange\" : \"white\"}>\r\n          Best Streak: {bestStreak}\r\n        </Text>\r\n        {averagesToShow.map((averageSize, i) => (\r\n          <AverageScore\r\n            key={i}\r\n            scores={scores}\r\n            averageSize={averageSize}\r\n            type={type}\r\n          />\r\n        ))}\r\n        {trimmedAveragesToShow.map((averageSize, i) => (\r\n          <AverageScore\r\n            key={i}\r\n            scores={scores}\r\n            averageSize={averageSize}\r\n            type={type}\r\n            isTrimmed={true}\r\n          />\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Box, Heading } from 'grommet';\r\nimport FooterBar from \"./FooterBar\";\r\nimport DayButtonGrid from \"./DayButtonGrid\";\r\nimport Stopwatch from \"../score/Stopwatch\";\r\nimport ScoreBoard from \"../score/ScoreBoard\";\r\nconst moment = require('moment');\r\nconst momentRandom = require('moment-random');\r\n\r\nfunction DoomdsdayGame(props) {\r\n  const generateRandomDay = () => momentRandom(\r\n    moment(props.endDate),\r\n    moment(props.startDate)\r\n  );\r\n\r\n  const parseDateToWeekDayNumber = (date) => Number(date.format('d'));\r\n\r\n  let initialDay = generateRandomDay();\r\n  const [currentDay, setCurrentDay] = useState(initialDay.format(\"Y-MM-DD\"));\r\n  const [scores, setScores] = useState([]);\r\n  const [selectedDayOfWeek, setSelectedDayOfWeek] = useState();\r\n  const [running, setRunning] = useState(true);\r\n  const [time, setTime] = useState(0);\r\n  const [expectedDayOfWeek, setExpectedDayOfWeek] = useState(parseDateToWeekDayNumber(initialDay));\r\n\r\n  useEffect(() => {\r\n    if (selectedDayOfWeek !== undefined) {\r\n      setRunning(false);\r\n      // if (selectedDayOfWeek === 0) {\r\n      if (selectedDayOfWeek === expectedDayOfWeek) {\r\n        scores.push([time, true]);\r\n      } else {\r\n        scores.push([time, false]);\r\n      }\r\n      setScores(scores);\r\n    }\r\n  }, [selectedDayOfWeek]);\r\n\r\n  const startNewRound = () => {\r\n    let nextDay = generateRandomDay();\r\n    setSelectedDayOfWeek(undefined);\r\n    setCurrentDay(nextDay.format(\"Y-MM-DD\"));\r\n    setExpectedDayOfWeek(parseDateToWeekDayNumber(nextDay));\r\n    setRunning(true);\r\n    setTime(0);\r\n  };\r\n\r\n  return (\r\n    <Box direction={\"column\"} flex={\"grow\"} style={{ width: \"100%\" }} alignSelf={'center'}>\r\n      <Box\r\n        key={currentDay}\r\n        flex={{ grow: 1 }}\r\n        align={'center'}\r\n        justify={'center'}\r\n        animation={{ \"type\": \"fadeIn\" }}\r\n      >\r\n        <Box flex={{ grow: 4 }}>\r\n          <Heading size={\"large\"} level={'1'}>\r\n            {currentDay}\r\n          </Heading>\r\n        </Box>\r\n      </Box>\r\n      <DayButtonGrid selectedDayOfWeek={selectedDayOfWeek} setSelectedDayOfWeek={setSelectedDayOfWeek} expectedDayOfWeek={expectedDayOfWeek} />\r\n      <Box align={'center'}>\r\n        <Stopwatch running={running} time={time} setTime={setTime} />\r\n        <ScoreBoard scores={scores} type=\"doomsday\" averagesToShow={[1, 3]} trimmedAveragesToShow={[5]}/>\r\n      </Box>\r\n      <FooterBar onContinueClick={startNewRound} isVisible={selectedDayOfWeek !== undefined} currentDay={currentDay} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default DoomdsdayGame;\r\n","import { Box, Button, Heading, TextInput } from \"grommet\";\r\nimport React, { useState } from \"react\";\r\nimport ScoreBoard from \"../score/ScoreBoard\";\r\nimport Stopwatch from \"../score/Stopwatch\";\r\n\r\nfunction MindPalaceGame(props) {\r\n  let numberLength = props.numberLength;\r\n  let choices = props.choices;\r\n  let type = props.type;\r\n  const [scores, setScores] = useState([]);\r\n  const [running, setRunning] = useState(true);\r\n  const [number, setNumber] = useState(generateTextWithLength());\r\n  const [answer, setAnswer] = React.useState(\"\");\r\n  const [hidden, setHidden] = React.useState(false);\r\n  const [time, setTime] = useState(0);\r\n\r\n  function insertIntervaledDash(str) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < str.length; i += 5) {\r\n      const chunk = str.slice(i, i + 5);\r\n      result += chunk + \"-\";\r\n    }\r\n\r\n    // Remove the trailing \"-\" if present\r\n    result = result.replace(/-$/, \"\");\r\n\r\n    return result.toUpperCase();\r\n  }\r\n\r\n  function generateTextWithLength() {\r\n    let randomText = \"\";\r\n    for (let i = 0; i < numberLength; i++) {\r\n      let chosenOption = choices[Math.floor(Math.random() * choices.length)];\r\n      randomText += chosenOption;\r\n    }\r\n\r\n    return randomText;\r\n  }\r\n\r\n  const SubmitAnswer = () => {\r\n    let success = false;\r\n    if (number.toUpperCase() === answer.toUpperCase()) {\r\n      success = true;\r\n    }\r\n\r\n    setRunning(false);\r\n    setHidden(false);\r\n    scores.push([time, success]);\r\n    setScores(scores);\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setTime(0);\r\n    setRunning(true);\r\n    setNumber(generateTextWithLength());\r\n    setAnswer(\"\");\r\n  };\r\n\r\n  const handleInput = (input) => {\r\n    setHidden(true);\r\n    setAnswer(input.toUpperCase());\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      direction={\"column\"}\r\n      flex={\"grow\"}\r\n      style={{ width: \"100%\" }}\r\n      alignSelf={\"center\"}\r\n    >\r\n      <Box\r\n        flex={{ grow: 1 }}\r\n        align={\"center\"}\r\n        justify={\"center\"}\r\n        animation={{ type: \"fadeIn\" }}\r\n      >\r\n        <Box flex={{ grow: 4 }}>\r\n          <Heading size={\"large\"} level={\"3\"} style={{ userSelect: \"none\", margin: \"10px 5px\", textAlign: \"center\"}}>\r\n            {!hidden\r\n              ? insertIntervaledDash(number)\r\n              : insertIntervaledDash(\"X\".repeat(answer.length))}\r\n          </Heading>\r\n        </Box>\r\n\r\n        {running ? (\r\n          <TextInput\r\n            placeholder=\"Type your answer here\"\r\n            value={answer}\r\n            onChange={(event) => handleInput(event.target.value)}\r\n          />\r\n        ) : (\r\n          <Heading level={\"3\"}>{insertIntervaledDash(answer)}</Heading>\r\n        )}\r\n        <Button\r\n          label=\"Submit\"\r\n          onClick={() => SubmitAnswer()}\r\n          style={{\r\n            marginTop: \"15px\",\r\n            visibility: !running ? \"hidden\" : \"visible\",\r\n          }}\r\n        />\r\n      </Box>\r\n\r\n      <Box\r\n        direction={\"row\"}\r\n        justify={\"center\"}\r\n        margin={{ bottom: \"small\", right: \"large\", left: \"large\" }}\r\n      >\r\n        <Button\r\n          label=\"Continue\"\r\n          style={{ visibility: running ? \"hidden\" : \"visible\" }}\r\n          onClick={() => resetGame()}\r\n        />\r\n      </Box>\r\n\r\n      <Box align={\"center\"}>\r\n        <Stopwatch running={running} time={time} setTime={setTime} />\r\n        <ScoreBoard\r\n          scores={scores}\r\n          type={type + numberLength}\r\n          averagesToShow={[1, 3]}\r\n          trimmedAveragesToShow={numberLength <= 10 ? [5, 10] : [5]}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MindPalaceGame;\r\n","import { Text } from \"grommet\";\r\nimport React, { useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport DoomdsdayGame from \"../components/doomsday/DoomdsdayGame\";\r\nimport MindPalaceGame from \"../components/mindPalace/MindPalaceGame\";\r\n\r\nexport const doomsday = \"Doomsday Algorithm\";\r\nexport const numberMemory = \"Numbers\";\r\nexport const alphabetMemory = \"Alphabet\";\r\n\r\nexport function MindGames(props) {\r\n  const [currentGame, setCurrentGame] = useState(doomsday);\r\n  const [currentOption, setCurrentOption] = useState(0);\r\n\r\n  const chooseNewGame = (game, options) => {\r\n    setCurrentGame(game);\r\n    setCurrentOption(options);\r\n  };\r\n\r\n  const games = {};\r\n  games[doomsday] = \"\";\r\n  games[numberMemory] = [10, 15, 20, 30];\r\n  games[alphabetMemory] = [10, 15, 20, 30];\r\n\r\n  return (\r\n    <div>\r\n      <Header onClick={chooseNewGame} items={games} />\r\n      {currentGame === doomsday ? (\r\n        <DoomdsdayGame startDate={\"1800-01-01\"} endDate={\"2199-12-31\"} />\r\n      ) : currentGame === numberMemory ? (\r\n        <MindPalaceGame\r\n          key={currentGame + currentOption}\r\n          type={\"numberMemory\" + currentOption}\r\n          numberLength={currentOption}\r\n          choices={[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"]}\r\n        />\r\n      ) : currentGame === alphabetMemory ? (\r\n        <MindPalaceGame\r\n          key={currentGame + currentOption}\r\n          type={\"alphabetMemory\" + currentOption}\r\n          numberLength={currentOption}\r\n          choices={[\r\n            \"A\",\r\n            \"B\",\r\n            \"C\",\r\n            \"D\",\r\n            \"E\",\r\n            \"F\",\r\n            \"G\",\r\n            \"H\",\r\n            \"I\",\r\n            \"J\",\r\n            \"K\",\r\n            \"L\",\r\n            \"M\",\r\n            \"N\",\r\n            \"O\",\r\n            \"P\",\r\n            \"Q\",\r\n            \"R\",\r\n            \"S\",\r\n            \"T\",\r\n            \"U\",\r\n            \"V\",\r\n            \"W\",\r\n            \"X\",\r\n            \"Y\",\r\n            \"Z\",\r\n          ]}\r\n        />\r\n      ) : (\r\n        <Text>Invalid Game Selected</Text>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Button } from \"grommet\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport function SpyFallConfirmButton({\r\n  text,\r\n  confirmText,\r\n  onTrigger = () => null,\r\n  onDisable = () => null,\r\n  onClick = () => null,\r\n  noConfirmDisable = false,\r\n}) {\r\n  const [confirm, setConfirm] = useState(false);\r\n  const [triggered, setTriggered] = useState(false);\r\n\r\n  const toggleTriggerState = () => {\r\n    setConfirm(false);\r\n    setTriggered(!triggered);\r\n  };\r\n\r\n  const buttonPress = () => {\r\n    onClick();\r\n    if (triggered && noConfirmDisable) {\r\n      toggleTriggerState();\r\n      onDisable();\r\n      return;\r\n    }\r\n\r\n    if (confirm) {\r\n      toggleTriggerState();\r\n      if (triggered) {\r\n        onDisable();\r\n      } else {\r\n        onTrigger();\r\n      }\r\n      return;\r\n    }\r\n    setConfirm(true);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      margin={{ vertical: \"10px\" }}\r\n      onClick={buttonPress}\r\n      label={confirm ? confirmText : text}\r\n    ></Button>\r\n  );\r\n}\r\n","import { Box, Button, TextInput } from \"grommet\";\r\nimport React, { useState } from \"react\";\r\nimport { SpyFallConfirmButton } from \"./SpyFallConfirmButton\";\r\n\r\nexport function AddSpyfallPlayer({ index, addNewPlayer, finishStage }) {\r\n  const [playerName, setplayerName] = useState(\"Player \" + (index + 1));\r\n  const [location, setlocation] = useState(\"\");\r\n\r\n  return (\r\n    <Box>\r\n      <h3>Name:</h3>\r\n      <TextInput\r\n        onChange={(event) => setplayerName(event.target.value)}\r\n        value={playerName}\r\n      />\r\n      <h3>Location:</h3>\r\n      <TextInput\r\n        onChange={(event) => setlocation(event.target.value)}\r\n        value={location}\r\n      />\r\n\r\n      <Button\r\n        margin={{ vertical: \"10px\" }}\r\n        onClick={() => addNewPlayer(playerName, location)}\r\n        label=\"Next Player\"\r\n      ></Button>\r\n\r\n      <SpyFallConfirmButton\r\n        onTrigger={finishStage}\r\n        text=\"Finish Stage\"\r\n        confirmText=\"Are you sure?\"\r\n      ></SpyFallConfirmButton>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Button, Text } from \"grommet\";\r\nimport React, { useState } from \"react\";\r\nimport { SpyFallConfirmButton } from \"./SpyFallConfirmButton\";\r\n\r\nexport function SpyfallPlayerView({\r\n  currentPlayer,\r\n  chosenLocation,\r\n  isSpy,\r\n  nextPlayer,\r\n  prevPlayer\r\n}) {\r\n  const [hidden, sethidden] = useState(true);\r\n\r\n  return (\r\n    <Box>\r\n      <Text>Pass to {currentPlayer.name}</Text>\r\n      <SpyFallConfirmButton\r\n        text=\"Press button to show role.\"\r\n        confirmText=\"This is for your eyes only.\"\r\n        noConfirmDisable={true}\r\n        onTrigger={() => sethidden(false)}\r\n        onDisable={() => sethidden(true)}\r\n      >\r\n        Show Role\r\n      </SpyFallConfirmButton>\r\n      {hidden ? (\r\n        <></>\r\n      ) : isSpy ? (\r\n        <Text margin=\"auto\">You are the spy</Text>\r\n      ) : (\r\n        <>\r\n          <Text margin=\"auto\">The location is:</Text>\r\n          <Text margin=\"auto\" style={{ fontSize: \"larger\" }}>\r\n            {chosenLocation}\r\n          </Text>\r\n        </>\r\n      )}\r\n\r\n      <Button onClick={nextPlayer} label=\"Next Player\" />\r\n      <Button onClick={prevPlayer} label=\"Previous Player\" />\r\n    </Box>\r\n  );\r\n}\r\n","export class SpyfallPlayer {\r\n    constructor(index, name, location) {\r\n      this.index = index;\r\n      this.name = name;\r\n      this.location = location;\r\n    }\r\n  }","import { Box, Button, Heading, Text, TextInput } from \"grommet\";\r\nimport React, { useState } from \"react\";\r\nimport { AddSpyfallPlayer } from \"../components/spyfall/AddSpyfallPlayer\";\r\nimport { SpyfallPlayerView } from \"../components/spyfall/SpyfallPlayerView\";\r\nimport { SpyfallPlayer } from \"../components/spyfall/spyfallData\";\r\nimport Stopwatch from \"./../components/score/Stopwatch\";\r\n\r\nconst GameStages = {\r\n  initializing: 0,\r\n  passing: 1,\r\n  adminStart: 2,\r\n  playing: 3,\r\n  finished: 4,\r\n};\r\nclass GameLocations {\r\n  constructor(playerLocations) {\r\n    this.playersWithLocation = playerLocations;\r\n    this.defaultLocations = require(\"../components/spyfall/locations_hebrew.json\");\r\n    this.useDefaultLocations = false;\r\n  }\r\n\r\n  _locations() {\r\n    if (this.useDefaultLocations) {\r\n      return [...this.playersWithLocation, ...this.defaultLocations];\r\n    }\r\n    return this.playersWithLocation;\r\n  }\r\n\r\n  triggerDefaultLocations() {\r\n    this.useDefaultLocations = !this.useDefaultLocations;\r\n    console.log(`Use default locations: ${this.useDefaultLocations}`);\r\n  }\r\n\r\n  getPlayerLocationsLength() {\r\n    return this.playersWithLocation.length;\r\n  }\r\n\r\n  getLength() {\r\n    return this._locations().length;\r\n  }\r\n\r\n  getLocation() {\r\n    let locations = this._locations();\r\n    let chosenIndex = Math.floor(Math.random() * locations.length);\r\n    console.log(`Chosen index: ${chosenIndex}`);\r\n    console.log(this.defaultLocations);\r\n    if (chosenIndex < this.playersWithLocation.length) {\r\n      return [chosenIndex, locations[chosenIndex].location];\r\n    }\r\n    console.log(locations);\r\n    console.log(locations[chosenIndex]);\r\n    return [-1, locations[chosenIndex]];\r\n  }\r\n}\r\nfunction InitializeSpyFall(props) {\r\n  return (\r\n    <Box>\r\n      <Text>Current Player Count: {props.players.length}</Text>\r\n      <AddSpyfallPlayer\r\n        key={props.players.length}\r\n        index={props.players.length}\r\n        addNewPlayer={props.addPlayer}\r\n        finishStage={() => props.setgameStage(GameStages.adminStart)}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction SpyfallAdminStart({\r\n  playersCount,\r\n  spyAmount,\r\n  setspyAmount,\r\n  gameLocations,\r\n  startPassing,\r\n}) {\r\n  const [locationCount, setLocationCount] = useState(\r\n    gameLocations.getPlayerLocationsLength()\r\n  );\r\n\r\n  return (\r\n    <Box>\r\n      <Text>Player Count: {playersCount}</Text>\r\n      <Text>\r\n        Player location Count: {gameLocations.getPlayerLocationsLength()}\r\n      </Text>\r\n      <Text>Game location Count: {locationCount}</Text>\r\n      <Text>Spy Count:</Text>\r\n      <TextInput\r\n        placeholder=\"Spy Count\"\r\n        type={\"number\"}\r\n        value={spyAmount}\r\n        onChange={(event) => setspyAmount(event.target.value)}\r\n      />\r\n      <Button\r\n        onClick={() => {\r\n          gameLocations.triggerDefaultLocations();\r\n          setLocationCount(gameLocations.getLength());\r\n        }}\r\n        label=\"Trigger default locations\"\r\n      ></Button>\r\n      <Button\r\n        onClick={() => startPassing(gameLocations)}\r\n        label=\"Begin!\"\r\n      ></Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction SpyfallPlaying(props) {\r\n  return (\r\n    <Box\r\n      flex={{ grow: 1 }}\r\n      align={\"center\"}\r\n      justify={\"center\"}\r\n      animation={{ type: \"fadeIn\" }}\r\n    >\r\n      <Stopwatch running={true} time={props.time} setTime={props.setTime} />\r\n      <Text>Began Playing</Text>\r\n      <Text>\r\n        There{\" \"}\r\n        {props.chosenSpiesIds.length === 1\r\n          ? \"is 1 spy\"\r\n          : `are ${props.chosenSpiesIds.length} spies`}\r\n      </Text>\r\n      <Button\r\n        hidden={props.finishingRound < 2}\r\n        onClick={props.finishRound}\r\n        label={props.finishingRound === 0 ? \"Finish Round\" : \"Are you sure?\"}\r\n      ></Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport function Spyfall({ exit }) {\r\n  //const [gameStage, setgameStage] = useState(GameStages.initializing);\r\n  const [gameStage, setgameStage] = useState(GameStages.adminStart);\r\n  // const [players, setplayers] = useState([]);\r\n  const [players, setplayers] = useState([\r\n    new SpyfallPlayer(0, \"Player 1\", \"\"),\r\n    new SpyfallPlayer(1, \"Player 2\", \"aaa\"),\r\n    new SpyfallPlayer(2, \"Player 3\", \"\"),\r\n    new SpyfallPlayer(3, \"Player 4\", \"\"),\r\n  ]);\r\n  const [time, setTime] = useState(0);\r\n  const [chosenLocation, setchosenLocation] = useState();\r\n  const [chosenSpiesIds, setchosenSpiesIds] = useState([]);\r\n  const [spyAmount, setspyAmount] = useState(1);\r\n  const [currentPlayerIndex, setcurrentPlayerIndex] = useState(0);\r\n  const [finishingRound, setfinishingRound] = useState(0);\r\n  const finishRound = () => {\r\n    setfinishingRound(finishingRound + 1);\r\n    if (finishingRound >= 1) {\r\n      setgameStage(GameStages.finished);\r\n    }\r\n  };\r\n\r\n  const addPlayer = (name, location) => {\r\n    console.info(\"Added Player\");\r\n    let newPlayer = new SpyfallPlayer(players.length, name, location);\r\n    setplayers([...players, newPlayer]);\r\n  };\r\n\r\n  const getGameLocations = () => {\r\n    return new GameLocations(\r\n      players.filter((player) => player.location.length > 0)\r\n    );\r\n  };\r\n\r\n  const initializeSpyfallGame = (locations) => {\r\n    if (locations.length === 0) {\r\n      alert(\"No valid locations!\");\r\n      exit();\r\n      return;\r\n    }\r\n    let [chosenPlayerIndex, chosenLocation] = locations.getLocation();\r\n    console.info(\r\n      `Chosen location of player i. ${chosenPlayerIndex} - ${chosenLocation}`\r\n    );\r\n    setchosenLocation(chosenLocation);\r\n\r\n    let invalidSpyIds = [];\r\n    if (chosenPlayerIndex !== -1) {\r\n      invalidSpyIds.push(chosenPlayerIndex);\r\n    }\r\n    let spies = [];\r\n\r\n    if (players.length - invalidSpyIds.length < spyAmount) {\r\n      alert(\"Too many spies!\");\r\n      exit();\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < spyAmount; i++) {\r\n      let spyId = Math.floor(\r\n        Math.random() * (players.length - invalidSpyIds.length)\r\n      );\r\n      invalidSpyIds.forEach((invalidId) => {\r\n        if (spyId >= invalidId) {\r\n          spyId += 1;\r\n        }\r\n      });\r\n      console.info(`Chosen spy with index: ${spyId}`);\r\n      spies.push(spyId);\r\n      invalidSpyIds.push(spyId);\r\n      invalidSpyIds = invalidSpyIds.sort();\r\n    }\r\n    setchosenSpiesIds(spies);\r\n  };\r\n\r\n  const passToPrevPlayer = () => {\r\n    if (currentPlayerIndex > 0) {\r\n      setcurrentPlayerIndex(currentPlayerIndex - 1);\r\n    }\r\n  };\r\n\r\n  const passToNextPlayer = () => {\r\n    if (currentPlayerIndex < players.length - 1) {\r\n      setcurrentPlayerIndex(currentPlayerIndex + 1);\r\n    } else {\r\n      setgameStage(GameStages.playing);\r\n    }\r\n  };\r\n\r\n  const startPassing = (locations) => {\r\n    setgameStage(GameStages.passing);\r\n    initializeSpyfallGame(locations);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      flex={{ grow: 1 }}\r\n      align={\"center\"}\r\n      justify={\"center\"}\r\n      animation={{ type: \"fadeIn\" }}\r\n    >\r\n      <Box\r\n        align=\"center\"\r\n        as=\"header\"\r\n        direction=\"row\"\r\n        flex={false}\r\n        justify=\"center\"\r\n        height=\"50px\"\r\n      >\r\n        <Heading level={2}>Spyfall</Heading>\r\n      </Box>\r\n      {gameStage === GameStages.initializing ? (\r\n        <InitializeSpyFall\r\n          setgameStage={setgameStage}\r\n          players={players}\r\n          addPlayer={addPlayer}\r\n        ></InitializeSpyFall>\r\n      ) : gameStage === GameStages.adminStart ? (\r\n        <SpyfallAdminStart\r\n          playersCount={players.length}\r\n          spyAmount={spyAmount}\r\n          setspyAmount={setspyAmount}\r\n          gameLocations={getGameLocations()}\r\n          startPassing={startPassing}\r\n        ></SpyfallAdminStart>\r\n      ) : gameStage === GameStages.passing ? (\r\n        <SpyfallPlayerView\r\n          key={currentPlayerIndex}\r\n          chosenLocation={chosenLocation}\r\n          currentPlayer={players[currentPlayerIndex]}\r\n          isSpy={chosenSpiesIds.includes(currentPlayerIndex)}\r\n          nextPlayer={() => passToNextPlayer()}\r\n          prevPlayer={() => passToPrevPlayer()}\r\n        />\r\n      ) : gameStage === GameStages.playing ? (\r\n        <SpyfallPlaying\r\n          time={time}\r\n          setTime={setTime}\r\n          chosenSpiesIds={chosenSpiesIds}\r\n          finishingRound={finishingRound}\r\n          finishRound={finishRound}\r\n        ></SpyfallPlaying>\r\n      ) : (\r\n        <Box>\r\n          <Stopwatch running={false} time={time} setTime={setTime} />\r\n          <Text>Finished Playing</Text>\r\n          <Text>The spy/ies are:</Text>\r\n          {chosenSpiesIds.map((spyId, i) => (\r\n            <Text key={i}>{players[spyId].name}</Text>\r\n          ))}\r\n          <Button label=\"Next Round!\" onClick={exit}></Button>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Button, Heading, Text, TextInput } from \"grommet\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction getWeightedRandom(items, weights, power = 1) {\r\n  const adjustedWeights = weights.map((weight) => Math.pow(weight, power));\r\n  const totalWeight = adjustedWeights.reduce((sum, weight) => sum + weight, 0);\r\n  let randomValue = Math.random() * totalWeight;\r\n  for (let i = 0; i < items.length; i++) {\r\n    randomValue -= adjustedWeights[i];\r\n    if (randomValue <= 0) {\r\n      return items[i]; // Return the selected item\r\n    }\r\n  }\r\n}\r\n\r\nclass CityAlphabetBot {\r\n  constructor(\r\n    cities,\r\n    prioritize_population_factor = 0.5,\r\n    difficulty_population_size = 5000\r\n  ) {\r\n    this.cities = cities;\r\n    this.prioritize_population_factor = prioritize_population_factor;\r\n    this.difficulty_population_size = difficulty_population_size;\r\n  }\r\n\r\n  guessLetter(currentString) {\r\n    // Return (Did i win (true) or lost (false) or nothing (null),\r\n    //         Next letter)\r\n    let possibleCities = this.cities.filter(([city, weights]) =>\r\n      city.toLowerCase().startsWith(currentString)\r\n    );\r\n    console.info(`Possible Cities length: ${possibleCities.length}`);\r\n    if (possibleCities.length === 0) {\r\n      return [false, \"\"];\r\n    }\r\n    let [cityNames, cityPopulation] = possibleCities.reduce(\r\n      ([firstArr, secondArr], [firstValue, secondValue]) => {\r\n        firstArr.push(firstValue);\r\n        secondArr.push(secondValue);\r\n        return [firstArr, secondArr];\r\n      },\r\n      [[], []]\r\n    );\r\n\r\n    let chosenCity = getWeightedRandom(\r\n      cityNames,\r\n      cityPopulation,\r\n      this.prioritize_population_factor\r\n    );\r\n    console.info(`chosenCity: ${chosenCity}`);\r\n\r\n    if (chosenCity === currentString) {\r\n      // Player finished the city\r\n      this.cities = this.cities.filter(\r\n        ([city, weights]) => city !== chosenCity\r\n      );\r\n      return [true, \"\"];\r\n    }\r\n\r\n    if (chosenCity.slice(0, -1) === currentString) {\r\n      // bot finished the city\r\n      this.cities = this.cities.filter(\r\n        ([city, weights]) => city !== chosenCity\r\n      );\r\n      return [true, chosenCity.slice(-1)];\r\n    }\r\n\r\n    return [\r\n      null,\r\n      chosenCity.slice(currentString.length, currentString.length + 1),\r\n    ];\r\n  }\r\n}\r\n\r\nfunction CityAlphabet(props) {\r\n  const [allCites] = useState(\r\n    require(\"./israel_cities.json\").map(([cityName, population]) => [\r\n      cityName\r\n        .replace(/[-'\" ]/g, \"\")\r\n        .replace(\"ך\", \"כ\")\r\n        .replace(\"ף\", \"פ\")\r\n        .replace(\"ץ\", \"צ\"),\r\n      population,\r\n    ])\r\n  );\r\n  const [currentCharacters, setCurrentCharacters] = useState(\"\");\r\n  const [currentInput, setCurrentInput] = useState(\"\");\r\n  const [finishedCities] = useState([]);\r\n  const [cityAlphabetBot] = useState(new CityAlphabetBot(allCites));\r\n\r\n  useEffect(() => {\r\n    if (currentCharacters !== \"\") {\r\n      return;\r\n    }\r\n    // console.log(allCites);\r\n    console.info(\"starting game...\");\r\n    let guessedLetter = cityAlphabetBot.guessLetter(\"\")[1];\r\n    setCurrentCharacters(guessedLetter);\r\n    setCurrentInput(guessedLetter);\r\n  }, [cityAlphabetBot, currentCharacters, setCurrentInput]);\r\n\r\n  const handleInput = (inputValue) => {\r\n    if (inputValue.slice(0, -1) !== currentCharacters) {\r\n      // invalid response\r\n      if (inputValue && inputValue.length > 0) {\r\n        setCurrentInput(currentCharacters + inputValue.slice(-1));\r\n        return;\r\n      } else {\r\n        setCurrentInput(currentCharacters);\r\n        return;\r\n      }\r\n    }\r\n    setCurrentInput(inputValue);\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      SubmitAnswer();\r\n    }\r\n  };\r\n\r\n  const SubmitAnswer = () => {\r\n    if (currentCharacters === currentInput) {\r\n      return;\r\n    }\r\n    // Bot's turn\r\n    let [botGameResult, botNextLetter] =\r\n      cityAlphabetBot.guessLetter(currentInput);\r\n    let valueToPush = currentInput;\r\n    if (botNextLetter.length > 0) {\r\n      valueToPush += botNextLetter;\r\n    }\r\n    if (botGameResult === true || botGameResult === false) {\r\n      finishedCities.push([botGameResult, valueToPush]);\r\n      setCurrentCharacters(\"\");\r\n      setCurrentInput(\"\");\r\n      return;\r\n    }\r\n    setCurrentInput(valueToPush);\r\n    setCurrentCharacters(valueToPush);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      direction={\"column\"}\r\n      flex={\"grow\"}\r\n      style={{ width: \"100%\" }}\r\n      alignSelf={\"center\"}\r\n    >\r\n      <Box\r\n        flex={{ grow: 1 }}\r\n        align={\"center\"}\r\n        justify={\"center\"}\r\n        animation={{ type: \"fadeIn\" }}\r\n      >\r\n        <Heading>{currentCharacters}</Heading>\r\n\r\n        <TextInput\r\n          placeholder=\"Type your answer here\"\r\n          value={currentInput}\r\n          onKeyDown={handleKeyPress}\r\n          onChange={(event) => handleInput(event.target.value)}\r\n        />\r\n        <Button\r\n          label=\"Submit\"\r\n          onClick={() => SubmitAnswer(currentInput)}\r\n          style={{\r\n            marginTop: \"15px\",\r\n          }}\r\n        />\r\n        <Box>\r\n          {finishedCities.length > 0 ? (\r\n            finishedCities\r\n              .map(([status, cityName], index) => (\r\n                <Box\r\n                  key={index}\r\n                  flex={\"grow\"}\r\n                  direction={\"row\"}\r\n                  align={\"stretch\"}\r\n                  height=\"25px\"\r\n                  wrap={true}\r\n                >\r\n                  <Text color=\"darkslategrey\" style={{ marginRight: \"10px\" }}>\r\n                    {index + 1}\r\n                  </Text>\r\n                  <Text color={status ? \"white\" : \"red\"}>{cityName}</Text>\r\n                </Box>\r\n              ))\r\n              .reverse()\r\n          ) : (\r\n            <Text>No finished games yet...</Text>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CityAlphabet;\r\n","import { Anchor, Box, Grommet } from \"grommet\";\r\nimport React, { useEffect } from \"react\";\r\nimport GitHubButton from \"react-github-btn\";\r\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport { CountryGuesser } from \"./country_guesser/countryGuesser\";\r\nimport useRoutePrefix from \"./functions/useRoutePrefix\";\r\nimport { MindGames } from \"./views/MindGames\";\r\nimport { Spyfall } from \"./views/Spyfall\";\r\nimport CityAlphabet from './components/cityAlphabet/CityAlphabet';\r\n\r\nconst theme = {\r\n  global: {\r\n    font: {\r\n      family: \"Solway\",\r\n    },\r\n  },\r\n  anchor: {\r\n    color: \"light-2\",\r\n  },\r\n  button: {\r\n    pad: \"small\",\r\n    border: {\r\n      color: \"focus\",\r\n      radius: \"18px\",\r\n      width: \"2px\",\r\n    },\r\n    color: \"white\",\r\n  },\r\n};\r\n\r\nclass View {\r\n  constructor(display, url, componment) {\r\n    this.display = display;\r\n    this.url = url;\r\n    this.componment = componment;\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const navigate = useNavigate();\r\n  const [routePrefix] = useRoutePrefix(true);\r\n  const views = [\r\n    new View(\"Mind Games\", \"mind_games\", <MindGames />),\r\n    new View(\r\n      \"Spy Fall\",\r\n      \"spy_fall\",\r\n      <Spyfall exit={() => (window.location.pathname = routePrefix)} />\r\n    ),\r\n    new View(\"Country Guesser\", \"country_guesser\", <CountryGuesser />),\r\n    // new View(\"City Alphabet\", \"city_alphabet\", <CityAlphabet />),\r\n  ];\r\n\r\n  useEffect(() => {\r\n    console.info(`Route prefix: ${routePrefix}`);\r\n  }, [routePrefix]);\r\n\r\n  return (\r\n    <Grommet theme={theme} full>\r\n      <Header\r\n        onClick={(v) => navigate(routePrefix + v)}\r\n        items={{\r\n          Home: \"\",\r\n          ...Object.fromEntries(views.map((view) => [view.display, view.url])),\r\n        }}\r\n      />\r\n      <Box\r\n        background={\"brand\"}\r\n        direction={\"column\"}\r\n        style={{ height: \"95%\", topMargin: \"5%\" }}\r\n      >\r\n        <Routes>\r\n          {views.map((view, i) => (\r\n            <Route\r\n              key={i}\r\n              path={routePrefix + view.url}\r\n              element={\r\n                <Grommet theme={theme} full>\r\n                  {view.componment}\r\n                </Grommet>\r\n              }\r\n            />\r\n          ))}\r\n          <Route path={routePrefix} element={MainMenu(views)} />\r\n        </Routes>\r\n      </Box>\r\n    </Grommet>\r\n  );\r\n}\r\n\r\nexport default App;\r\nfunction MainMenu(views) {\r\n  const [routePrefix] = useRoutePrefix(false);\r\n  return (\r\n    <Box\r\n      background={\"brand\"}\r\n      direction={\"column\"}\r\n      style={{ minHeight: \"100%\" }}\r\n    >\r\n      {views.map((view, i) => (\r\n        <Anchor key={i} alignSelf=\"center\" href={routePrefix + \"/\" + view.url}>\r\n          {i + 1} - {view.display}\r\n        </Anchor>\r\n      ))}\r\n\r\n      <Box\r\n        direction={\"row\"}\r\n        justify={\"end\"}\r\n        style={{ position: \"fixed\", bottom: 0, right: 0 }}\r\n        margin={{ right: \"large\", left: \"large\" }}\r\n      >\r\n        <GitHubButton\r\n          href=\"https://github.com/dansegal10/Doomsday-algorithm-practice\"\r\n          data-icon=\"octicon-star\"\r\n          data-show-count=\"true\"\r\n          aria-label=\"Star me on GitHub\"\r\n        >\r\n          Star\r\n        </GitHubButton>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}